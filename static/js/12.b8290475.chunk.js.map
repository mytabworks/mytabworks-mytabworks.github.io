{"version":3,"sources":["App/Main/Pages/Neumorphism/CommonSetting.js","App/Main/Pages/Neumorphism/Topics/Button/StringCodes.js","App/Main/Pages/Neumorphism/Topics/Button/Sections.js","App/Main/Pages/Neumorphism/Topics/Button/index.js"],"names":["CommonSetting","settingsAllowed","localkey","allowConvex","allowEngrave","allowEngraveWithConcave","allowFloat","max","min","useLocal","getLocal","setLocal","settings","distance","blur","intensity","radius","border","className","id","type","checked","convex","onChange","e","prev","value","htmlFor","engrave","concave","float","map","each","key","variant","message","placement","parseInt","target","Example","ButtonTags","ButtonSize","ActiveState","DisabledState","title","context","code","href","role","disabled","ButtonMain","ButtonSidePanel","button","Button","Meta","description","image","main","side","style","backgroundColor"],"mappings":"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","file":"static/js/12.b8290475.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLocal } from 'Source/App/Storage/Local';\r\nimport Tooltip from 'Snippets/Tooltip'\r\n\r\nexport const CommonSetting = ({\r\n\tsettingsAllowed,\r\n\tlocalkey,\r\n\tallowConvex,\r\n\tallowEngrave,\r\n\tallowEngraveWithConcave,\r\n\tallowFloat,\r\n\tmax,\r\n\tmin\r\n}) => {\r\n\tconst { getLocal, setLocal } = useLocal(localkey);\r\n\tconst settings = getLocal();\r\n\tmax = {distance: 10, blur: 20, intensity: 100, radius: 50, border: 10, ...max}\r\n\tmin = {distance: 1, blur: 2, intensity: 10, radius: 0, border: 1, ...min}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{allowConvex && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-convex'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.convex}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tconst value = 2;\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tconvex: !prev.convex,\r\n\t\t\t\t\t\t\t\t\t\tdistance: value,\r\n\t\t\t\t\t\t\t\t\t\tblur: value * 2,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-convex'>convex</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{allowEngrave && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-engrave'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.engrave}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev, \r\n\t\t\t\t\t\t\t\t\t\tengrave: !prev.engrave\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-engrave'>engrave</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{allowEngraveWithConcave && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-engrave'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.engrave}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tconcave: prev.engrave,\r\n\t\t\t\t\t\t\t\t\t\tengrave: !prev.engrave,\r\n\t\t\t\t\t\t\t\t\t\tborder: 2,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-engrave'>engrave</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{allowFloat && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-float'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.float}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tfloat: !prev.float,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-float'>float</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{settingsAllowed.map((each) => (\r\n\t\t\t\t<li key={each}>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<label>{each}</label>\r\n\t\t\t\t\t\t<Tooltip variant='dark' message={`${settings[each]}`} placement=\"left\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='range'\r\n\t\t\t\t\t\t\t\tvalue={settings[each]}\r\n\t\t\t\t\t\t\t\tmin={min[each]}\r\n\t\t\t\t\t\t\t\tmax={max[each]}\r\n\t\t\t\t\t\t\t\tclassName='n-form-control'\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tconst value = parseInt(e.target.value);\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) =>\r\n\t\t\t\t\t\t\t\t\t\teach === 'distance'\r\n\t\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdistance: value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tblur: value * 2,\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t: { ...prev, [each]: value }\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nCommonSetting.propTypes = {\r\n\tlocalkey: PropTypes.string,\r\n\tsettingsAllowed: PropTypes.arrayOf(\r\n\t\tPropTypes.oneOf(['distance', 'blur', 'intensity', 'radius', 'border'])\r\n\t),\r\n};\r\n","export const Example =`<button class=\"n-btn\" type=\"button\">Button</button>\r\n<button class=\"n-btn\" type=\"button\">\r\n    <i class=\"mytabworks icon-ship\" /> button\r\n</button>\r\n<button class=\"n-btn\" type=\"button\">\r\n    <i class=\"mytabworks icon-anchor\" />\r\n</button>`\r\n\r\nexport const ButtonTags = `<button class=\"n-btn\" type=\"button\">Button</button> \r\n<a class=\"n-btn\" href=\"#\" role=\"button\">Link</a> \r\n<input class=\"n-btn\" type=\"button\" value=\"Input\" /> \r\n<input class=\"n-btn\" type=\"submit\" value=\"Submit\" /> \r\n<input class=\"n-btn\" type=\"reset\" value=\"Reset\" /> `\r\n\r\nexport const ButtonSize = `<button className='n-btn n-btn-xs' type='button'>xs</button>\r\n<button className='n-btn n-btn-sm' type='button'>small</button>\r\n<button className='n-btn n-btn-lg' type='button'>Large</button>`\r\n\r\nexport const ActiveState = `<button class=\"n-btn active\" type=\"button\">Button</button>\r\n<button class=\"n-btn active\" type=\"button\">\r\n    <i class='mytabworks icon-ship' /> button\r\n</button>`\r\n\r\nexport const DisabledState = `<button class=\"n-btn\" type=\"button\" disabled>Button</button>\r\n<button class=\"n-btn\" type=\"button\" disabled>\r\n    <i class='mytabworks icon-ship' /> button\r\n</button>`","import React from 'react';\r\nimport { Section, CodeReadOnly, HoverCopy } from 'Templates';\r\nimport * as code from './StringCodes';\r\nexport const Example = () => (\r\n\t<Section\r\n\t\ttitle='Examples'\r\n\t\tcontext='by adding .n-btn has class you can achieve neumorphic design button.'>\r\n\t\t<>\r\n\t\t\t<HoverCopy code={code.Example}>\r\n\t\t\t\t<CodeReadOnly code={code.Example} />\r\n\t\t\t</HoverCopy>\r\n\t\t\t<button className='n-btn' type='button'>\r\n\t\t\t\tButton\r\n\t\t\t</button>\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t\t<button className='n-btn' type='button'>\r\n\t\t\t\t<i className='mytabworks icon-ship' /> button\r\n\t\t\t</button>\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t\t<button className='n-btn' type='button'>\r\n\t\t\t\t<i className='mytabworks icon-anchor' />\r\n\t\t\t</button>\r\n\t\t</>\r\n\t</Section>\r\n);\r\n\r\nexport const ButtonTags = () => (\r\n\t<Section\r\n\t\ttitle='Button Tags'\r\n\t\tcontext='The .n-btn classes are designed to be used with the <button> element. However, you can also use these classes on <a> or <input> elements'>\r\n\t\t<>\r\n\t\t\t<HoverCopy code={code.ButtonTags}>\r\n\t\t\t\t<CodeReadOnly code={code.ButtonTags} />\r\n\t\t\t</HoverCopy>\r\n\t\t\t<button className='n-btn' type='button'>\r\n\t\t\t\tButton\r\n\t\t\t</button>\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t\t<a className='n-btn' href='#' role='button'>\r\n\t\t\t\tLink\r\n\t\t\t</a>\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t\t<input className='n-btn' type='button' value='Input' />\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t\t<input className='n-btn' type='submit' value='Submit' />\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t\t<input className='n-btn' type='reset' value='Reset' />\r\n\t\t</>\r\n\t</Section>\r\n);\r\n\r\nexport const ButtonSize = () => (\r\n\t<Section\r\n\t\ttitle='Button Sizes'\r\n\t\tcontext='add .n-btn-sm class to make the button small and add .n-btn-lg class to make the button large'>\r\n\t\t<>\r\n\t\t\t<HoverCopy code={code.ButtonSize}>\r\n\t\t\t\t<CodeReadOnly code={code.ButtonSize} />\r\n\t\t\t</HoverCopy>\r\n\t\t\t<button className='n-btn n-btn-xs' type='button'>\r\n\t\t\t\txs\r\n\t\t\t</button>\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t\t<button className='n-btn n-btn-sm' type='button'>\r\n\t\t\t\tsmall\r\n\t\t\t</button>\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t\t<button className='n-btn n-btn-lg' type='button'>\r\n\t\t\t\tLarge\r\n\t\t\t</button>\r\n\t\t</>\r\n\t</Section>\r\n);\r\n\r\nexport const ActiveState = () => (\r\n\t<Section title='Active state' context='Buttons will appear pressed'>\r\n\t\t<>\r\n\t\t\t<HoverCopy code={code.ActiveState}>\r\n\t\t\t\t<CodeReadOnly code={code.ActiveState} />\r\n\t\t\t</HoverCopy>\r\n\t\t\t<button className='n-btn active' type='button'>\r\n\t\t\t\tButton\r\n\t\t\t</button>\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t\t<button className='n-btn active' type='button'>\r\n\t\t\t\t<i className='mytabworks icon-ship' /> button\r\n\t\t\t</button>\r\n\t\t</>\r\n\t</Section>\r\n);\r\n\r\nexport const DisabledState = () => (\r\n\t<Section\r\n\t\ttitle='Disabled state'\r\n\t\tcontext='Make buttons look inactive by adding the disabled'>\r\n\t\t<>\r\n\t\t\t<HoverCopy code={code.DisabledState}>\r\n\t\t\t\t<CodeReadOnly code={code.DisabledState} />\r\n\t\t\t</HoverCopy>\r\n\t\t\t<button className='n-btn' type='button' disabled>\r\n\t\t\t\tButton\r\n\t\t\t</button>\r\n\t\t\t&nbsp;&nbsp;\r\n\t\t\t<button className='n-btn' type='button' disabled>\r\n\t\t\t\t<i className='mytabworks icon-ship' /> button\r\n\t\t\t</button>\r\n\t\t</>\r\n\t</Section>\r\n);\r\n","import React from 'react';\r\nimport { MainContainer, HeadGear } from 'Templates';\r\nimport { CommonSetting } from '../../CommonSetting';\r\nimport { localkey } from 'Source/App/Main/local-config';\r\nimport * as Section from './Sections';\r\n\r\nconst Button = () => { \r\n\tconst title = 'Button';\r\n\tconst context = `it is a neumorphism button which is use for form, actions, etc.`;\r\n\r\n\treturn (\r\n\t\t<>  \r\n            <HeadGear>\r\n                <HeadGear.Meta \r\n\t\t\t\t\ttitle={`${title} - Neumorphism Project | Mytabworks`}\r\n\t\t\t\t\tdescription={context}\r\n\t\t\t\t\timage='/images/icons/icon-512x512.png'\r\n\t\t\t\t/>\r\n            </HeadGear>\r\n\t\t\t<MainContainer \r\n\t\t\t\ttitle={title}\r\n\t\t\t\tcontext={context}\r\n\t\t\t\tmain={<ButtonMain />}\r\n\t\t\t\tside={<ButtonSidePanel />}\r\n\t\t\t\tstyle={{ backgroundColor: 'transparent' }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nButton.propTypes = {};\r\n\r\nconst ButtonMain = () => (\r\n\t<>\r\n\t\t<Section.Example />\r\n\t\t<Section.ButtonTags />\r\n\t\t<Section.ButtonSize />\r\n\t\t<Section.ActiveState />\r\n\t\t<Section.DisabledState />\r\n\t</>\r\n);\r\n\r\nconst ButtonSidePanel = () => (\r\n\t<ul className='scroll-nav'>\r\n\t\t<li>\r\n\t\t\t<h6 className='px-3 py-2 mb-0'>Button Style</h6>\r\n\t\t</li>\r\n\t\t<CommonSetting\r\n\t\t\tlocalkey={localkey.button}\r\n\t\t\tsettingsAllowed={['distance', 'blur', 'intensity', 'radius']}\r\n\t\t\tallowConvex\r\n\t\t/>\r\n\t</ul>\r\n);\r\n\r\nexport default Button;\r\n"],"sourceRoot":""}