{"version":3,"sources":["App/Main/Pages/Neumorphism/CommonSetting.js","App/Main/Pages/Neumorphism/Topics/ProgressBar/StringCodes.js","App/Main/Pages/Neumorphism/Topics/ProgressBar/Sections.js","App/Main/Pages/Neumorphism/Topics/ProgressBar/index.js"],"names":["CommonSetting","settingsAllowed","localkey","allowConvex","allowEngrave","allowEngraveWithConcave","allowFloat","max","min","useLocal","getLocal","setLocal","settings","distance","blur","intensity","radius","border","className","id","type","checked","convex","onChange","e","prev","value","htmlFor","engrave","concave","float","map","each","key","variant","message","placement","parseInt","target","Example","Percentage","title","context","code","style","width","data-percentage","ProgressBarMain","ProgressBarSidePanel","progress","ProgressBar","Meta","description","image","main","side","backgroundColor"],"mappings":"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","file":"static/js/20.d0012bc0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLocal } from 'Source/App/Storage/Local';\r\nimport Tooltip from 'Snippets/Tooltip'\r\n\r\nexport const CommonSetting = ({\r\n\tsettingsAllowed,\r\n\tlocalkey,\r\n\tallowConvex,\r\n\tallowEngrave,\r\n\tallowEngraveWithConcave,\r\n\tallowFloat,\r\n\tmax,\r\n\tmin\r\n}) => {\r\n\tconst { getLocal, setLocal } = useLocal(localkey);\r\n\tconst settings = getLocal();\r\n\tmax = {distance: 10, blur: 20, intensity: 100, radius: 50, border: 10, ...max}\r\n\tmin = {distance: 1, blur: 2, intensity: 10, radius: 0, border: 1, ...min}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{allowConvex && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-convex'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.convex}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tconst value = 2;\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tconvex: !prev.convex,\r\n\t\t\t\t\t\t\t\t\t\tdistance: value,\r\n\t\t\t\t\t\t\t\t\t\tblur: value * 2,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-convex'>convex</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{allowEngrave && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-engrave'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.engrave}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev, \r\n\t\t\t\t\t\t\t\t\t\tengrave: !prev.engrave\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-engrave'>engrave</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{allowEngraveWithConcave && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-engrave'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.engrave}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tconcave: prev.engrave,\r\n\t\t\t\t\t\t\t\t\t\tengrave: !prev.engrave,\r\n\t\t\t\t\t\t\t\t\t\tborder: 2,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-engrave'>engrave</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{allowFloat && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-float'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.float}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tfloat: !prev.float,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-float'>float</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{settingsAllowed.map((each) => (\r\n\t\t\t\t<li key={each}>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<label>{each}</label>\r\n\t\t\t\t\t\t<Tooltip variant='dark' message={`${settings[each]}`} placement=\"left\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='range'\r\n\t\t\t\t\t\t\t\tvalue={settings[each]}\r\n\t\t\t\t\t\t\t\tmin={min[each]}\r\n\t\t\t\t\t\t\t\tmax={max[each]}\r\n\t\t\t\t\t\t\t\tclassName='n-form-control'\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tconst value = parseInt(e.target.value);\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) =>\r\n\t\t\t\t\t\t\t\t\t\teach === 'distance'\r\n\t\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdistance: value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tblur: value * 2,\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t: { ...prev, [each]: value }\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nCommonSetting.propTypes = {\r\n\tlocalkey: PropTypes.string,\r\n\tsettingsAllowed: PropTypes.arrayOf(\r\n\t\tPropTypes.oneOf(['distance', 'blur', 'intensity', 'radius', 'border'])\r\n\t),\r\n};\r\n","export const Example = `<h6>defaults</h6>\r\n<div class=\"n-progress\">\r\n    <div class=\"n-progress-bar\" style=\"width: 100%\" />\r\n</div>\r\n<h6>success</h6>\r\n<div class=\"n-progress\">\r\n    <div class=\"n-progress-bar n-success\" style=\"width: 60%\" />\r\n</div>\r\n<h6>warning</h6>\r\n<div class=\"n-progress\">\r\n    <div class=\"n-progress-bar n-warning\" style=\"width: 30%\" />\r\n</div>\r\n<h6>danger</h6>\r\n<div class=\"n-progress\">\r\n    <div class=\"n-progress-bar n-danger\" style=\"width: 90%\" />\r\n</div>`\r\n\r\nexport const Percentage = `<h6>default</h6>\r\n<div class=\"n-progress\">\r\n    <div class=\"n-progress-bar\" data-percentage=\"100%\" style=\"width: 100%\" />\r\n</div>\r\n<h6>success</h6>\r\n<div class=\"n-progress\">\r\n    <div class=\"n-progress-bar n-success\" data-percentage=\"60%\" style=\"width: 60%\" />\r\n</div>\r\n<h6>warning</h6>\r\n<div class=\"n-progress\">\r\n    <div class=\"n-progress-bar n-warning\" data-percentage=\"30%\" style=\"width: 30%\" />\r\n</div>\r\n<h6>danger</h6>\r\n<div class=\"n-progress\">\r\n    <div class=\"n-progress-bar n-danger\" data-percentage=\"90%\" style=\"width: 90%\" />\r\n</div>`","import React, { useEffect } from 'react';\r\nimport { Section, CodeReadOnly, HoverCopy } from 'Templates';\r\nimport * as code from './StringCodes'; \r\n\r\nexport const Example = () => (\r\n    <Section\r\n        title='Example'\r\n        context={<>progress bar examples with variant of <b>success</b>, <b>warning</b>, and <b>danger</b>.</>}>\r\n        <HoverCopy code={code.Example}>\r\n            <CodeReadOnly code={code.Example} />\r\n        </HoverCopy>\r\n        <h6>default</h6>\r\n        <div className=\"n-progress\">\r\n            <div className=\"n-progress-bar\" style={{width: '100%'}} />\r\n        </div>\r\n        <br/>\r\n        <h6>success</h6>\r\n        <div className=\"n-progress\">\r\n            <div className=\"n-progress-bar n-success\" style={{width: '60%'}} />\r\n        </div>\r\n        <br/>\r\n        <h6>warning</h6>\r\n        <div className=\"n-progress\">\r\n            <div className=\"n-progress-bar n-warning\" style={{width: '30%'}} />\r\n        </div>\r\n        <br/>\r\n        <h6>danger</h6>\r\n        <div className=\"n-progress\">\r\n            <div className=\"n-progress-bar n-danger\" style={{width: '90%'}} />\r\n        </div>\r\n    </Section>\r\n);\r\n\r\nexport const Percentage = () => (\r\n    <Section\r\n        title='Progress bar with percentage'\r\n        context={<>you can also show the percentage by adding a attribute <b>data-percentage=\"60%\"</b> on <b>.n-progress-bar</b> class.</>}>\r\n        <HoverCopy code={code.Percentage}>\r\n            <CodeReadOnly code={code.Percentage} />\r\n        </HoverCopy>\r\n        <br/>\r\n        <h6>default</h6>\r\n        <div className=\"n-progress\">\r\n            <div className=\"n-progress-bar\" data-percentage=\"100%\" style={{width: '100%'}} />\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <h6>success</h6>\r\n        <div className=\"n-progress\">\r\n            <div className=\"n-progress-bar n-success\" data-percentage=\"60%\" style={{width: '60%'}} />\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <h6>warning</h6>\r\n        <div className=\"n-progress\">\r\n            <div className=\"n-progress-bar n-warning\" data-percentage=\"30%\" style={{width: '30%'}} />\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <h6>danger</h6>\r\n        <div className=\"n-progress\">\r\n            <div className=\"n-progress-bar n-danger\" data-percentage=\"90%\" style={{width: '90%'}} />\r\n        </div>\r\n    </Section>\r\n);","import React from 'react';\r\nimport { MainContainer, HeadGear } from 'Templates';\r\nimport { CommonSetting } from '../../CommonSetting';\r\nimport { localkey } from 'Source/App/Main/local-config';\r\nimport * as Section from './Sections';\r\n\r\nconst ProgressBar = () => { \r\n\tconst title = 'Progress Bar';\r\n\tconst context = `it is a progression bar that use to see the progress.`;\r\n\t \r\n\r\n\treturn (\r\n\t\t<>  \r\n            <HeadGear>\r\n                <HeadGear.Meta \r\n\t\t\t\t\ttitle={`${title} - Neumorphism Project | Mytabworks`}\r\n\t\t\t\t\tdescription={context}\r\n\t\t\t\t\timage='/images/icons/icon-512x512.png'\r\n\t\t\t\t/>\r\n            </HeadGear>\r\n\t\t\t<MainContainer \r\n\t\t\t\ttitle={title}\r\n\t\t\t\tcontext={context}\r\n\t\t\t\tmain={<ProgressBarMain />}\r\n\t\t\t\tside={<ProgressBarSidePanel />}\r\n\t\t\t\tstyle={{ backgroundColor: 'transparent' }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nProgressBar.propTypes = {};\r\n\r\nconst ProgressBarMain = () => (\r\n\t<>\r\n\t\t<Section.Example /> \r\n\t\t<Section.Percentage />\r\n\t</>\r\n);\r\n\r\nconst ProgressBarSidePanel = () => (\r\n\t<ul className='scroll-nav'>\r\n\t\t<li>\r\n\t\t\t<h6 className='px-3 py-2 mb-0'>Progress Bar Style</h6>\r\n\t\t</li>\r\n\t\t<CommonSetting\r\n\t\t\tlocalkey={localkey.progress}\r\n\t\t\tsettingsAllowed={['distance', 'blur', 'intensity', 'border']}\r\n\t\t\tallowEngraveWithConcave\r\n\t\t/>\r\n\t</ul>\r\n);\r\n\r\nexport default ProgressBar"],"sourceRoot":""}