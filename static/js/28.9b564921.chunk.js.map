{"version":3,"sources":["App/Main/Pages/React/Topics/Chaperone/Sections.js","App/Main/Pages/React/Topics/Chaperone/StringCodes.js","App/Main/Pages/React/Topics/Chaperone/Tables.js","App/Main/Pages/React/Topics/Chaperone/index.js"],"names":["Installation","readonly","title","code","language","theme","plain","color","backgroundColor","styles","Importing","GettingStarted","context","scope","chaperone","style","marginTop","marginBottom","ChaperoneStepSingleton","ChaperoneMultipleID","variant","ChaperoneWithGestures","ChaperoneRows","name","type","default","description","data","StepEventData","LoadEventData","ChaperoneStepRows","sample","TriggerRows","Chaperone","ForAPI","ChaperoneStep","Trigger","ChaperoneMain","ChaperoneSidePanel","ScrollNav","list","label","sub","Meta","slice","image","main","side"],"mappings":"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","file":"static/js/28.9b564921.chunk.js","sourcesContent":["import React from 'react';\r\nimport { SectionWithCode, Note } from 'Templates';\r\nimport * as chaperone from 'chaperone';\r\nimport * as code from './StringCodes';\r\n\r\nexport const Installation = () => (\r\n\t<SectionWithCode\r\n\t\treadonly\r\n\t\ttitle='Installation'\r\n\t\tcode={`npm i chaperone`}\r\n\t\tlanguage='js'\r\n\t\ttheme={{\r\n\t\t\tplain: {\r\n\t\t\t\tcolor: 'rgb(215,215,215)',\r\n\t\t\t\tbackgroundColor: 'rgb(86,86,86)',\r\n\t\t\t},\r\n\t\t\tstyles: [],\r\n\t\t}}\r\n\t/>\r\n);\r\n\r\nexport const Importing = () => (\r\n\t<SectionWithCode readonly title='Imports' code={code.Importing} />\r\n);\r\n\r\nexport const GettingStarted = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\ttitle='Getting Started'\r\n\t\t\tcontext='it is the basic usage of chaperone.'\r\n\t\t\tscope={{ ...chaperone }}\r\n\t\t\tcode={code.GettingStarted}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tcontext={\r\n\t\t\t\t<>\r\n\t\t\t\t\tDon't forget to assign <b>isDone</b> at the last step or else it will\r\n\t\t\t\t\tthrow exception.\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\tstyle={{ marginTop: '-20px', marginBottom: '20px' }}\r\n\t\t/>\r\n\t</>\r\n);\r\n\r\nexport const ChaperoneStepSingleton = () => (\r\n\t<SectionWithCode\r\n\t\ttitle='ChaperoneStep Singleton'\r\n\t\tcontext={\r\n\t\t\t<>\r\n\t\t\t\tit is use to make multiple and different id steps in single{' '}\r\n\t\t\t\t<b>ChaperoneStep</b>.\r\n\t\t\t</>\r\n\t\t}\r\n\t\tscope={{ ...chaperone }}\r\n\t\tcode={code.ChaperoneStepSingleton}\r\n\t/>\r\n);\r\n\r\nexport const ChaperoneMultipleID = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\ttitle='Multiple ID and Chaining'\r\n\t\t\tcontext={\r\n\t\t\t\t<>\r\n\t\t\t\t\tyou can create multiple guide in single <b>Chaperone</b> and you can\r\n\t\t\t\t\tchain another ID after done or skip.\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\tscope={{ ...chaperone }}\r\n\t\t\tcode={code.ChaperoneMultipleID}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tvariant='danger'\r\n\t\t\tcontext={\r\n\t\t\t\t<>\r\n\t\t\t\t\tyou must be extra careful when using <b>onDone</b> and <b>onSkip</b>{' '}\r\n\t\t\t\t\tin <b>Chaperone</b> component. especially if the component is having\r\n\t\t\t\t\tsome sort of state. or else it will be called infinitely and will\r\n\t\t\t\t\tcause error in your app. as much as posible use hook{' '}\r\n\t\t\t\t\t<b>useCallback</b> without array dependency to prevent some sort of\r\n\t\t\t\t\terror any further.\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\tstyle={{ marginTop: '-20px', marginBottom: '20px' }}\r\n\t\t/>\r\n\t</>\r\n);\r\n\r\nexport const ChaperoneWithGestures = () => (\r\n\t<SectionWithCode\r\n\t\ttitle='Chaperone With Gestures'\r\n\t\tcontext={<>you can create and append gestures.</>}\r\n\t\tscope={{ ...chaperone }}\r\n\t\tcode={code.ChaperoneWithGestures}\r\n\t/>\r\n);\r\n","export const Importing = `import { Chaperone, ChaperoneStep, Trigger } from \"chaperone\";`;\r\n\r\nexport const GettingStarted = `import React from \"react\";\r\nimport { Chaperone, ChaperoneStep, Trigger } from \"chaperone\";\r\n\r\n#render(\r\n    <div className=\"container\">  \r\n        <Chaperone>\r\n            <Trigger label=\"Need Help?\" />\r\n            <form className=\"mt-3\">\r\n                <div className=\"n-form-field\">\r\n                    <label htmlFor=\"gs-email\">Email address</label>\r\n                    <ChaperoneStep \r\n                        index={0} \r\n                        message=\"To Login. Firstly, you must type your e-mail here.\" \r\n                        placement=\"top-right\">\r\n                        <input \r\n                            type=\"email\" \r\n                            className=\"n-form-control\" \r\n                            id=\"gs-email\" \r\n                            aria-describedby=\"emailHelp\" \r\n                            style={{backgroundColor: \"transparent\"}} />\r\n                    </ChaperoneStep>\r\n                </div>\r\n                <div className=\"n-form-field\">\r\n                    <label htmlFor=\"gs-pass\">Password</label>\r\n                    <ChaperoneStep \r\n                        index={1} \r\n                        message=\"Secondly, you must put your password here.\" \r\n                        placement=\"top-right\">\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"n-form-control\" \r\n                            id=\"gs-pass\" \r\n                            style={{backgroundColor: \"transparent\"}} />\r\n                    </ChaperoneStep> \r\n                </div> \r\n                <div className=\"n-form-field\"> \r\n                    <label className=\"n-form-check\">\r\n                        <ChaperoneStep \r\n                            index={2} \r\n                            message={<>Thirdly, if you want to remember the app your inputs just click <b>remember me</b>.</>} \r\n                            placement=\"left\">\r\n                            <input className=\"n-form-control\" type=\"checkbox\" /> \r\n                        </ChaperoneStep> \r\n                        remember me\r\n                    </label> \r\n                </div>\r\n                <ChaperoneStep \r\n                    isDone \r\n                    index={3} \r\n                    message={<>Lastly, you must press <b>Submit</b>.</>}>\r\n                    <button type=\"button\" className=\"n-btn\">Submit</button>\r\n                </ChaperoneStep> \r\n            </form>\r\n        </Chaperone>\r\n    </div>\r\n)`;\r\n\r\nexport const ChaperoneStepSingleton = `import React from \"react\";\r\nimport { Chaperone, ChaperoneStep, Trigger } from \"chaperone\";\r\nconst chaperoneData = [\r\n    {\r\n        index: 0,\r\n        message: <b>Hello there!!</b>,\r\n        find: \"img\"\r\n    },\r\n    {\r\n        index: 1,\r\n        message: \"I'am Fernando.\",\r\n        placement: \"left\",\r\n        find: \"#p-name\"\r\n    },\r\n    {\r\n        index: 2,\r\n        message: <>aka <b>Mytabworks</b></>,\r\n        placement: \"bottom-right\",\r\n        find: (children) => children.querySelector(\"#p-aka\")\r\n    },\r\n    {\r\n        index: 3,\r\n        message: \"It can even find outside the children scope.\",\r\n        placement: \"bottom\",\r\n        isDone: true,\r\n        find: () => document.querySelector(\"#chaperonestep-singleton > div\")\r\n    }\r\n]\r\n#render(\r\n    <div className=\"container mb-4\">  \r\n        <Chaperone>\r\n            <Trigger label=\"click here to know me.\" allowTransition />\r\n            <ChaperoneStep\r\n                navigation={chaperoneData.length}\r\n                placement=\"top-right\"\r\n                propertyMutation={({ index, currentId }, defaultProps) => {\r\n                    return {\r\n                        ...defaultProps, \r\n                        ...chaperoneData.find(props => props.index === index)\r\n                    }\r\n                }}>\r\n                <div className=\"d-flex flex-center-y mt-4\">\r\n                    <img className=\"b-round mr-4\" src=\"/images/icons/icon-128x128.png\" alt=\"beard-man\"/>\r\n                    <span id=\"p-name\" className=\"mr-1\">Fernando</span>\r\n                    <span id=\"p-aka\">(Mytabworks)</span>\r\n                </div>\r\n            </ChaperoneStep>\r\n        </Chaperone>\r\n    </div>\r\n)`;\r\n\r\nexport const ChaperoneMultipleID = `import React from \"react\";\r\nimport { Chaperone, ChaperoneStep, Trigger } from \"chaperone\";\r\n\r\n#render(\r\n    <div className=\"container\">  \r\n        <Chaperone onDone={({previousId, trigger}) => {\r\n            if(previousId === \"guide-email\") {\r\n                trigger(\"guide-password\")\r\n            }\r\n        }}>\r\n            <Trigger id=\"guide-email\" label=\"Email Help?\" allowTransition /><br/>\r\n            <Trigger id=\"guide-password\" label=\"Password Help?\" allowTransition /><br/>\r\n            <form className=\"mt-3\">\r\n                <div className=\"n-form-field\">\r\n                    <ChaperoneStep \r\n                        navigation={2}\r\n                        id=\"guide-email\" \r\n                        index={0} \r\n                        message=\"It is the Email address label.\" \r\n                        placement=\"top-right\"\r\n                        allowSkip={false}>\r\n                        <label htmlFor=\"mi-email\">Email address</label>\r\n                    </ChaperoneStep>\r\n                    <ChaperoneStep \r\n                        isDone\r\n                        navigation={2}\r\n                        id=\"guide-email\" \r\n                        index={1} \r\n                        message=\"you must type your valid e-mail here.\" \r\n                        placement=\"right-top\"\r\n                        onDone={({target, children, dialog}) => { \r\n                            const test = /^\\\\w+@\\\\w+\\\\.[a-z]{2,4}$/.test(children.value)\r\n                            children.style.borderColor = test ? null : 'red'\r\n                            return test\r\n                        }}>\r\n                        <input \r\n                            type=\"email\" \r\n                            className=\"n-form-control\" \r\n                            id=\"mi-email\" \r\n                            aria-describedby=\"emailHelp\" \r\n                            style={{backgroundColor: \"transparent\"}} />\r\n                    </ChaperoneStep>\r\n                </div>\r\n                <div className=\"n-form-field\">\r\n                    <ChaperoneStep \r\n                        id=\"guide-password\" \r\n                        index={0} \r\n                        message=\"It is the password label.\" \r\n                        placement=\"top-right\"\r\n                        allowSkip={false}>\r\n                        <label htmlFor=\"mi-pass\">Password</label>\r\n                    </ChaperoneStep>\r\n                    <ChaperoneStep \r\n                        isDone\r\n                        id=\"guide-password\" \r\n                        index={1} \r\n                        message=\"you must put your password here.\" \r\n                        placement=\"top-right\">\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"n-form-control\" \r\n                            id=\"mi-pass\" \r\n                            style={{backgroundColor: \"transparent\"}} />\r\n                    </ChaperoneStep> \r\n                </div>  \r\n                <div className=\"n-form-field\"> \r\n                    <label className=\"n-form-check\">\r\n                        <input className=\"n-form-control\" type=\"checkbox\" /> \r\n                        remember me\r\n                    </label> \r\n                </div>\r\n                <button type=\"button\" className=\"n-btn\">Submit</button>\r\n            </form>\r\n        </Chaperone>\r\n    </div>\r\n)`;\r\n\r\nexport const ChaperoneWithGestures = `import React from \"react\";\r\nimport { Chaperone, ChaperoneStep, Trigger } from \"chaperone\";\r\n\r\n#render(\r\n    <div className=\"container\">  \r\n        <Chaperone>\r\n            <Trigger label=\"Need Help?\" allowTransition /><br/> \r\n            <form>\r\n                <div className=\"row\">\r\n                    <div className=\"n-form-field column-md-6\">\r\n                        <label htmlFor=\"inputEmail4\">Email</label>\r\n                        <ChaperoneStep\r\n                            allowNext={false}\r\n                            allowBack={false} \r\n                            propertyMutation={({ currentId, index }, defaultProps) => {\r\n                                const props = [\r\n                                    {\r\n                                        index: 0, \r\n                                        message: \"click the email input box.\",\r\n                                        placement: \"top-right\",\r\n                                        allowNextOnClick: true,\r\n                                        gesture: (\r\n                                            <div className=\"custom-click-gesture\">\r\n                                                <i className=\"mytabworks hand-pointer\"/>\r\n                                            </div>\r\n                                        )\r\n                                    },\r\n                                    {\r\n                                        index: 1, \r\n                                        message: \"input a valid e-mail address.\",\r\n                                        placement: \"right\",\r\n                                        allowNextOnType: true,\r\n                                        onNext: ({target, children, dialog}) => { \r\n                                            const test = /^\\\\w+@\\\\w+\\\\.[a-z]{2,4}$/.test(children.value)\r\n                                            children.style.borderColor = test ? null : 'red'\r\n                                            return test\r\n                                        },\r\n                                        gesture: (\r\n                                            <div className=\"custom-typing-gesture\">\r\n                                                <i className=\"mytabworks icon-keyboard\"/>\r\n                                            </div>\r\n                                        )\r\n                                    },\r\n                                ]\r\n                                return { \r\n                                    ...defaultProps,\r\n                                    ...props.find((each) => each.index === index)\r\n                                }\r\n                            }}>\r\n                            <input type=\"email\" className=\"n-form-control\" id=\"inputEmail4\" placeholder=\"Email\"/>\r\n                        </ChaperoneStep>\r\n                    </div>\r\n                    <div className=\"n-form-field column-md-6\">\r\n                        <label htmlFor=\"inputPassword4\">Password</label>\r\n                        <ChaperoneStep \r\n                            allowNext={false}\r\n                            allowBack={false} \r\n                            propertyMutation={({ currentId, index }, defaultProps) => {\r\n                                const props = [\r\n                                    {\r\n                                        index: 2, \r\n                                        message: \"click the password input box.\",\r\n                                        placement: \"top-right\", \r\n                                        allowNextOnClick: true,\r\n                                        gesture: (\r\n                                            <div className=\"custom-click-gesture\">\r\n                                                <i className=\"mytabworks hand-pointer\"/>\r\n                                            </div>\r\n                                        )\r\n                                    },\r\n                                    {\r\n                                        index: 3, \r\n                                        message: \"input your password.\",\r\n                                        placement: \"right\",\r\n                                        allowNextOnType: true,\r\n                                        onNext: ({target, children, dialog}) => {  \r\n                                            const test = target.value.length > 7\r\n                                            children.style.borderColor = test ? null : 'red'\r\n                                            return test\r\n                                        },\r\n                                        gesture: (\r\n                                            <div className=\"custom-typing-gesture\">\r\n                                                <i className=\"mytabworks icon-keyboard\"/>\r\n                                            </div>\r\n                                        )\r\n                                    },\r\n                                ]\r\n                                return { \r\n                                    ...defaultProps,\r\n                                    ...props.find((each) => each.index === index)\r\n                                }\r\n                            }}>\r\n                            <input type=\"password\" className=\"n-form-control\" id=\"inputPassword4\" placeholder=\"Password\" />\r\n                        </ChaperoneStep>\r\n                    </div>\r\n                </div>\r\n                <div className=\"n-form-field\">\r\n                    <label htmlFor=\"inputAddress\">Address</label>\r\n                    <input type=\"text\" className=\"n-form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" />\r\n                </div>\r\n                <div className=\"n-form-field\">\r\n                    <label htmlFor=\"inputAddress2\">Address 2</label>\r\n                    <input type=\"text\" className=\"n-form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"n-form-field column-md-6\">\r\n                        <label htmlFor=\"inputCity\">City</label>\r\n                        <input type=\"text\" className=\"n-form-control\" id=\"inputCity\" />\r\n                    </div>\r\n                    <div className=\"n-form-field column-md-4\">\r\n                        <label htmlFor=\"inputState\">State</label>\r\n                        <select id=\"inputState\" className=\"n-form-control\">\r\n                        <option>Choose...</option>\r\n                        <option>...</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"n-form-field column-md-2\">\r\n                        <label htmlFor=\"inputZip\">Zip</label>\r\n                        <input type=\"text\" className=\"n-form-control\" id=\"inputZip\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"n-form-field\"> \r\n                    <label className=\"n-form-check\">\r\n                        <input className=\"n-form-control\" type=\"checkbox\" /> \r\n                        Check me out\r\n                    </label> \r\n                </div>\r\n                <ChaperoneStep \r\n                    isDoneOnClick\r\n                    index={4}\r\n                    message=\"submit your input.\"\r\n                    gesture={(\r\n                        <div className=\"custom-click-gesture\">\r\n                            <i className=\"mytabworks hand-pointer\"/>\r\n                        </div>\r\n                    )}>\r\n                    <button type=\"button\" className=\"n-btn\">Sign in</button>\r\n                </ChaperoneStep>\r\n            </form>\r\n        </Chaperone>\r\n    </div>\r\n)`; ","import React from 'react';\r\nimport { Section, Table, Note, SectionWithCode } from 'Templates';\r\n\r\nconst ChaperoneRows = [\r\n\t{\r\n\t\tname: 'autoTrigger',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'false',\r\n\t\tdescription:\r\n\t\t\t'When true, it will be triggered immidiately without clicking the trigger',\r\n\t},\r\n\t{\r\n\t\tname: 'id',\r\n\t\ttype: 'string',\r\n\t\tdefault: '-',\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tIt is the <b>ID</b> of the <b>autoTrigger</b>\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tname: 'onSkip',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tIt will be executed if the children <b>ChaperoneStep</b> is skipped. you\r\n\t\t\t\tmust be extra careful when using <b>onSkip</b>. especially if the\r\n\t\t\t\tcomponent is having some sort of state. or else it will be called\r\n\t\t\t\tinfinitely and will cause error in your app. as much as posible use hook{' '}\r\n\t\t\t\t<b>useCallback</b> without array dependency to prevent some sort of\r\n\t\t\t\terror any further.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'function ({',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'previousId,',\r\n\t\t\t\ttype: 'string',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'the previous id that is skipped.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'indexEnded,',\r\n\t\t\t\ttype: 'number',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'the index which the chaperone skipped.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'trigger,',\r\n\t\t\t\ttype: 'function',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'it is use to trigger another id after skip.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'function (',\r\n\t\t\t\t\t\ttype: '',\r\n\t\t\t\t\t\tdefault: '',\r\n\t\t\t\t\t\tdescription: '',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'id,',\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'the id you want to trigger.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'index',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tdefault: '0',\r\n\t\t\t\t\t\tdescription: 'the index it will start.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: '}) { return void }',\r\n\t\t\t\t\t\ttype: '',\r\n\t\t\t\t\t\tdefault: '',\r\n\t\t\t\t\t\tdescription: '',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: '}) { return void }',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'onDone',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tIt will be executed when the children <b>ChaperoneStep</b> is done. you\r\n\t\t\t\tmust be extra careful when using <b>onDone</b>.\r\n\t\t\t\tespecially if the component is having some sort of state. or else it\r\n\t\t\t\twill be called infinitely and will cause error in your app. as much as\r\n\t\t\t\tposible use hook <b>useCallback</b> without array dependency to prevent\r\n\t\t\t\tsome sort of error any further.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'function ({',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'previousId,',\r\n\t\t\t\ttype: 'string',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'the previous id that is done.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'indexEnded,',\r\n\t\t\t\ttype: 'number',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'the index which the chaperone done.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'trigger,',\r\n\t\t\t\ttype: 'function',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'it is use to trigger another id after done.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'function (',\r\n\t\t\t\t\t\ttype: '',\r\n\t\t\t\t\t\tdefault: '',\r\n\t\t\t\t\t\tdescription: '',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'id,',\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'the id you want to trigger.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'index',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tdefault: '0',\r\n\t\t\t\t\t\tdescription: 'the index it will start.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: '}) { return void }',\r\n\t\t\t\t\t\ttype: '',\r\n\t\t\t\t\t\tdefault: '',\r\n\t\t\t\t\t\tdescription: '',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: '}) { return void }',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'waitSearchIndex',\r\n\t\ttype: 'number',\r\n\t\tdefault: '50',\r\n\t\tdescription: 'It is the waiting time when searching indexes',\r\n\t},\r\n\t{\r\n\t\tname: 'children',\r\n\t\ttype: 'element',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'A children element to render.',\r\n\t},\r\n];\r\n\r\nconst StepEventData = [\r\n\t{\r\n\t\tname: 'function ({',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n\t{\r\n\t\tname: 'target,',\r\n\t\ttype: 'element',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the element that triggered this function.',\r\n\t},\r\n\t{\r\n\t\tname: 'children,',\r\n\t\ttype: 'element',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the children of ChaperoneStep.',\r\n\t},\r\n\t{\r\n\t\tname: 'dialog',\r\n\t\ttype: 'element',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the element of the dialog of ChaperoneStep.',\r\n\t},\r\n\t{\r\n\t\tname: '}) { return boolean }',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n];\r\n\r\nconst LoadEventData = [\r\n\t{\r\n\t\tname: 'function ({',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n\t{\r\n\t\tname: 'target,',\r\n\t\ttype: 'element',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the children of ChaperoneStep.',\r\n\t},\r\n\t{\r\n\t\tname: 'dialog',\r\n\t\ttype: 'element',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the element of the dialog of ChaperoneStep.',\r\n\t},\r\n\t{\r\n\t\tname: 'currentId',\r\n\t\ttype: 'string',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the id of ChaperoneStep.',\r\n\t},\r\n\t{\r\n\t\tname: 'index',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the index of the ChaperoneStep.',\r\n\t},\r\n\t{\r\n\t\tname: '}) { return boolean }',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n];\r\n\r\nconst ChaperoneStepRows = [\r\n\t{\r\n\t\tname: 'id',\r\n\t\ttype: 'string',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'It is use to identify which set of step will be trigger since you can use multiple set of steps to trigger inside Chaperone.',\r\n\t},\r\n\t{\r\n\t\tname: 'index',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'It is use to determine on what index should this component will be pop.',\r\n\t},\r\n\t{\r\n\t\tname: 'message',\r\n\t\ttype: 'string | element',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the message of the popover.',\r\n\t},\r\n\t{\r\n\t\tname: 'placement',\r\n\t\ttype: `'top'  \r\n\t| 'bottom'  \r\n\t| 'left'  \r\n\t| 'right'  \r\n\t| 'top-left'  \r\n\t| 'top-right'  \r\n\t| 'bottom-left'  \r\n\t| 'bottom-right'  \r\n\t| 'left-top'  \r\n\t| 'left-bottom'  \r\n\t| 'right-top'  \r\n\t| 'right-bottom'`,\r\n\t\tdefault: 'bottom-right',\r\n\t\tdescription: 'It is the placement of the popover.',\r\n\t},\r\n\t{\r\n\t\tname: 'duration',\r\n\t\ttype: 'miliseconds|number',\r\n\t\tdefault: '200',\r\n\t\tdescription: 'It the duration of the transitions.',\r\n\t},\r\n\t{\r\n\t\tname: 'navigation',\r\n\t\ttype: 'number',\r\n\t\tdefault: '0',\r\n\t\tdescription:\r\n\t\t\t'It is use to show the navigation and how many bullets will be render. most commonly the number of your set steps. when 0, it will be hidden',\r\n\t},\r\n\t{\r\n\t\tname: 'children',\r\n\t\ttype: 'element',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It will be highligthened target of the step.',\r\n\t},\r\n\t{\r\n\t\tname: 'autoScrollDelay',\r\n\t\ttype: 'miliseconds | number',\r\n\t\tdefault: '150',\r\n\t\tdescription:\r\n\t\t\t'It is the delay when chasing the next or previous step viewport after triggered.',\r\n\t},\r\n\t{\r\n\t\tname: 'find',\r\n\t\ttype: 'string | function',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It use to select element within or outside the children.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'function (',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'firstElementChild',\r\n\t\t\t\ttype: 'element',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'It is the children of ChaperoneStep.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: ') { return element }',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'allowSkip',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'true',\r\n\t\tdescription: 'When false, the skip button will be hidden.',\r\n\t},\r\n\t{\r\n\t\tname: 'allowBack',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'true',\r\n\t\tdescription: 'When false, the back step button will be hidden.',\r\n\t},\r\n\t{\r\n\t\tname: 'allowNext',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'true',\r\n\t\tdescription: 'When false, the next step button will be hidden.',\r\n\t},\r\n\t{\r\n\t\tname: 'allowNextOnClick',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'false',\r\n\t\tdescription:\r\n\t\t\t'When true, the next step is allowed to be triggered by hitting the highlightened element.',\r\n\t},\r\n\t{\r\n\t\tname: 'allowNextOnType',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'false',\r\n\t\tdescription:\r\n\t\t\t'When true, the next step is allowed to be triggered by typing the highlightened form input element.',\r\n\t},\r\n\t{\r\n\t\tname: 'isDone',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'false',\r\n\t\tdescription:\r\n\t\t\t'When true, the done button will be shown, and it is use to tell chaperone that it is the last step. it is required to put it one your last steps on every set or it will bring some error.',\r\n\t},\r\n\t{\r\n\t\tname: 'isDoneOnClick',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'false',\r\n\t\tdescription:\r\n\t\t\t'When true, done is allowed to be triggered by clicking the highlightened element.',\r\n\t},\r\n\t{\r\n\t\tname: 'backToIndex',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'It is use to jump back a certain index when clicking the back button.',\r\n\t},\r\n\t{\r\n\t\tname: 'nextToIndex',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'It is use to jump on a certain index when triggering all the next event.',\r\n\t},\r\n\t{\r\n\t\tname: 'onNext',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tIt will be executed when you triggered all the <b>next</b> events. when\r\n\t\t\t\tyou <b>return</b> <b>false</b> it will be prevented to go next.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdata: StepEventData,\r\n\t},\r\n\t{\r\n\t\tname: 'onBack',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tIt will be executed when you clicking the <b>back</b> <b>button</b>.\r\n\t\t\t\twhen you <b>return</b> <b>false</b> it will prevented you to go back.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdata: StepEventData,\r\n\t},\r\n\t{\r\n\t\tname: 'onSkip',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tIt will be executed when you clicking the <b>skip</b> <b>button</b>.\r\n\t\t\t\twhen you <b>return</b> <b>false</b> it will prevented you to skip.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdata: StepEventData,\r\n\t},\r\n\t{\r\n\t\tname: 'onDone',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tIt will be executed when you triggered all the <b>done</b> events. when\r\n\t\t\t\tyou <b>return</b> <b>false</b> it will prevented you to done.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdata: StepEventData,\r\n\t},\r\n\t{\r\n\t\tname: 'onLoad',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription: <>It will be executed when the entering step.</>,\r\n\t\tdata: LoadEventData,\r\n\t},\r\n\t{\r\n\t\tname: 'onUnLoad',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'It will be executed when leaving step. it is use to cleanup your onLoad messes.',\r\n\t\tdata: LoadEventData,\r\n\t},\r\n\t{\r\n\t\tname: 'gesture',\r\n\t\ttype: 'element | function',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It will allow you to render a gestures.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'function (',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'childrenRef',\r\n\t\t\t\ttype: 'createRef',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'it is the reference of the children.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: ') { return element }',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'background',\r\n\t\ttype: 'object',\r\n\t\tdefault: `{}`,\r\n\t\tdescription:\r\n\t\t\t'It allows you to customize the styles of the backdrop, highlight, and gesture.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'backdropStyle',\r\n\t\t\t\ttype: 'object',\r\n\t\t\t\tdefault: '{}',\r\n\t\t\t\tdescription: 'you can style the backdrop.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'highlightStyle',\r\n\t\t\t\ttype: 'object',\r\n\t\t\t\tdefault: '{}',\r\n\t\t\t\tdescription: 'you can style the highlight.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'gestureStyle',\r\n\t\t\t\ttype: 'object',\r\n\t\t\t\tdefault: '{}',\r\n\t\t\t\tdescription: 'you can style the gesture container.',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'propertyMutation',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'It allows you to make a multiple steps by providing you the currentId and index, and using the defaultProps to get the pre-assigned props.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'function ({',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'index,',\r\n\t\t\t\ttype: 'number',\r\n\t\t\t\tdefault: '-1',\r\n\t\t\t\tdescription: 'it is the current index called by chaperone.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'currentId',\r\n\t\t\t\ttype: 'string',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription:\r\n\t\t\t\t\t'it is the current ID called by chaperone especially when multiple.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: '},',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'defaultProps',\r\n\t\t\t\ttype: 'object',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription:\r\n\t\t\t\t\t'It is the ChaperoneStep props both assigned and the dafault.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: ') { return object }',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'neumorphism',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'false',\r\n\t\tdescription: 'When true, it change the style of the popover.',\r\n\t},\r\n\t{\r\n\t\tname: 'hideEvidence',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'true',\r\n\t\tdescription:\r\n\t\t\t'When false, it will not re-render when find matches on every events and will not hide the wrapper <div/> to the children.',\r\n\t\tsample: '',\r\n\t},\r\n];\r\n\r\nconst TriggerRows = [\r\n\t{\r\n\t\tname: 'as',\r\n\t\ttype: 'elementType',\r\n\t\tdefault: '<a>',\r\n\t\tdescription: 'You can use a custom element type for this component.',\r\n\t},\r\n\t{\r\n\t\tname: 'label',\r\n\t\ttype: 'string|element',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the label of the trigger.',\r\n\t},\r\n\t{\r\n\t\tname: 'id',\r\n\t\ttype: 'string',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is use to determine which set will be open.',\r\n\t},\r\n\t{\r\n\t\tname: 'index',\r\n\t\ttype: 'number',\r\n\t\tdefault: '0',\r\n\t\tdescription: 'It is use to determine which index of the set will be open.',\r\n\t},\r\n\t{\r\n\t\tname: 'allowTransition',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'false',\r\n\t\tdescription: 'When true, it allows you to transition effect the highlight.',\r\n\t},\r\n];\r\nexport const Chaperone = () => (\r\n\t<Section title='Chaperone' context='It is the chaperone.'>\r\n\t\t<Table.ForAPI data={ChaperoneRows} />\r\n\t</Section>\r\n);\r\n\r\nexport const ChaperoneStep = () => (\r\n\t<Section title='ChaperoneStep' context='It is the chaperone step.'>\r\n\t\t<Table.ForAPI data={ChaperoneStepRows} />\r\n\t</Section>\r\n);\r\n\r\nexport const Trigger = () => (\r\n\t<Section title='Trigger' context='It is the trigger to the chaperone.'>\r\n\t\t<Table.ForAPI data={TriggerRows} />\r\n\t</Section>\r\n);\r\n","import React from 'react'; \r\nimport { MainContainer, SidePanel, Article, HeadGear } from 'Templates';\r\nimport * as Section from './Sections';\r\nimport * as Table from './Tables';\r\n\r\nconst Chaperone = () => { \r\n\tconst title = 'Chaperone (not publish yet)';\r\n\tconst context = `is a react library which helps and guide the user interacts with UI step by step to have a better user experience in your react components. \r\n\tChaperone gives you alot of option with such ability to make your user experience alot better. it allow such gesture to tell the user what to do next even without reading the dialog.\r\n\tit is even flexible in any component whether it is forwardRef or not.`;\r\n\r\n\treturn (\r\n\t\t<>  \r\n            <HeadGear>\r\n                <HeadGear.Meta \r\n\t\t\t\t\ttitle={`${title} - React Libraries | Mytabworks`}\r\n\t\t\t\t\tdescription={context.slice(0, 100)}\r\n\t\t\t\t\timage='/images/icons/icon-512x512.png'\r\n\t\t\t\t/>\r\n            </HeadGear>\r\n\t\t\t<MainContainer \r\n\t\t\t\ttitle={title}\r\n\t\t\t\tcontext={context}\r\n\t\t\t\tmain={<ChaperoneMain />}\r\n\t\t\t\tside={<ChaperoneSidePanel />}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nChaperone.propTypes = {};\r\n\r\nconst ChaperoneMain = () => (\r\n\t<>\r\n\t\t<Section.Installation />\r\n\t\t<Section.Importing />\r\n\t\t<Section.GettingStarted />\r\n\t\t<Section.ChaperoneStepSingleton />\r\n\t\t<Section.ChaperoneMultipleID />\r\n\t\t<Section.ChaperoneWithGestures />\r\n\t\t<Article title='API'>\r\n\t\t\t<Table.Chaperone />\r\n\t\t\t<Table.ChaperoneStep />\r\n\t\t\t<Table.Trigger />\r\n\t\t</Article>\r\n\t</>\r\n);\r\n\r\nconst ChaperoneSidePanel = () => {\r\n\tconst list = [\r\n\t\t{ label: 'Installation' },\r\n\t\t{ label: 'Imports' },\r\n\t\t{\r\n\t\t\tlabel: 'Getting Started',\r\n\t\t\tsub: [\r\n\t\t\t\t{ label: 'ChaperoneStep Singleton' },\r\n\t\t\t\t{ label: 'Chaperone Multiple ID' },\r\n\t\t\t\t{ label: 'Chaperone With Gestures' },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'API',\r\n\t\t\tsub: [\r\n\t\t\t\t{ label: 'Chaperone' },\r\n\t\t\t\t{ label: 'ChaperoneStep' },\r\n\t\t\t\t{ label: 'Trigger' },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\treturn <SidePanel.ScrollNav list={list} />;\r\n};\r\n\r\nexport default Chaperone"],"sourceRoot":""}