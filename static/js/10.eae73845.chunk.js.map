{"version":3,"sources":["App/Main/Pages/Others/Unsubscribe.js","Snippets/Spinner/index.js","Components/requestjs/defaults.js","Components/requestjs/utils.js","Components/requestjs/index.js"],"names":["Unsubscribe","useState","done","setDone","email","useParams","className","success","to","label","type","onClick","event","preventDefault","unsubscribed","cookie","get","Toast","create","atob","key","uid","loading","options","duration","request","GoogleAppURL","method","headers","responseType","body","then","response","status","Error","catch","set","btoa","Spinner","props","version","id","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","preserveAspectRatio","width","height","cx","cy","r","points","stroke","defaultProps","defaults","cache","credentials","timeout","onupload","ondownload","initialize","ServerResponse","xhr","this","data","statusText","getAllResponseHeaders","split","reduce","result","header","value","url","Promise","resolve","reject","XMLHttpRequest","open","withCredentials","trim","setRequestHeader","Object","keys","forEach","upload","onprogress","onload","onabort","DOMException","onerror","ontimeout","TypeError","send","global","assign"],"mappings":"sMAkHeA,UA1GK,WAAO,IAAD,EACDC,oBAAS,GADR,mBAClBC,EADkB,KACZC,EADY,KAEjBC,EAAUC,cAAVD,MA2DR,OACC,yBAAKE,UAAU,aACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,oBACd,yBAAKA,UAAU,iCACbJ,EACA,oCACC,wBAAII,UAAU,QACb,kBAAC,IAAD,CAASC,QAAQ,SADlB,6BAGA,uBAAGD,UAAU,yBAAb,qCACmC,2BAAIF,GADvC,MACqD,IACpD,yCAAiB,6BAFlB,mDAGkD,IACjD,yCAJD,IAImB,6BAJnB,uEAOA,kBAAC,IAAD,CACCE,UAAU,qCACVE,GAAG,IACHC,MAAM,iBAIR,oCACC,wBAAIH,UAAU,QAAd,sCACA,uBAAGA,UAAU,yBAAb,mCACiC,yCADjC,MAEC,6BAFD,IAEQ,2BAAIF,IAEZ,4BACCE,UAAU,qCACVI,KAAK,SACLC,QA1Fa,SAACC,GACrBA,EAAMC,iBACN,IACMC,EAAeC,SAAOC,IADV,QAElB,GAAIF,EACH,OAAOG,IAAMC,OACZ,qEAC+B,2BAAIC,KAAKL,IADxC,yBAOF,IAAMM,EAAMC,gBACZJ,IAAMC,OACL,yBAAKZ,UAAU,wBACd,kBAAC,IAAD,CAASgB,SAAS,IADnB,oBAIA,CAAEF,MAAKG,QAAS,CAAEC,SAAU,OAG7BC,YAAQC,eAAc,CACrBC,OAAQ,OACRC,QAAS,CACR,eAAgB,qCAEjBC,aAAc,OACdC,KAAK,cAAD,OAAgB1B,EAAhB,yBAEJ2B,MAAK,SAACC,GACN,GAAIA,EAASC,QAAU,IACtB,MAAMC,MAAM,OAGbH,MAAK,WACLd,IAAMC,OACL,yBAAKZ,UAAU,wBACd,kBAAC,IAAD,CAASC,SAAS,IADnB,+DAIA,CAAEa,MAAKG,QAAS,CAAEC,SAAU,OAE7BrB,GAAQ,MAERgC,OAAM,kBACNlB,IAAMC,OACL,yBAAKZ,UAAU,wBACd,kBAAC,IAAD,CAASC,SAAS,IADnB,wCAIA,CAAEa,MAAKG,QAAS,CAAEC,SAAU,UAG9BT,SAAOqB,IApDW,OAoDIC,KAAKjC,GAAQ,KAiC7B,kB,8FCtFKkC,G,OAAU,SAAC,GAAoC,IAAlChB,EAAiC,EAAjCA,QAASf,EAAwB,EAAxBA,QAAYgC,EAAY,qCAC1D,OACC,uCACUjC,UAAS,kBAAagB,EAAU,UAAYf,EAAU,UAAY,UAC3EiC,QAAQ,MACRC,GAAG,UACHC,MAAM,6BACNC,WAAW,+BACXC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACRC,MAAO,CAAEC,iBAAkB,mBAC3BC,SAAS,WACAC,oBAAoB,gBACpBC,MAAM,KACNC,OAAO,MACZb,GACJ,2BACC,4BAAQjC,UAAU,SAAS+C,GAAG,KAAKC,GAAG,aAAaC,EAAE,SACrD,4BAAQjD,UAAU,cAAc+C,GAAG,KAAKC,GAAG,aAAaC,EAAE,SAC9C,8BAAUjD,UAAU,QAAQkD,OAAO,cAAcC,OAAO,QACxD,8BAAUnD,UAAU,QAAQkD,OAAO,cAAcC,OAAO,QACxD,8BACInD,UAAU,aACVkD,OAAO,cACPC,OAAO,QAEX,8BACInD,UAAU,aACVkD,OAAO,cACPC,OAAO,QAEX,8BACInD,UAAU,QACVkD,OAAO,yEAEX,8BACIlD,UAAU,aACVkD,OAAO,6EAQ3BlB,EAAQoB,aAnDe,CACnBpC,SAAS,EACTf,SAAS,I,yECEEoD,EAZE,CACbhC,OAAQ,MACRiC,MAAO,UACPC,YAAa,cACbjC,QAAS,GACTE,KAAM,KACND,aAAc,GACdiC,QAAS,EACTC,SAAU,KACVC,WAAY,MCPHC,EAAa,SAAC1C,GAAD,sBACnBoC,EADmB,GAEnBpC,EAFmB,CAGtBK,QAAQ,eACD+B,EAAS/B,QADT,GAEAL,EAAQK,YAQZ,SAASsC,EAAgBC,GAC5BC,KAAKC,KAAOF,EAAInC,SAChBoC,KAAKnC,OAASkC,EAAIlC,OAClBmC,KAAKE,WAAaH,EAAIG,WACtBF,KAAKxC,QAAUuC,EAAII,wBAAwBC,MAAM,MAChDC,QAAO,SAACC,EAAQC,GAAY,IAAD,EACHA,EAAOH,MAAM,MADV,mBACjBpD,EADiB,KACZwD,EADY,KAIxB,OAFGxD,GAAOwD,IACNF,EAAOtD,GAAOwD,GACXF,IACR,ICvBP,IAAMjD,EAAU,SAACoD,GAAD,IAAMtD,EAAN,uDAAgB,GAAhB,OAAuB,IAAIuD,SAAQ,SAACC,EAASC,GACzD,IAAMb,EAAM,IAAIc,eADoD,EAYhEhB,EAAW1C,GATXI,EAHgE,EAGhEA,OACAiC,EAJgE,EAIhEA,MACAC,EALgE,EAKhEA,YACAjC,EANgE,EAMhEA,QACAE,EAPgE,EAOhEA,KACAD,EARgE,EAQhEA,aACAiC,EATgE,EAShEA,QACAC,EAVgE,EAUhEA,SACAC,EAXgE,EAWhEA,WAGJG,EAAIe,KAAKvD,EAAQkD,GAAK,GAEtBV,EAAIgB,gBAAyC,YAAvBtB,EAAYuB,OAElCjB,EAAIL,QAAUA,EAEdK,EAAItC,aAAeA,EAEN,YAAV+B,GACCO,EAAIkB,iBAAiB,gBAAiBzB,GAE1C0B,OAAOC,KAAK3D,GAAS4D,SAAQ,SAACpE,GAC1B+C,EAAIkB,iBAAiBjE,EAAKQ,EAAQR,OAGnC+C,EAAIsB,SACHtB,EAAIsB,OAAOC,WAAa3B,GAE5BI,EAAIuB,WAAa1B,EAEjBG,EAAIwB,OAAS,kBAAMZ,EAAQ,IAAIb,EAAeC,KAE9CA,EAAIyB,QAAU,kBAAMZ,EAAO,IAAIa,aAAa,UAAW,gBAEvD1B,EAAI2B,QAAU3B,EAAI4B,UAAY,kBAAMf,EAAO,IAAIgB,UAAU,4BAEzD7B,EAAI8B,KAAKnE,OAGbL,EAAQyE,ODlCc,SAAC3E,GACnB+D,OAAOa,OAAOxC,EAAUpC,ICmCbE","file":"static/js/10.eae73845.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, Link } from 'reaouter';\r\nimport request from 'requestjs';\r\nimport Toast from 'Snippets/Toast';\r\nimport { Spinner } from 'Snippets/Spinner';\r\nimport { uid, cookie } from 'Common/Utils';\r\nimport { GoogleAppURL } from 'Common/Constant';\r\n\r\nconst Unsubscribe = () => {\r\n\tconst [done, setDone] = useState(false);\r\n\tconst { email } = useParams();\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst cookieKey = 'USBC';\r\n\t\tconst unsubscribed = cookie.get(cookieKey);\r\n\t\tif (unsubscribed) {\r\n\t\t\treturn Toast.create(\r\n\t\t\t\t<>\r\n\t\t\t\t\tyou have already unsubscribed <b>{atob(unsubscribed)}</b>. try again\r\n\t\t\t\t\ttomorrow\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst key = uid();\r\n\t\tToast.create(\r\n\t\t\t<div className='d-flex flex-center-y'>\r\n\t\t\t\t<Spinner loading={true} />\r\n\t\t\t\tunsubscribing...\r\n\t\t\t</div>,\r\n\t\t\t{ key, options: { duration: 20000 } }\r\n\t\t);\r\n\r\n\t\trequest(GoogleAppURL, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\r\n\t\t\t},\r\n\t\t\tresponseType: 'json',\r\n\t\t\tbody: `subscriber=${email}&action=unsubscribe`,\r\n\t\t})\r\n\t\t.then((response) => {\r\n\t\t\tif (response.status >= 400) {\r\n\t\t\t\tthrow Error('');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(() => {\r\n\t\t\tToast.create(\r\n\t\t\t\t<div className='d-flex flex-center-y'>\r\n\t\t\t\t\t<Spinner success={true} />\r\n\t\t\t\t\tWe will no longer notify you on anything related mytabworks\r\n\t\t\t\t</div>,\r\n\t\t\t\t{ key, options: { duration: 4000 } }\r\n\t\t\t);\r\n\t\t\tsetDone(true);\r\n\t\t})\r\n\t\t.catch(() =>\r\n\t\t\tToast.create(\r\n\t\t\t\t<div className='d-flex flex-center-y'>\r\n\t\t\t\t\t<Spinner success={false} />\r\n\t\t\t\t\tsomething went wrong try again later\r\n\t\t\t\t</div>,\r\n\t\t\t\t{ key, options: { duration: 4000 } }\r\n\t\t\t)\r\n\t\t);\r\n\t\tcookie.set(cookieKey, btoa(email), 1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-sm-8 mx-auto'>\r\n\t\t\t\t\t<div className='n-flat p-5 my-5 br-5 t-center'>\r\n\t\t\t\t\t\t{done ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<h2 className='my-3'>\r\n\t\t\t\t\t\t\t\t\t<Spinner success='true' /> Successfully unsubscribe\r\n\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t<p className='n-text-dim-color mb-3'>\r\n\t\t\t\t\t\t\t\t\tyou have successfully unsubscribe <b>{email}</b> on{' '}\r\n\t\t\t\t\t\t\t\t\t<b>mytabworks</b><br/>\r\n\t\t\t\t\t\t\t\t\tWe will no longer notify you on anything related{' '}\r\n\t\t\t\t\t\t\t\t\t<b>mytabworks</b>.<br/> but you can still subscribe anytime\r\n\t\t\t\t\t\t\t\t    if you ever changed your mind.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tclassName='n-btn n-btn-lg d-block w-full mb-3'\r\n\t\t\t\t\t\t\t\t\tto='/'\r\n\t\t\t\t\t\t\t\t\tlabel='Return Home'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<h2 className='my-3'>Do you really want to unsubscribe?</h2>\r\n\t\t\t\t\t\t\t\t<p className='n-text-dim-color mb-3'>\r\n\t\t\t\t\t\t\t\t\tyou are currently subscribed to <b>mytabworks</b> as\r\n\t\t\t\t\t\t\t\t\t<br /> <b>{email}</b>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName='n-btn n-btn-lg d-block w-full mb-3'\r\n\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\tonClick={handleSubmit}>\r\n\t\t\t\t\t\t\t\t\tProceed\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Unsubscribe;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './index.css';\r\n\r\nconst SpinnerProps = {\r\n    loading: PropTypes.bool,\r\n    success: PropTypes.bool\r\n};\r\nconst SpinnerDefault = {\r\n    loading: false,\r\n    success: false\r\n};\r\n\r\nexport const Spinner = ({ loading, success, ...props }) => {\r\n\treturn (\r\n\t\t<svg\r\n            className={`spinner ${loading ? 'loading' : success ? 'success' : 'failed'}`}\r\n\t\t\tversion='1.1'\r\n\t\t\tid='Layer_1'\r\n\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\txmlnsXlink='http://www.w3.org/1999/xlink'\r\n\t\t\tx='0px'\r\n\t\t\ty='0px'\r\n\t\t\tviewBox='0 0 100 100'\r\n\t\t\tstyle={{ enableBackground: 'new 0 0 100 100' }}\r\n\t\t\txmlSpace='preserve'\r\n            preserveAspectRatio='xMidYMid meet'\r\n            width=\"20\"\r\n            height=\"20\"\r\n\t\t\t{...props}>\r\n\t\t\t<g>\r\n\t\t\t\t<circle className='circle' cx='50' cy='49.9999657' r='47.5' />\r\n\t\t\t\t<circle className='circle-dash' cx='50' cy='49.9999657' r='47.5' />\r\n                <polyline className='cross' points='35,35 70,70' stroke='red' />\r\n                <polyline className='cross' points='35,70 70,35' stroke='red' />\r\n                <polyline\r\n                    className='cross-dash'\r\n                    points='35,35 70,70'\r\n                    stroke='red'\r\n                />\r\n                <polyline\r\n                    className='cross-dash'\r\n                    points='35,70 70,35'\r\n                    stroke='red'\r\n                />\r\n                <polyline\r\n                    className='check'\r\n                    points='28.6469955,52.0561066 42.2152748,65.6243896 71.3530045,36.4866562 \t'\r\n                />\r\n                <polyline\r\n                    className='check-dash'\r\n                    points='28.6469955,52.0561066 42.2152748,65.6243896 71.3530045,36.4866562 \t'\r\n                />\r\n\t\t\t</g>\r\n\t\t</svg>\r\n\t);\r\n};\r\n\r\nSpinner.propTypes = SpinnerProps\r\nSpinner.defaultProps = SpinnerDefault","const defaults = { \r\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.   \r\n    cache: \"default\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {},\r\n    body: null,\r\n    responseType: \"\", // text, json, document, arraybuffer, blob\r\n    timeout: 0,\r\n    onupload: null,\r\n    ondownload: null\r\n}\r\n\r\nexport default defaults","import defaults from './defaults';\r\n\r\nexport const initialize = (options) => ({\r\n    ...defaults, \r\n    ...options, \r\n    headers: {\r\n        ...defaults.headers, \r\n        ...options.headers,\r\n    }\r\n})\r\n\r\nexport const global = (options) => {\r\n    Object.assign(defaults, options)\r\n}\r\n\r\nexport function ServerResponse (xhr) {\r\n    this.data = xhr.response\r\n    this.status = xhr.status\r\n    this.statusText = xhr.statusText\r\n    this.headers = xhr.getAllResponseHeaders().split(/\\n/)\r\n    .reduce((result, header) => {\r\n        const [key, value] = header.split(\": \")\r\n        if(key && value)\r\n            result[key] = value\r\n        return result\r\n    }, {})\r\n}","import { initialize, ServerResponse, global } from \"./utils\";\r\n\r\nconst request = (url, options = {}) => new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest() \r\n    const {\r\n        method,\r\n        cache,\r\n        credentials,\r\n        headers,\r\n        body,\r\n        responseType,\r\n        timeout,\r\n        onupload,\r\n        ondownload\r\n    } = initialize(options)\r\n    \r\n    xhr.open(method, url, true)\r\n\r\n    xhr.withCredentials = credentials.trim() === \"include\"\r\n\r\n    xhr.timeout = timeout\r\n\r\n    xhr.responseType = responseType\r\n\r\n    if(cache !== \"default\")\r\n        xhr.setRequestHeader(\"Cache-Control\", cache)\r\n\r\n    Object.keys(headers).forEach((key) => {\r\n        xhr.setRequestHeader(key, headers[key])\r\n    })\r\n    \r\n    if(xhr.upload)\r\n        xhr.upload.onprogress = onupload\r\n\r\n    xhr.onprogress = ondownload\r\n\r\n    xhr.onload = () => resolve(new ServerResponse(xhr))\r\n\r\n    xhr.onabort = () => reject(new DOMException('Aborted', 'AbortError'))\r\n\r\n    xhr.onerror = xhr.ontimeout = () => reject(new TypeError('Network request failed'))\r\n\r\n    xhr.send(body)\r\n})\r\n\r\nrequest.global = global\r\n\r\nexport default request"],"sourceRoot":""}