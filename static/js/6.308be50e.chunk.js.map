{"version":3,"sources":["Components/draggerjs/utils.js","Components/draggerjs/index.js","App/Main/Pages/Javascript/Topics/Draggerjs/StringCodes.js","App/Main/Pages/Javascript/Topics/Draggerjs/Sections/index.js","App/Main/Pages/Javascript/Topics/Draggerjs/Sections sync /.js$","App/Main/Pages/Javascript/Topics/Draggerjs/Sections/Autoscroll.js","App/Main/Pages/Javascript/Topics/Draggerjs/Sections/Cloning.js","App/Main/Pages/Javascript/Topics/Draggerjs/Sections/Common.js","App/Main/Pages/Javascript/Topics/Draggerjs/Sections/Droppable.js","App/Main/Pages/Javascript/Topics/Draggerjs/Sections/GettingStarted.js","App/Main/Pages/Javascript/Topics/Draggerjs/Sections/RawDrag.js","App/Main/Pages/Javascript/Topics/Draggerjs/Sections/Switching.js","App/Main/Pages/Javascript/Topics/Draggerjs/Tables.js","App/Main/Pages/Javascript/Topics/Draggerjs/index.js"],"names":["w","window","d","document","requestAnimationFrame","documentElement","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","css","node","style","Object","keys","forEach","key","is","a","nodeType","Node","ELEMENT_NODE","on","event","callback","option","split","eventType","addEventListener","off","removeEventListener","validateType","_data","_types","_error","includes","Error","map","each","toUpperCase","join","applyCoordinate","target","x","y","axis","position","left","top","getCoordinates","container","isDraggable","prefix","allowBoundContainer","touches","clientX","clientY","bound","getBoundingClientRect","width","height","containerHeight","scrollHeight","containerWidth","scrollWidth","getBoundX","scrollLeft","getBoundY","scrollTop","getDroppable","droppable","point","hidden","droppableNode","elementFromPoint","currentDroppable","closest","isOverDroppable","matches","Math","max","min","getPower","sensitivity","cut","filler","eventSupported","validateEvent","type","SyntaxError","DraggerEvent","options","assign","this","originalEvent","preventDefault","stopPropagation","Dragger","emitters","selector","querySelector","body","allowExactDraggable","autoscroll","autoscrollSensitivity","eventListenerOption","init","props","draggable","initHandler","startEvent","droppableAt","animationFrame","dragstart","dragmove","dragend","dragenter","dragover","dragexit","drop","commonSetting","startX","startY","startC","coordinates","isDraggableElement","moveX","moveY","endX","endY","call","moveHandler","moveEvent","moveC","handle","ancestors","elem","parentNode","clientHeight","clientWidth","push","getAncestorsScrolledTree","reduce","result","ancestorEL","i","arr","nodeName","isContainer","topBounds","bottomBounds","leftBounds","rightBounds","topSensitivityCut","bottomSensitivityCut","leftSensitivityCut","rightSensitivityCut","containerY","containerX","containerTop","containerExceededTop","containerLeft","containerExceededLeft","isEdgeTopScreen","isEdgeBottomScreen","isEdgeLeftScreen","isEdgeRightScreen","hasEdgeScreen","power","slice","endHandler","endEvent","Importing","GettingStarted","html","js","Autoscroll","RawDrag","Droppable","Cloning","Switching","req","require","whenDirectoryOnlyIndexAllowToExport","modules","filter","dirname","test","module","exports","current","r","webpackContext","id","webpackContextResolve","__webpack_require__","o","e","code","resolve","useEffect","dragger","classList","add","contains","remove","destroy","readonly","title","context","className","data-example","clone","cloningAlgorithm","elementToInsert","droppableRect","isBefore","next","nextElementSibling","appendChild","insertBefore","cloneNode","parentElement","setTimeout","variant","marginTop","Installation","language","theme","plain","color","backgroundColor","styles","cleanUp","isComplete","clearTimeout","distance","onClick","href","switchingAlgorithm","isFirstChild","firstElementChild","isLastChild","lastElementChild","divident","Array","from","children","dataset","index","data-index","DraggerRows","name","default","description","data","EventTypes","MethodRows","EventsRows","ForAPI","nameLabel","Methods","typeLabel","EventProp","DraggerjsMain","DraggerjsSidePanel","ScrollNav","list","label","sub","Draggerjs","Meta","image","main","side"],"mappings":"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","file":"static/js/6.308be50e.chunk.js","sourcesContent":["const w = window\r\nconst d = document\r\nexport const root = d.documentElement\r\n\r\nexport const requestAnimationFrame = w.requestAnimationFrame || w.webkitRequestAnimationFrame || w.mozRequestAnimationFrame;\r\n\r\nexport const cancelAnimationFrame = w.cancelAnimationFrame || w.webkitCancelAnimationFrame || w.mozCancelAnimationFrame;\r\n\r\nexport const qs = (selector) => d.querySelector(selector) \r\n\r\nexport const css = (node, style) => {\r\n    Object.keys(style).forEach(key => {\r\n        if(key in node.style) {\r\n            node.style[key] = style[key]\r\n        }\r\n    })\r\n}\r\n\r\nexport const is = {\r\n    str: (a) => typeof a === 'string',\r\n    fnc: (a) => typeof a === 'function',\r\n    node: (a) => a && a.nodeType === Node.ELEMENT_NODE\r\n}\r\n\r\nexport const on = (node, event, callback, option) => {\r\n    event.split(/\\s{1,10}/).forEach((eventType) => {\r\n        node.addEventListener(eventType, callback, option)\r\n    })\r\n}\r\n\r\nexport const off = (node, event, callback, option) => {\r\n    event.split(/\\s{1,10}/).forEach((eventType) => {\r\n        node.removeEventListener(eventType, callback, option)\r\n    })\r\n}\r\n\r\nexport const validateType = (_data/*<generic*>*/, _types/*<array>*/, _error/*<string>*/) => {\r\n    if(!(_types.includes(typeof(_data))\r\n         || (_types.includes('node') && is.node(_data))))\r\n      throw new Error(`${_error} must contain the following data types (${_types.map((each) => each.toUpperCase()).join(', ')})`)\r\n}\r\n\r\nexport const applyCoordinate = (target, x, y, axis) => {\r\n    const position = {\r\n        position: 'absolute'\r\n    }\r\n    if(axis === 'x' || !axis) {\r\n        position.left = `${x}px`\r\n    }\r\n    if(axis === 'y' || !axis)  {\r\n        position.top = `${y}px`\r\n    }\r\n    css(target, position);\r\n}\r\n\r\nexport const getCoordinates = (event, { container, target, isDraggable, prefix, allowBoundContainer }) => { \r\n    const { clientX, clientY } = (event.touches && event.touches[0]) || event \r\n    const bound = container.getBoundingClientRect() \r\n    if(!prefix) {\r\n        const {left = 0, top = 0, width = 0, height = 0} = isDraggable \r\n        ? target.getBoundingClientRect() \r\n        : {}\r\n        prefix = { \r\n            left: clientX - left,\r\n            top: clientY - top,\r\n            width: width,\r\n            height: height,\r\n            containerHeight: container.scrollHeight,\r\n            containerWidth: container.scrollWidth,\r\n        }\r\n    }\r\n    let x = clientX\r\n    let y = clientY\r\n    if(allowBoundContainer) {\r\n        x = getBoundX(container.scrollLeft + (x - bound.left) - (isDraggable ? prefix.left : 0), prefix)\r\n        y = getBoundY(container.scrollTop + (y - bound.top) - (isDraggable ? prefix.top : 0), prefix)\r\n    }\r\n    return {\r\n        clientX,\r\n        clientY,\r\n        x,\r\n        y,\r\n        prefix,\r\n    }\r\n}\r\n\r\nexport const getDroppable = ({target, droppable, point: { x, y} }) => {\r\n    target.hidden = true\r\n    const droppableNode = d.elementFromPoint(x, y)\r\n    target.hidden = false\r\n    const currentDroppable = droppableNode && droppableNode.closest(droppable)\r\n    const isOverDroppable = currentDroppable && currentDroppable.matches(droppable)\r\n    return {\r\n        droppableNode,\r\n        currentDroppable,\r\n        isOverDroppable\r\n    }\r\n}\r\n\r\nexport const getBoundY = (y, prefix) => { \r\n    return Math.max(0, Math.min(prefix.containerHeight - prefix.height, y))\r\n}\r\n\r\nexport const getBoundX = (x, prefix) => {  \r\n    return Math.max(0, Math.min(prefix.containerWidth - prefix.width, x))\r\n}\r\n\r\nexport const getAncestorsScrolledTree = (container) => {\r\n    const ancestors = []\r\n    for (let elem = container; elem && elem !== d; elem = elem.parentNode ) {\r\n        if(elem.scrollHeight > elem.clientHeight || elem.scrollWidth > elem.clientWidth) {\r\n            ancestors.push(elem);\r\n        }\r\n    }\r\n    return ancestors \r\n}\r\n\r\nexport const getPower = (sensitivity, cut, filler) => Math.min(sensitivity, Math.min(cut, filler > 0 ? filler : cut))\r\n\r\nconst eventSupported = ['dragstart', 'dragmove', 'dragend', 'dragenter', 'dragover', 'dragexit', 'drop']\r\n\r\nexport const validateEvent = (type, eventType) => {\r\n    if (!eventSupported.includes(eventType))\r\n        throw new SyntaxError(\r\n            `Dragger.${type} event type \"${eventType}\" is not recognize. supported events are ${eventSupported.join(\r\n                ', '\r\n            )}`\r\n        );\r\n}\r\n\r\nexport class DraggerEvent { \r\n    constructor(event, options){\r\n         Object.assign(this, options)\r\n         this.originalEvent = event\r\n    }\r\n    preventDefault() { this.originalEvent.preventDefault() }\r\n    stopPropagation() { this.originalEvent.stopPropagation() }\r\n}","import {\r\n\trequestAnimationFrame,\r\n\tcancelAnimationFrame,\r\n\tis,\r\n\tqs,\r\n\tcss,\r\n\tapplyCoordinate,\r\n\ton,\r\n\toff,\r\n\tgetCoordinates,\r\n\tgetDroppable,\r\n\tgetBoundX,\r\n\tgetBoundY,\r\n\tgetAncestorsScrolledTree,\r\n\tgetPower,\r\n\tvalidateType,\r\n\tvalidateEvent,\r\n\tDraggerEvent\r\n} from './utils';\r\n\r\nexport default class Dragger {\r\n\tdraggable;\r\n\tdroppable;\r\n\tcontainer;\r\n\toptions;\r\n\temitters = {};\r\n\tmodifiers;\r\n\tpluginDumps;\r\n\r\n\tstatic create(...props) {\r\n\t\treturn new Dragger(...props);\r\n\t}\r\n\r\n\tconstructor(container, options) {\r\n\t\tconst d = document;\r\n\t\tconst defaultOpt = {\r\n\t\t\tallowBoundContainer: true,\r\n\t\t\tallowExactDraggable: false,\r\n\t\t\tautoscroll: false,\r\n\t\t\tautoscrollSensitivity: 20,\r\n\t\t\teventListenerOption: false\r\n\t\t};\r\n\t\tthis.container = is.str(container)\r\n\t\t\t? qs(container)\r\n\t\t\t: is.node(container)\r\n\t\t\t? container\r\n\t\t\t: d.body;\r\n\t\tthis.options = { ...defaultOpt, ...options };\r\n\t\tObject.keys(this.options).forEach((key) => {\r\n\t\t\tvalidateType(this.options[key], \r\n\t\t\t\t[ key === 'autoscrollSensitivity' \r\n\t\t\t\t? 'number' \r\n\t\t\t\t: ['droppable', 'draggable', 'axis'].includes(key) \r\n\t\t\t\t\t? 'string' \r\n\t\t\t\t\t:  'boolean'\r\n\t\t\t\t], \r\n\t\t\t\t`Dragger options \\`${key}\\``)\r\n\t\t})\r\n\t\tvalidateType(container, ['string', 'node'], 'Dragger argument `0`')\r\n\t\tvalidateType(this.container, ['node'], 'Dragger this.container is null check carefully what you input in argument `0`')\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tconst container = this.container;\r\n\t\tconst { axis, draggable, droppable, allowBoundContainer, allowExactDraggable, autoscroll, autoscrollSensitivity, eventListenerOption } = this.options;\r\n\t\t/*DRAG-START*/\r\n\t\tthis.initHandler = (startEvent) => {\r\n\t\t\tlet droppableAt;\r\n\t\t\tlet animationFrame;\r\n\t\t\tconst {\r\n\t\t\t\tdragstart,\r\n\t\t\t\tdragmove,\r\n\t\t\t\tdragend,\r\n\t\t\t\tdragenter,\r\n\t\t\t\tdragover,\r\n\t\t\t\tdragexit,\r\n\t\t\t\tdrop,\r\n\t\t\t} = this.emitters;\r\n\t\t\tconst target = (!allowExactDraggable && startEvent.target.closest(draggable)) || startEvent.target;\r\n\t\t\tconst isDraggable = target.matches(draggable);\r\n\t\t\tconst commonSetting = { container, target, isDraggable, allowBoundContainer };\r\n\t\t\tconst { x: startX, y: startY, ...startC } = getCoordinates(startEvent, commonSetting);\r\n\t\t\tconst coordinates = {\r\n\t\t\t\ttype: 'dragstart',\r\n\t\t\t\ttarget,\r\n\t\t\t\tcontainer,\r\n\t\t\t\tisDraggableElement: isDraggable,\r\n\t\t\t\tstartX: startX,\r\n\t\t\t\tstartY: startY,\r\n\t\t\t\tmoveX: startX,\r\n\t\t\t\tmoveY: startY,\r\n\t\t\t\tendX: startX,\r\n\t\t\t\tendY: startY,\r\n\t\t\t\tclientX: startC.clientX,\r\n\t\t\t\tclientY: startC.clientY,\r\n\t\t\t};\r\n\t\t\tcommonSetting.prefix = startC.prefix;\r\n\t\t\tis.fnc(dragstart) && dragstart.call(container, new DraggerEvent(startEvent, coordinates));\r\n\t\t\tisDraggable && applyCoordinate(target, startX, startY, axis);\r\n\t\t\t\r\n\t\t\t/*DRAG-MOVE*/\r\n\t\t\tconst moveHandler = (moveEvent) => {\r\n\t\t\t\tconst {clientX, clientY, ...moveC} = getCoordinates(moveEvent, commonSetting);\r\n\t\t\t\tcoordinates.clientX = clientX;\r\n\t\t\t\tcoordinates.clientY = clientY;\r\n\t\t\t\tlet x = (coordinates.moveX = coordinates.endX = moveC.x);\r\n\t\t\t\tlet y = (coordinates.moveY = coordinates.endY = moveC.y);\r\n\t\t\t\tif (isDraggable) {\r\n\t\t\t\t\tapplyCoordinate(target, x, y, axis);\r\n\t\t\t\t\t/*AUTO-SCROLL WHEN EDGE*/\r\n\t\t\t\t\tif(autoscroll) {\r\n\t\t\t\t\t\tconst sensitivity = autoscrollSensitivity \r\n\t\t\t\t\t\tanimationFrame && cancelAnimationFrame(animationFrame);\r\n\t\t\t\t\t\tconst handle = () => {\r\n\t\t\t\t\t\t\tconst bound = container.getBoundingClientRect()\r\n\t\t\t\t\t\t\tconst prefix = commonSetting.prefix\r\n\t\t\t\t\t\t\tconst requestAgain = getAncestorsScrolledTree(container).reduce((result, ancestorEL, i, arr) => {\r\n\t\t\t\t\t\t\t\tconst { top, left } = ancestorEL.nodeName !== \"HTML\" ? ancestorEL.getBoundingClientRect() : {\r\n\t\t\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\t\t\tleft: 0 \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlet { scrollTop, scrollLeft, scrollHeight, scrollWidth, clientHeight, clientWidth } = ancestorEL \r\n\t\t\t\t\t\t\t\tconst position = {} \r\n\t\t\t\t\t\t\t\tconst isContainer = ancestorEL === container \r\n\t\t\t\t\t\t\t\tconst topBounds = top + sensitivity\r\n\t\t\t\t\t\t\t\tconst bottomBounds = top + clientHeight - sensitivity\r\n\t\t\t\t\t\t\t\tconst leftBounds = left + sensitivity\r\n\t\t\t\t\t\t\t\tconst rightBounds = left + clientWidth - sensitivity\r\n\t\t\t\t\t\t\t\tconst topSensitivityCut = topBounds - clientY\r\n\t\t\t\t\t\t\t\tconst bottomSensitivityCut = clientY - bottomBounds\r\n\t\t\t\t\t\t\t\tconst leftSensitivityCut = leftBounds - clientX\r\n\t\t\t\t\t\t\t\tconst rightSensitivityCut = clientX - rightBounds\r\n\t\t\t\t\t\t\t\tconst containerY = y + prefix.top\r\n\t\t\t\t\t\t\t\tconst containerX = x + prefix.left\r\n\t\t\t\t\t\t\t\tconst containerTop = bound.top\r\n\t\t\t\t\t\t\t\tconst containerExceededTop = bound.top + bound.height\r\n\t\t\t\t\t\t\t\tconst containerLeft = bound.left\r\n\t\t\t\t\t\t\t\tconst containerExceededLeft = bound.left + bound.width\r\n\t\t\t\t\t\t\t\tconst isEdgeTopScreen = \r\n\t\t\t\t\t\t\t\t\tclientY < topBounds\r\n\t\t\t\t\t\t\t\t\t&& scrollTop > 0\r\n\t\t\t\t\t\t\t\t\t&& (isContainer ? containerY > 0 : clientY > containerTop)\r\n\t\t\t\t\t\t\t\tconst isEdgeBottomScreen =\r\n\t\t\t\t\t\t\t\t\tclientY > bottomBounds  \r\n\t\t\t\t\t\t\t\t\t&& scrollTop < scrollHeight - clientHeight\r\n\t\t\t\t\t\t\t\t\t&& (isContainer ? containerY < scrollHeight : clientY < containerExceededTop);\r\n\t\t\t\t\t\t\t\tconst isEdgeLeftScreen =\r\n\t\t\t\t\t\t\t\t\tclientX < leftBounds \r\n\t\t\t\t\t\t\t\t\t&& scrollLeft > 0\r\n\t\t\t\t\t\t\t\t\t&& (isContainer ? containerX > 0 : clientX > containerLeft)\r\n\t\t\t\t\t\t\t\tconst isEdgeRightScreen = \r\n\t\t\t\t\t\t\t\t\tclientX > rightBounds\r\n\t\t\t\t\t\t\t\t\t&& scrollLeft < scrollWidth - clientWidth\r\n\t\t\t\t\t\t\t\t\t&& (isContainer ? containerX < scrollWidth : clientX < containerExceededLeft);\r\n\t\t\t\t\t\t\t\tconst hasEdgeScreen = isEdgeTopScreen || isEdgeBottomScreen || isEdgeLeftScreen || isEdgeRightScreen\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (isEdgeTopScreen) { \r\n\t\t\t\t\t\t\t\t\tconst power = getPower(sensitivity, topSensitivityCut, isContainer ? containerY - sensitivity : clientY - containerTop)\r\n\t\t\t\t\t\t\t\t\tscrollTop -= power;\r\n\t\t\t\t\t\t\t\t\ty -= power \r\n\t\t\t\t\t\t\t\t\tposition.top = `${getBoundY(y, prefix)}px`\r\n\t\t\t\t\t\t\t\t} else if (isEdgeBottomScreen) { \r\n\t\t\t\t\t\t\t\t\tconst power = getPower(sensitivity, bottomSensitivityCut, isContainer ? scrollHeight - containerY : containerExceededTop - clientY)\r\n\t\t\t\t\t\t\t\t\tscrollTop += power;\r\n\t\t\t\t\t\t\t\t\ty += power \r\n\t\t\t\t\t\t\t\t\tposition.top = `${getBoundY(y, prefix)}px` \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (isEdgeLeftScreen) {\r\n\t\t\t\t\t\t\t\t\tconst power = getPower(sensitivity, leftSensitivityCut, isContainer ? containerX - sensitivity : clientX - containerLeft)\r\n\t\t\t\t\t\t\t\t\tscrollLeft -= power;\r\n\t\t\t\t\t\t\t\t\tx -= power \r\n\t\t\t\t\t\t\t\t\tposition.left = `${getBoundX(x, prefix)}px`\r\n\t\t\t\t\t\t\t\t} else if (isEdgeRightScreen) { \r\n\t\t\t\t\t\t\t\t\tconst power = getPower(sensitivity, rightSensitivityCut, isContainer ? scrollWidth - containerX : containerExceededLeft - clientX)\r\n\t\t\t\t\t\t\t\t\tscrollLeft += power\r\n\t\t\t\t\t\t\t\t\tx += power\r\n\t\t\t\t\t\t\t\t\tposition.left = `${getBoundX(x, prefix)}px` \r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\tif(hasEdgeScreen) {\r\n\t\t\t\t\t\t\t\t\tancestorEL.scrollTop = scrollTop\r\n\t\t\t\t\t\t\t\t\tancestorEL.scrollLeft = scrollLeft\r\n\t\t\t\t\t\t\t\t\tcss(target, position)\r\n\t\t\t\t\t\t\t\t\tarr.slice(1)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn result || hasEdgeScreen\r\n\t\t\t\t\t\t\t}, false) \r\n\r\n\t\t\t\t\t\t\tif(requestAgain)\r\n\t\t\t\t\t\t\t\tanimationFrame = requestAnimationFrame(handle);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tanimationFrame = requestAnimationFrame(handle);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/*END - AUTO-SCROLL WHEN EDGE*/\r\n\t\t\t\t\tif (droppable) {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tcurrentDroppable,\r\n\t\t\t\t\t\t\tdroppableNode,\r\n\t\t\t\t\t\t\tisOverDroppable,\r\n\t\t\t\t\t\t} = getDroppable({\r\n\t\t\t\t\t\t\ttarget,\r\n\t\t\t\t\t\t\tdroppable,\r\n\t\t\t\t\t\t\tpoint: {\r\n\t\t\t\t\t\t\t\tx: coordinates.clientX,\r\n\t\t\t\t\t\t\t\ty: coordinates.clientY,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (isOverDroppable) {\r\n\t\t\t\t\t\t\tif (droppableAt !== currentDroppable) {\r\n\t\t\t\t\t\t\t\tis.fnc(dragenter) &&\r\n\t\t\t\t\t\t\t\t\tdragenter.call(currentDroppable, new DraggerEvent(moveEvent, {\r\n\t\t\t\t\t\t\t\t\t\t...coordinates,\r\n\t\t\t\t\t\t\t\t\t\ttype: 'dragenter',\r\n\t\t\t\t\t\t\t\t\t\tcurrentDroppable,\r\n\t\t\t\t\t\t\t\t\t\tdroppable: droppableNode,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\tdroppableAt &&\r\n\t\t\t\t\t\t\t\t\tis.fnc(dragexit) &&\r\n\t\t\t\t\t\t\t\t\tdragexit.call(currentDroppable, new DraggerEvent(moveEvent, {\r\n\t\t\t\t\t\t\t\t\t\t...coordinates,\r\n\t\t\t\t\t\t\t\t\t\ttype: 'dragexit',\r\n\t\t\t\t\t\t\t\t\t\tcurrentDroppable: droppableAt,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdroppableAt = currentDroppable;\r\n\t\t\t\t\t\t\tis.fnc(dragover) \r\n\t\t\t\t\t\t\t\t&& dragover.call(container, new DraggerEvent(moveEvent, {\r\n\t\t\t\t\t\t\t\t\t...coordinates, \r\n\t\t\t\t\t\t\t\t\ttype: 'dragover',\r\n\t\t\t\t\t\t\t\t\tcurrentDroppable,\r\n\t\t\t\t\t\t\t\t\tdroppable: droppableNode,\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tis.fnc(dragmove) && dragmove.call(container, new DraggerEvent(moveEvent, {...coordinates, type: 'dragmove'}));\r\n\t\t\t};\r\n\r\n\t\t\ton(container, 'mousemove touchmove', moveHandler, eventListenerOption);\r\n\r\n\t\t\t/*DRAG-END*/\r\n\t\t\tconst endHandler = (endEvent) => { \r\n\t\t\t\tif(autoscroll && animationFrame) {\r\n\t\t\t\t\tcancelAnimationFrame(animationFrame)\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tif (droppable && isDraggable) {\r\n\t\t\t\t\tif (isDraggable) {\r\n\t\t\t\t\t\tcss(target, {\r\n\t\t\t\t\t\t\tposition: null,\r\n\t\t\t\t\t\t\tleft: null,\r\n\t\t\t\t\t\t\ttop: null,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tcurrentDroppable,\r\n\t\t\t\t\t\tdroppableNode,\r\n\t\t\t\t\t\tisOverDroppable,\r\n\t\t\t\t\t} = getDroppable({\r\n\t\t\t\t\t\ttarget,\r\n\t\t\t\t\t\tdroppable,\r\n\t\t\t\t\t\tpoint: {\r\n\t\t\t\t\t\t\tx: coordinates.clientX,\r\n\t\t\t\t\t\t\ty: coordinates.clientY,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t\tisOverDroppable &&\r\n\t\t\t\t\t\tis.fnc(drop) &&\r\n\t\t\t\t\t\tdrop.call(currentDroppable, new DraggerEvent(endEvent, {\r\n\t\t\t\t\t\t\t...coordinates,\r\n\t\t\t\t\t\t\ttype: 'drop',\r\n\t\t\t\t\t\t\tcurrentDroppable,\r\n\t\t\t\t\t\t\tdroppable: droppableNode,\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tis.fnc(dragend) &&\r\n\t\t\t\t\tdragend.call(container, new DraggerEvent(endEvent, {...coordinates, type: 'dragend'}));\r\n\t\t\t\t\t\r\n\t\t\t\toff(container, 'mousemove touchmove', moveHandler, eventListenerOption);\r\n\t\t\t\toff(container, 'mouseup touchend', endHandler, eventListenerOption);\r\n\t\t\t};\r\n\r\n\t\t\ton(container, 'mouseup touchend', endHandler, eventListenerOption);\r\n\t\t};\r\n\t\ton(container, 'mousedown touchstart', this.initHandler, eventListenerOption);\r\n\t}\r\n\r\n\ton(eventType, callback) {\r\n\t\tvalidateEvent('on', eventType)\r\n\t\tthis.emitters[eventType] = callback;\r\n\t}\r\n\r\n\toff(eventType) {\r\n\t\tvalidateEvent('off', eventType)\r\n\t\tdelete this.emitters[eventType];\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\toff(this.container, 'mousedown touchstart', this.initHandler, this.options.eventListenerOption);\r\n\t}\r\n}\r\n","export const Importing = `import Dragger from \"draggerjs\"`\r\nexport const GettingStarted = {\r\nhtml: `<div className=\"drag-container\" id=\"drag-getting-started\">  \r\n    <div className=\"drag-around n-border-color\">\r\n        <div className=\"draggable-box center n-flat\">\r\n            <h1>Drag Me</h1>\r\n        </div> \r\n    </div>\r\n</div>`,\r\ncss: `.drag-container {  \r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    height: 250px;  \r\n    position: relative;\r\n}\r\n.drag-container > .drag-around {\r\n    flex: 1 1;\r\n    width: 100%; \r\n    border: 2px dashed #fff;\r\n    border-radius: 15px;\r\n    padding: 15px;\r\n    transition: box-shadow 300ms ease-in;\r\n}\r\n.drag-container .draggable-box {\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-width: 50px;\r\n    min-height: 50px;\r\n    padding: 0 10px; \r\n    border-radius: 10px;\r\n    transition: box-shadow 300ms ease-in;\r\n    cursor: grab;\r\n}\r\n.drag-container .draggable-box > h1 { \r\n    margin-bottom: 5px;\r\n}\r\n.drag-container .grabbed {\r\n    cursor: grabbing;\r\n    margin: 0;\r\n}\r\n.draggable-box.center {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n}`,\r\njs: `const dragger = new Dragger('#drag-getting-started', {\r\n    draggable: '.draggable-box'\r\n})\r\ndragger.on('dragstart', (e) => { \r\n    const target = e.target\r\n    if(e.isDraggableElement) {\r\n        // prevent mobile from scrolling\r\n        // when dragging draggable element\r\n        e.preventDefault()\r\n        target.classList.add('grabbed')\r\n        if(target.classList.contains('center')) {\r\n            target.classList.remove('center')\r\n        }\r\n    }\r\n})\r\ndragger.on('dragend', (e) => {\r\n    if(e.isDraggableElement) {  \r\n        e.target.classList.remove('grabbed') \r\n    }\r\n})`\r\n}\r\nexport const Autoscroll = {\r\nhtml: `<div className=\"drag-container drag-long-ground\" id=\"drag-autoscroll\">  \r\n    <div className=\"drag-around n-border-color\">\r\n        <div className=\"draggable-box center n-flat\">\r\n            <h1>Drag Me</h1>\r\n        </div> \r\n    </div>\r\n</div>`,\r\ncss: `.drag-container {  \r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    height: 250px;  \r\n    position: relative;\r\n}\r\n.drag-long-ground {\r\n    display: block;\r\n    overflow: scroll;\r\n    -webkit-overflow-scrolling: touch;\r\n}\r\n.drag-long-ground > .drag-around {\r\n    width: 1250px;\r\n    height: 1250px;\r\n}\r\n.drag-container > .drag-around {\r\n    flex: 1 1;\r\n    width: 100%; \r\n    border: 2px dashed #fff;\r\n    border-radius: 15px;\r\n    padding: 15px;\r\n    transition: box-shadow 300ms ease-in;\r\n}\r\n.drag-container .draggable-box {\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-width: 50px;\r\n    min-height: 50px;\r\n    padding: 0 10px; \r\n    border-radius: 10px;\r\n    transition: box-shadow 300ms ease-in;\r\n    cursor: grab;\r\n}\r\n.drag-container .draggable-box > h1 { \r\n    margin-bottom: 5px;\r\n}\r\n.drag-container .grabbed {\r\n    cursor: grabbing;\r\n    margin: 0;\r\n}\r\n.draggable-box.center {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n}`,\r\njs: `const dragger = new Dragger('#drag-autoscroll', {\r\n    draggable: '.draggable-box',\r\n    autoscroll: true\r\n})\r\ndragger.on('dragstart', (e) => { \r\n    const target = e.target\r\n    if(e.isDraggableElement) {\r\n        // prevent mobile from scrolling\r\n        // when dragging draggable element\r\n        e.preventDefault()\r\n        target.classList.add('grabbed')\r\n        if(target.classList.contains('center')) {\r\n            target.classList.remove('center')\r\n        }\r\n    }\r\n})\r\ndragger.on('dragend', (e) => {\r\n    if(e.isDraggableElement) {  \r\n        e.target.classList.remove('grabbed') \r\n    }\r\n})`\r\n}\r\nexport const RawDrag = {\r\nhtml: `<div className=\"drag-drawer\" id=\"drag-raw-drag\">  \r\n<div className=\"drag-drawer-content n-no-shadow n-engrave\"> \r\n    <nav className=\"n-nav n-nav-flat n-nav-column\">\r\n        <a className=\"n-nav-link\" href=\"#\">link-1</a>\r\n        <a className=\"n-nav-link\" href=\"#\">link-2</a>\r\n        <a className=\"n-nav-link\" href=\"#\">link-3</a>\r\n    </nav> \r\n</div>\r\n</div>`,\r\ncss: `.drag-drawer {\r\n    display: block;\r\n    position: relative;\r\n    height: 250px;\r\n    border: 1px solid #dcdcdc;\r\n    overflow: hidden;\r\n}\r\n.drag-drawer-content {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: -250px;\r\n    width: 250px;\r\n    height: 100%;\r\n    padding: 20px 25px;\r\n}\r\n.drag-drawer-content:before {\r\n    content: \"\\\\3009\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 100%;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    padding: 15px 10px;\r\n    font-size: 30px;\r\n    transition: opacity 300ms ease-in-out;\r\n}\r\n.drag-drawer-content.draw-full:before {\r\n    opacity: 0;\r\n}\r\n.drag-drawer-content.draw-full:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    left: 100%;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%; \r\n}\r\n.draw-transition {\r\n    transition: left 300ms ease-in-out;\r\n}\r\n.draw-full {\r\n    left: 0;\r\n}`,\r\njs: `let cleanUp\r\nlet isComplete = false \r\nconst target = document.querySelector('.drag-drawer-content')\r\nconst dragger = new Dragger('#drag-raw-drag')\r\ndragger.on('dragstart', (e) => { \r\n    if(target === e.target) {\r\n        if(e.target.nodeName !== 'A') {\r\n            e.preventDefault()\r\n        }\r\n        target.style.left = (isComplete ? 0 : -target.clientWidth) + 'px'\r\n        target.classList.remove('draw-transition')  \r\n        clearTimeout(cleanUp)\r\n    }\r\n})\r\ndragger.on('dragmove', (e) => {    \r\n    if(target === e.target) {\r\n        const width = target.clientWidth  \r\n        const distance = (isComplete ? e.moveX - e.startX : (e.moveX - e.startX) - width)\r\n        target.style.left = (0 > distance ? -width > distance ? -width : distance : 0) + 'px' \r\n    }\r\n}) \r\ndragger.on('dragend', (e) => { \r\n    if(target === e.target) {\r\n        const width = target.clientWidth \r\n        const distance = isComplete ? (e.endX - e.startX) + width :  e.endX - e.startX \r\n        if(distance > target.clientWidth/2) {\r\n            target.classList.add('draw-full')\r\n            isComplete = true\r\n        } else {  \r\n            target.classList.remove('draw-full') \r\n            isComplete = false\r\n        }\r\n        target.style.left = null\r\n        target.classList.add('draw-transition') \r\n        cleanUp = setTimeout(() => {\r\n            target.classList.remove('draw-transition')\r\n        }, 300) \r\n    }\r\n})`\r\n}\r\nexport const Droppable = {\r\nhtml: `<div className=\"drag-container\" id=\"drag-droppable\">  \r\n    <div className=\"droppable-area n-no-shadow n-border-color\">\r\n        <div className=\"draggable-box n-no-shadow n-flat\">\r\n            <h1>1</h1>\r\n        </div>\r\n        <div className=\"draggable-box n-no-shadow n-flat\">\r\n            <h1>2</h1>\r\n        </div>\r\n    </div>\r\n    <div className=\"droppable-area n-no-shadow n-border-color\"></div>\r\n</div>`,\r\ncss: `.drag-container {  \r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    height: 250px;  \r\n    position: relative;\r\n}\r\n.drag-container > .droppable-area {\r\n    flex: 1 1;\r\n    width: 100%; \r\n    border: 2px dashed #fff;\r\n    border-radius: 15px;\r\n    padding: 15px;\r\n    transition: box-shadow 300ms ease-in;\r\n}\r\n.drag-container > .droppable-area + .droppable-area {\r\n    margin-left: 15px\r\n}\r\n.drag-container .draggable-box {\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-width: 50px;\r\n    min-height: 50px;\r\n    padding: 0 10px; \r\n    border-radius: 10px;\r\n    transition: box-shadow 300ms ease-in;\r\n    cursor: grab;\r\n}\r\n.drag-container .draggable-box[hidden] {\r\n    display: none !important;\r\n}\r\n.drag-container .draggable-box > h1 { \r\n    margin-bottom: 5px;\r\n}\r\n.drag-container .droppable-area > .draggable-box:not(:last-child) {\r\n    margin-right: 5px;\r\n}\r\n.drag-container .grabbed {\r\n    cursor: grabbing;\r\n    margin: 0;\r\n}`,\r\njs: `const dragger = new Dragger('#drag-droppable', {\r\n    draggable: '.draggable-box',\r\n    droppable: '.droppable-area',\r\n})\r\ndragger.on('dragstart', (e) => {\r\n    const target = e.target\r\n    if(e.isDraggableElement) {\r\n        e.preventDefault() \r\n        target.classList.add('grabbed')\r\n        target.classList.add('n-float')\r\n        target.classList.remove('n-flat')\r\n    }\r\n   \r\n})\r\ndragger.on('dragend', (e) => {\r\n    const target = e.target\r\n    if(e.isDraggableElement) { \r\n        /*async it to show transition*/\r\n        setTimeout(() => {\r\n            target.classList.add('n-flat')\r\n            target.classList.remove('n-float')\r\n            target.classList.remove('grabbed')\r\n        },0)\r\n    }\r\n})\r\ndragger.on('dragenter', (e) => {\r\n    if(e.isDraggableElement && e.target.parentElement !== e.currentDroppable) { \r\n        e.currentDroppable.classList.add('n-engrave') \r\n    }\r\n})\r\ndragger.on('dragexit', (e) => {\r\n    if(e.isDraggableElement && e.target.parentElement !== e.currentDroppable) { \r\n        e.currentDroppable.classList.remove('n-engrave') \r\n    }\r\n})\r\ndragger.on('drop', (e) => {\r\n    if(e.isDraggableElement) {\r\n        if(e.target.parentElement !== e.currentDroppable)\r\n            e.currentDroppable.appendChild(e.target) \r\n        e.currentDroppable.classList.remove('n-engrave') \r\n    }\r\n})`\r\n}\r\n\r\nexport const Cloning = {\r\nhtml: `<div id=\"drag-cloning\" className=\"drag-container\">  \r\n    <div className=\"droppable-area n-no-shadow n-border-color\">\r\n        <div className=\"draggable-box n-no-shadow n-flat\" id=\"draggable-1\">\r\n            <h1>1</h1>\r\n        </div>\r\n        <div className=\"draggable-box n-no-shadow n-flat\" id=\"draggable-2\">\r\n            <h1>2</h1>\r\n        </div> \r\n    </div>\r\n    <div className=\"droppable-area n-no-shadow n-border-color\">\r\n        <div className=\"draggable-box n-no-shadow n-flat\" id=\"draggable-3\">\r\n            <h1>3</h1>\r\n        </div>\r\n        <div className=\"draggable-box n-no-shadow n-flat\" id=\"draggable-4\">\r\n            <h1>4</h1>\r\n        </div>\r\n    </div>\r\n</div>`,\r\ncss: `.drag-container {  \r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    height: 250px;  \r\n    position: relative;\r\n}\r\n.drag-container > .droppable-area {\r\n    flex: 1 1;\r\n    width: 100%; \r\n    border: 2px dashed #fff;\r\n    border-radius: 15px;\r\n    padding: 15px;\r\n    transition: box-shadow 300ms ease-in;\r\n}\r\n.drag-container > .droppable-area + .droppable-area {\r\n    margin-left: 15px\r\n}\r\n.drag-container .draggable-box {\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-width: 50px;\r\n    min-height: 50px;\r\n    padding: 0 10px; \r\n    border-radius: 10px;\r\n    transition: box-shadow 300ms ease-in;\r\n    cursor: grab;\r\n}\r\n.drag-container .draggable-box[hidden] {\r\n    display: none !important;\r\n}\r\n.drag-container .drag-clone > h1 {\r\n    visibility: hidden;\r\n}\r\n.drag-container .draggable-box > h1 { \r\n    margin-bottom: 5px;\r\n}\r\n.drag-container .droppable-area > .draggable-box:not(:last-child) {\r\n    margin-right: 5px;\r\n}\r\n.drag-container .grabbed {\r\n    cursor: grabbing;\r\n    margin: 0;\r\n}`,\r\njs: `        let clone\r\nconst cloningAlgorithm = (e, elementToInsert) => {\r\n    const droppable = e.droppable && e.droppable.closest('.draggable-box')\r\n    const currentDroppable = e.currentDroppable \r\n    /*prevent cloning in the same droppable-area*/\r\n    if(e.target.closest('.droppable-area') === currentDroppable) return;\r\n    if(droppable && currentDroppable \r\n        && droppable !== elementToInsert \r\n        && droppable !== currentDroppable) {\r\n        const droppableRect = droppable.getBoundingClientRect()\r\n        /*the clone positioning is base on x axis*/\r\n        const isBefore = e.clientX - droppableRect.left < droppableRect.width/2\r\n        const next = droppable.nextElementSibling\r\n        if(!next && !isBefore) {\r\n            currentDroppable.appendChild(elementToInsert)\r\n        }\r\n        currentDroppable.insertBefore(elementToInsert, isBefore ? droppable : next )\r\n    } else if(currentDroppable && e.droppable === currentDroppable){\r\n        currentDroppable.appendChild(elementToInsert)\r\n    }\r\n}\r\n\r\nconst dragger = new Dragger('#drag-cloning', {\r\n    draggable: '.draggable-box',\r\n    droppable: '.droppable-area',\r\n})\r\ndragger.on('dragstart', (e) => {\r\n    const target = e.target\r\n    if(e.isDraggableElement) {\r\n        e.preventDefault() \r\n        clone = target.cloneNode(true)\r\n        clone.classList.add('drag-clone')\r\n        target.classList.add('grabbed')\r\n        target.classList.add('n-float')\r\n        target.classList.remove('n-flat') \r\n        \r\n    }\r\n   \r\n})\r\ndragger.on('dragover', (e) => { \r\n    cloningAlgorithm(e, clone)\r\n}) \r\ndragger.on('dragenter', (e) => {\r\n    if(e.isDraggableElement && e.target.parentElement !== e.currentDroppable) { \r\n        e.currentDroppable.classList.add('n-engrave') \r\n    } \r\n})\r\ndragger.on('dragexit', (e) => {\r\n    if(e.isDraggableElement && e.target.parentElement !== e.currentDroppable) { \r\n        e.currentDroppable.classList.remove('n-engrave') \r\n    }\r\n    /*remove clone when exiting*/\r\n    e.currentDroppable.contains(clone) && clone.remove()\r\n})\r\ndragger.on('drop', (e) => {\r\n    if(e.isDraggableElement) { \r\n        cloningAlgorithm(e, e.target) \r\n        e.currentDroppable.classList.remove('n-engrave') \r\n    } \r\n})\r\ndragger.on('dragend', (e) => {\r\n    const target = e.target\r\n    if(e.isDraggableElement) { \r\n        clone && clone.remove()\r\n        /*async it to show transition*/\r\n        setTimeout(() => {\r\n            target.classList.add('n-flat')\r\n            target.classList.remove('n-float')\r\n            target.classList.remove('grabbed')\r\n        },0)\r\n    }\r\n})`\r\n}\r\n\r\nexport const Switching = {\r\nhtml: `<ul className=\"switching-area\">\r\n    <li className=\"switching-box n-no-shadow n-flat-low\" data-index=\"1\">\r\n        <h5>Apple</h5>\r\n    </li>\r\n    <li className=\"switching-box n-no-shadow n-flat-low\" data-index=\"2\">\r\n        <h5>Peach</h5>\r\n    </li> \r\n    <li className=\"switching-box n-no-shadow n-flat-low\" data-index=\"3\">\r\n        <h5>Orange</h5>\r\n    </li>\r\n    <li className=\"switching-box n-no-shadow n-flat-low\" data-index=\"4\">\r\n        <h5>Grapes</h5>\r\n    </li>\r\n    <li className=\"switching-box n-no-shadow n-flat-low\" data-index=\"5\">\r\n        <h5>Banana</h5>\r\n    </li>\r\n</ul>`,\r\ncss: `.switching-area {\r\n    display: block;\r\n    position: relative;\r\n    width: 100%;\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n.switching-area > .switching-box {\r\n    display: flex;  \r\n    align-items: center; \r\n    position: relative;\r\n    width: 100%;\r\n    min-height: 50px;\r\n    padding: 0 10px; \r\n    border-radius: 7px;\r\n    transition: box-shadow 300ms ease-in;\r\n    cursor: grab;\r\n}\r\n.switching-area > .switching-box[hidden] {\r\n    display: none !important;\r\n}\r\n.switching-area > .switching-box:not(.drag-clone):before {\r\n    content: attr(data-index);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n}\r\n.switching-area > .switching-box:not(:last-child) {\r\n    margin-bottom: 7px;\r\n}\r\n.switching-area > .drag-clone > *{\r\n    visibility: hidden;\r\n}\r\n.switching-area .grabbed {\r\n    cursor: grabbing;\r\n    margin: 0;\r\n    z-index: 1;\r\n}`,\r\njs: `let clone\r\nconst switchingAlgorithm = (e, elementToInsert) => {\r\n    const droppable = e.droppable && e.droppable.closest('.switching-box')\r\n    const currentDroppable = e.currentDroppable  \r\n    if(droppable && currentDroppable \r\n        && droppable !== elementToInsert \r\n        && droppable !== currentDroppable) {\r\n\r\n        const droppableRect = droppable.getBoundingClientRect()\r\n        const isFirstChild = currentDroppable.firstElementChild === droppable\r\n        const isLastChild = currentDroppable.lastElementChild === droppable\r\n        const divident = isFirstChild ? 0 : isLastChild ? droppableRect.height : 2\r\n        /*the clone positioning is base on y axis*/\r\n        const isBefore = e.clientY - droppableRect.top < droppableRect.height/divident\r\n        const next = droppable.nextElementSibling\r\n        if(!next && !isBefore) {\r\n            currentDroppable.appendChild(elementToInsert)\r\n        }\r\n        currentDroppable.insertBefore(elementToInsert, isBefore ? droppable : next )\r\n    }\r\n}\r\n\r\nconst dragger = new Dragger('.switching-area', {\r\n    draggable: '.switching-box',\r\n    droppable: '.switching-area',\r\n    axis: 'y',\r\n})\r\n\r\ndragger.on('dragstart', (e) => {\r\n    const target = e.target\r\n    if(e.isDraggableElement) {\r\n        e.preventDefault() \r\n        clone && clone.remove()\r\n        clone = target.cloneNode(true)\r\n        clone.classList.add('drag-clone')\r\n        clone.classList.remove('n-flat-low')\r\n        target.closest('.switching-area').insertBefore(clone, e.target )\r\n        target.classList.add('grabbed')\r\n        target.classList.add('n-float-low')\r\n        target.classList.remove('n-flat-low')  \r\n    }\r\n   \r\n})\r\ndragger.on('dragover', (e) => { \r\n    switchingAlgorithm(e, clone)\r\n})  \r\ndragger.on('drop', (e) => {\r\n    const target = e.target  \r\n    if(e.isDraggableElement) {  \r\n        switchingAlgorithm(e, target) \r\n    } \r\n})\r\ndragger.on('dragend', (e) => {\r\n    const target = e.target\r\n    if(e.isDraggableElement) { \r\n        clone.remove()\r\n        Array.from(e.container.children)\r\n            .forEach((each, i) => each.dataset.index = i + 1)\r\n        setTimeout(() => {\r\n            target.classList.add('n-flat')\r\n            target.classList.remove('n-float')\r\n            target.classList.remove('grabbed')\r\n        }, 0)\r\n    }\r\n})`\r\n}","const req = require.context('./', true, /.js$/);\r\nconst whenDirectoryOnlyIndexAllowToExport = /^\\.\\/(?:\\w{1,50}\\/index|\\w{1,50})\\.js$/\r\nconst modules = req.keys().filter((dirname) => whenDirectoryOnlyIndexAllowToExport.test(dirname)).map(req);\r\n\r\nmodule.exports = modules.reduce((result, current) => {\r\n\tconst keys = Object.keys(current);\r\n\treturn keys.reduce((r, key) => {\r\n\t\tr[key] = current[key];\r\n\t\treturn r;\r\n\t}, result);\r\n}, {});\r\n","var map = {\n\t\"./Autoscroll.js\": 736,\n\t\"./Cloning.js\": 737,\n\t\"./Common.js\": 738,\n\t\"./Droppable.js\": 739,\n\t\"./GettingStarted.js\": 740,\n\t\"./RawDrag.js\": 741,\n\t\"./Switching.js\": 742,\n\t\"./index.js\": 638\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 735;","import React, { useEffect } from 'react';\r\nimport Dragger from 'draggerjs'\r\nimport { SectionWithCode } from 'Templates';\r\nimport * as code from '../StringCodes'; \r\n\r\nexport const Autoscroll = () => {\r\n    \r\n    useEffect(() => {\r\n        const dragger = new Dragger('#drag-autoscroll', {\r\n            draggable: '.draggable-box',\r\n            autoscroll: true\r\n        })\r\n        dragger.on('dragstart', (e) => { \r\n            const target = e.target\r\n            if(e.isDraggableElement) {\r\n                // prevent mobile from scrolling\r\n                // when dragging draggable element\r\n                e.preventDefault()\r\n                target.classList.add('grabbed')\r\n                if(target.classList.contains('center')) {\r\n                    target.classList.remove('center')\r\n                }\r\n            }\r\n        })\r\n        dragger.on('dragend', (e) => {\r\n            if(e.isDraggableElement) {  \r\n                e.target.classList.remove('grabbed') \r\n            }\r\n        })\r\n        return () => dragger.destroy()\r\n    }, [])\r\n\r\n    return (\r\n        <>  \r\n            <SectionWithCode\r\n                readonly\r\n                title='Autoscroll'\r\n                context={<>you can easily apply autoscroll in the draggerjs just add <b>autoscroll: true</b> in the options.</>}\r\n                code={code.Autoscroll}\r\n            >\r\n                <div className=\"drag-container drag-long-ground\" id=\"drag-autoscroll\"  data-example>  \r\n                    <div className=\"drag-around n-border-color\">\r\n                        <div className=\"draggable-box center n-flat\">\r\n                            <h1>Drag Me</h1>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </SectionWithCode>\r\n        </>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport Dragger from 'draggerjs'\r\nimport { SectionWithCode, Note } from 'Templates';\r\nimport * as code from '../StringCodes'; \r\n\r\nexport const Cloning = () => {\r\n\r\n    useEffect(() => {\r\n        let clone\r\n        const cloningAlgorithm = (e, elementToInsert) => {\r\n            const droppable = e.droppable && e.droppable.closest('.draggable-box')\r\n            const currentDroppable = e.currentDroppable \r\n            /*prevent cloning in the same droppable-area*/\r\n            if(e.target.closest('.droppable-area') === currentDroppable) return;\r\n            if(droppable && currentDroppable \r\n                && droppable !== elementToInsert \r\n                && droppable !== currentDroppable) {\r\n                const droppableRect = droppable.getBoundingClientRect()\r\n                /*the clone positioning is base on x axis*/\r\n                const isBefore = e.clientX - droppableRect.left < droppableRect.width/2\r\n                const next = droppable.nextElementSibling\r\n                if(!next && !isBefore) {\r\n                    currentDroppable.appendChild(elementToInsert)\r\n                }\r\n                currentDroppable.insertBefore(elementToInsert, isBefore ? droppable : next )\r\n            } else if(currentDroppable && e.droppable === currentDroppable){\r\n                currentDroppable.appendChild(elementToInsert)\r\n            }\r\n        }\r\n\r\n        const dragger = new Dragger('#drag-cloning', {\r\n            draggable: '.draggable-box',\r\n            droppable: '.droppable-area',\r\n        })\r\n        dragger.on('dragstart', (e) => {\r\n            const target = e.target\r\n            if(e.isDraggableElement) {\r\n                e.preventDefault() \r\n                clone = target.cloneNode(true)\r\n                clone.classList.add('drag-clone')\r\n                target.classList.add('grabbed')\r\n                target.classList.add('n-float')\r\n                target.classList.remove('n-flat') \r\n                \r\n            }\r\n           \r\n        })\r\n        dragger.on('dragover', (e) => { \r\n            cloningAlgorithm(e, clone)\r\n        }) \r\n        dragger.on('dragenter', (e) => {\r\n            if(e.isDraggableElement && e.target.parentElement !== e.currentDroppable) { \r\n                e.currentDroppable.classList.add('n-engrave') \r\n            } \r\n        })\r\n        dragger.on('dragexit', (e) => {\r\n            if(e.isDraggableElement && e.target.parentElement !== e.currentDroppable) { \r\n                e.currentDroppable.classList.remove('n-engrave') \r\n            }\r\n            /*remove clone when exiting*/\r\n            e.currentDroppable.contains(clone) && clone.remove()\r\n        })\r\n        dragger.on('drop', (e) => {\r\n            if(e.isDraggableElement) { \r\n                cloningAlgorithm(e, e.target) \r\n                e.currentDroppable.classList.remove('n-engrave') \r\n            } \r\n        })\r\n        dragger.on('dragend', (e) => {\r\n            const target = e.target\r\n            if(e.isDraggableElement) { \r\n                clone && clone.remove()\r\n                /*async it to show transition*/\r\n                setTimeout(() => {\r\n                    target.classList.add('n-flat')\r\n                    target.classList.remove('n-float')\r\n                    target.classList.remove('grabbed')\r\n                },0)\r\n            }\r\n        })\r\n        return () => dragger.destroy()\r\n    }, [])\r\n\r\n    return (\r\n        <>  \r\n            <SectionWithCode\r\n                readonly\r\n                title='Cloning'\r\n                context='you can clone as well.'\r\n                code={code.Cloning}\r\n            >\r\n                <div id=\"drag-cloning\" className=\"drag-container\" data-example>  \r\n                    <div className=\"droppable-area n-no-shadow n-border-color\">\r\n                        <div className=\"draggable-box n-no-shadow n-flat\" id=\"draggable-1\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"draggable-box n-no-shadow n-flat\" id=\"draggable-2\">\r\n                            <h1>2</h1>\r\n                        </div> \r\n                    </div>\r\n                    <div className=\"droppable-area n-no-shadow n-border-color\">\r\n                        <div className=\"draggable-box n-no-shadow n-flat\" id=\"draggable-3\">\r\n                            <h1>3</h1>\r\n                        </div>\r\n                        <div className=\"draggable-box n-no-shadow n-flat\" id=\"draggable-4\">\r\n                            <h1>4</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Note\r\n                    variant='warning'\r\n                    title='remember'\r\n                    context={<>When using <b>droppable</b> make sure to add <b>[hidden] {'{'} display: none !important; {'}'}</b> in your stylesheet. due to some changes in browsers which <b>hidden</b> property gets overridden.</>}\r\n                    style={{ marginTop: '20px' }}\r\n                />\r\n            </SectionWithCode>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { SectionWithCode } from 'Templates';\r\nimport * as code from '../StringCodes';\r\n\r\nexport const Installation = () => (\r\n\t<SectionWithCode\r\n\t\treadonly\r\n\t\ttitle='Installation(not publish yet)'\r\n\t\tcode={`npm i draggerjs`}\r\n\t\tlanguage='js'\r\n\t\ttheme={{\r\n\t\t\tplain: {\r\n\t\t\t\tcolor: 'rgb(215,215,215)',\r\n\t\t\t\tbackgroundColor: 'rgb(86,86,86)',\r\n\t\t\t},\r\n\t\t\tstyles: [],\r\n\t\t}}\r\n\t/>\r\n);\r\n\r\nexport const Importing = () => (\r\n\t<SectionWithCode readonly title='Imports' code={code.Importing} />\r\n);","import React, { useEffect } from 'react';\r\nimport Dragger from 'draggerjs'\r\nimport { SectionWithCode, Note } from 'Templates';\r\nimport * as code from '../StringCodes'; \r\n\r\nexport const Droppable = () => {\r\n\r\n    useEffect(() => {\r\n        const dragger = new Dragger('#drag-droppable', {\r\n            draggable: '.draggable-box',\r\n            droppable: '.droppable-area',\r\n        })\r\n        dragger.on('dragstart', (e) => {\r\n            const target = e.target\r\n            if(e.isDraggableElement) {\r\n                e.preventDefault() \r\n                target.classList.add('grabbed')\r\n                target.classList.add('n-float')\r\n                target.classList.remove('n-flat')\r\n            }\r\n           \r\n        })\r\n        dragger.on('dragend', (e) => {\r\n            const target = e.target\r\n            if(e.isDraggableElement) { \r\n                /*async it to show transition*/\r\n                setTimeout(() => {\r\n                    target.classList.add('n-flat')\r\n                    target.classList.remove('n-float')\r\n                    target.classList.remove('grabbed')\r\n                },0)\r\n            }\r\n        })\r\n        dragger.on('dragenter', (e) => {\r\n            if(e.isDraggableElement && e.target.parentElement !== e.currentDroppable) { \r\n                e.currentDroppable.classList.add('n-engrave') \r\n            }\r\n        })\r\n        dragger.on('dragexit', (e) => {\r\n            if(e.isDraggableElement && e.target.parentElement !== e.currentDroppable) { \r\n                e.currentDroppable.classList.remove('n-engrave') \r\n            }\r\n        })\r\n        dragger.on('drop', (e) => {\r\n            if(e.isDraggableElement) {\r\n                if(e.target.parentElement !== e.currentDroppable)\r\n                    e.currentDroppable.appendChild(e.target) \r\n                e.currentDroppable.classList.remove('n-engrave') \r\n            }\r\n        })\r\n        return () => dragger.destroy()\r\n    }, [])\r\n\r\n    return (\r\n        <>  \r\n            <SectionWithCode\r\n                readonly\r\n                title='Droppable'\r\n                context='you can use droppable as well.'\r\n                code={code.Droppable}\r\n            >\r\n                <div id=\"drag-droppable\" className=\"drag-container\" data-example>  \r\n                    <div className=\"droppable-area n-no-shadow n-border-color\">\r\n                        <div className=\"draggable-box n-no-shadow n-flat\">\r\n                            <h1>1</h1>\r\n                        </div>\r\n                        <div className=\"draggable-box n-no-shadow n-flat\">\r\n                            <h1>2</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"droppable-area n-no-shadow n-border-color\"></div>\r\n                </div>\r\n                <Note\r\n                    variant='warning'\r\n                    title='remember'\r\n                    context={<>When using <b>droppable</b> make sure to add <b>[hidden] {'{'} display: none !important; {'}'}</b> in your stylesheet. due to some changes in browsers which <b>hidden</b> property gets overridden.</>}\r\n                    style={{ marginTop: '20px' }}\r\n                />\r\n            </SectionWithCode>\r\n        </>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport Dragger from 'draggerjs'\r\nimport { SectionWithCode } from 'Templates';\r\nimport * as code from '../StringCodes'; \r\n\r\nexport const GettingStarted = () => {\r\n    \r\n    useEffect(() => {\r\n        const dragger = new Dragger('#drag-getting-started', {\r\n            draggable: '.draggable-box'\r\n        })\r\n        dragger.on('dragstart', (e) => { \r\n            const target = e.target\r\n            if(e.isDraggableElement) {\r\n                // prevent mobile from scrolling\r\n                // when dragging draggable element\r\n                e.preventDefault()\r\n                target.classList.add('grabbed')\r\n                if(target.classList.contains('center')) {\r\n                    target.classList.remove('center')\r\n                }\r\n            }\r\n        })\r\n        dragger.on('dragend', (e) => {\r\n            if(e.isDraggableElement) {  \r\n                e.target.classList.remove('grabbed') \r\n            }\r\n        })\r\n        return () => dragger.destroy()\r\n    }, [])\r\n\r\n    return (\r\n        <>  \r\n            <SectionWithCode\r\n                readonly\r\n                title='Getting Started'\r\n                context='we are getting started using draggerjs.'\r\n                code={code.GettingStarted}\r\n            >\r\n                <div className=\"drag-container\" id=\"drag-getting-started\"  data-example>  \r\n                    <div className=\"drag-around n-border-color\">\r\n                        <div className=\"draggable-box center n-flat\">\r\n                            <h1>Drag Me</h1>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </SectionWithCode>\r\n        </>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport Dragger from 'draggerjs'\r\nimport { SectionWithCode } from 'Templates';\r\nimport * as code from '../StringCodes'; \r\n\r\nexport const RawDrag = () => {\r\n    \r\n    useEffect(() => {\r\n        let cleanUp\r\n        let isComplete = false \r\n        const target = document.querySelector('.drag-drawer-content')\r\n        \r\n        const dragger = new Dragger('#drag-raw-drag')\r\n        dragger.on('dragstart', (e) => { \r\n            if(target === e.target) {\r\n                e.target.nodeName !== 'A' && e.preventDefault()\r\n                target.style.left = (isComplete ? 0 : -target.clientWidth) + 'px'\r\n                target.classList.remove('draw-transition')  \r\n                clearTimeout(cleanUp)\r\n            }\r\n        })\r\n        dragger.on('dragmove', (e) => {    \r\n            if(target === e.target) {\r\n                const width = target.clientWidth  \r\n                const distance = (isComplete ? e.moveX - e.startX : (e.moveX - e.startX) - width)\r\n                target.style.left = (0 > distance ? -width > distance ? -width : distance : 0) + 'px' \r\n            }\r\n        }) \r\n        dragger.on('dragend', (e) => { \r\n            if(target === e.target) {\r\n                const width = target.clientWidth \r\n                const distance = isComplete ? (e.endX - e.startX) + width :  e.endX - e.startX \r\n                if(distance > target.clientWidth/2) {\r\n                    target.classList.add('draw-full')\r\n                    isComplete = true\r\n                } else {  \r\n                    target.classList.remove('draw-full') \r\n                    isComplete = false\r\n                }\r\n                target.style.left = null\r\n                target.classList.add('draw-transition') \r\n                cleanUp = setTimeout(() => {\r\n                    target.classList.remove('draw-transition')\r\n                }, 300) \r\n            }\r\n        })\r\n        return () => {\r\n            clearTimeout(cleanUp)\r\n            dragger.destroy()\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>  \r\n            <SectionWithCode\r\n                readonly\r\n                title='Raw Draggable'\r\n                context='you can create with your own drag mechanics.'\r\n                code={code.RawDrag}\r\n            >\r\n                <div className=\"drag-drawer n-bordered\" id=\"drag-raw-drag\" data-example>  \r\n                    <div className=\"drag-drawer-content n-no-shadow n-engrave\" > \r\n                        <nav className=\"n-nav n-nav-flat n-nav-column\" onClick={(e) => e.preventDefault()}>\r\n                            <a className=\"n-nav-link\" href=\"#\">link-1</a>\r\n                            <a className=\"n-nav-link\" href=\"#\">link-2</a>\r\n                            <a className=\"n-nav-link\" href=\"#\">link-3</a>\r\n                        </nav> \r\n                    </div>\r\n                </div>\r\n            </SectionWithCode>\r\n        </>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport Dragger from 'draggerjs'\r\nimport { SectionWithCode, Note } from 'Templates';\r\nimport * as code from '../StringCodes'; \r\n\r\nexport const Switching = () => {\r\n\r\n    useEffect(() => {\r\n        let clone\r\n        const switchingAlgorithm = (e, elementToInsert) => {\r\n            const droppable = e.droppable && e.droppable.closest('.switching-box')\r\n            const currentDroppable = e.currentDroppable  \r\n            if(droppable && currentDroppable \r\n                && droppable !== elementToInsert \r\n                && droppable !== currentDroppable) {\r\n\r\n                const droppableRect = droppable.getBoundingClientRect()\r\n                const isFirstChild = currentDroppable.firstElementChild === droppable\r\n                const isLastChild = currentDroppable.lastElementChild === droppable\r\n                const divident = isFirstChild ? 0 : isLastChild ? droppableRect.height : 2\r\n                /*the clone positioning is base on y axis*/\r\n                const isBefore = e.clientY - droppableRect.top < droppableRect.height/divident\r\n                const next = droppable.nextElementSibling\r\n                if(!next && !isBefore) {\r\n                    currentDroppable.appendChild(elementToInsert)\r\n                }\r\n                currentDroppable.insertBefore(elementToInsert, isBefore ? droppable : next )\r\n            }\r\n        }\r\n\r\n        const dragger = new Dragger('.switching-area', {\r\n            draggable: '.switching-box',\r\n            droppable: '.switching-area',\r\n            axis: 'y',\r\n        })\r\n        \r\n        dragger.on('dragstart', (e) => {\r\n            const target = e.target\r\n            if(e.isDraggableElement) {\r\n                e.preventDefault() \r\n                clone && clone.remove()\r\n                clone = target.cloneNode(true)\r\n                clone.classList.add('drag-clone')\r\n                clone.classList.remove('n-flat-low')\r\n                target.closest('.switching-area').insertBefore(clone, e.target )\r\n                target.classList.add('grabbed')\r\n                target.classList.add('n-float-low')\r\n                target.classList.remove('n-flat-low')  \r\n            }\r\n           \r\n        })\r\n        dragger.on('dragover', (e) => { \r\n            switchingAlgorithm(e, clone)\r\n        })  \r\n        dragger.on('drop', (e) => {\r\n            const target = e.target  \r\n            if(e.isDraggableElement) {  \r\n                switchingAlgorithm(e, target) \r\n            } \r\n        })\r\n        dragger.on('dragend', (e) => {\r\n            const target = e.target\r\n            if(e.isDraggableElement) { \r\n                clone.remove()\r\n                Array.from(e.container.children)\r\n                    .forEach((each, i) => each.dataset.index = i + 1)\r\n                setTimeout(() => {\r\n                    target.classList.add('n-flat')\r\n                    target.classList.remove('n-float')\r\n                    target.classList.remove('grabbed')\r\n                }, 0)\r\n            }\r\n        })\r\n        return () => dragger.destroy()\r\n    }, [])\r\n\r\n    return (\r\n        <>  \r\n            <SectionWithCode\r\n                readonly\r\n                title='Switching'\r\n                context='you can do switching as well.'\r\n                code={code.Switching}\r\n            >  \r\n                <ul className=\"switching-area\" data-example>\r\n                    <li className=\"switching-box n-no-shadow n-flat-low\" data-index=\"1\">\r\n                        <h5>Apple</h5>\r\n                    </li>\r\n                    <li className=\"switching-box n-no-shadow n-flat-low\" data-index=\"2\">\r\n                        <h5>Peach</h5>\r\n                    </li> \r\n                    <li className=\"switching-box n-no-shadow n-flat-low\" data-index=\"3\">\r\n                        <h5>Orange</h5>\r\n                    </li>\r\n                    <li className=\"switching-box n-no-shadow n-flat-low\" data-index=\"4\">\r\n                        <h5>Grapes</h5>\r\n                    </li>\r\n                    <li className=\"switching-box n-no-shadow n-flat-low\" data-index=\"5\">\r\n                        <h5>Banana</h5>\r\n                    </li>\r\n                </ul>  \r\n                <Note\r\n                    variant='warning'\r\n                    title='remember'\r\n                    context={<>When using <b>droppable</b> make sure to add <b>[hidden] {'{'} display: none !important; {'}'}</b> in your stylesheet. due to some changes in browsers which <b>hidden</b> property gets overridden.</>}\r\n                    style={{ marginTop: '20px' }}\r\n                />\r\n            </SectionWithCode>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { Section, Table } from 'Templates';\r\n\r\nconst DraggerRows = [\r\n\t{\r\n\t\tname: 'new Dragger(',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n\t{\r\n\t\tname: 'container,',\r\n\t\ttype: 'string | element | node',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the container or the playground of the Dragger.',\r\n\t},\r\n\t{\r\n\t\tname: 'options',\r\n\t\ttype: 'object',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the options of the Dragger.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: '{',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'draggable,',\r\n\t\t\t\ttype: 'string',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'it is the query selector of the element children of container which are allowed to be drag.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'droppable,',\r\n\t\t\t\ttype: 'string',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'it is the query selector of the element children of container which are allowed to be drop.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'axis',\r\n\t\t\t\ttype: \"'x' | 'y'\",\r\n\t\t\t\tdefault: 'null',\r\n\t\t\t\tdescription: <>when you have <b>draggable</b>. you can limit its axis by x or y.</>,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'allowBoundContainer,',\r\n\t\t\t\ttype: 'boolean',\r\n\t\t\t\tdefault: 'true',\r\n\t\t\t\tdescription: 'it is use bound the draggable elements inside the container element.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'allowExactDraggable,',\r\n\t\t\t\ttype: 'boolean',\r\n\t\t\t\tdefault: 'false',\r\n\t\t\t\tdescription: 'it is use to target the exact draggable element, when true even if you targeted the children of the draggable elements, it still will not move.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'autoscroll,',\r\n\t\t\t\ttype: 'boolean',\r\n\t\t\t\tdefault: 'false',\r\n\t\t\t\tdescription: 'it is use to allow auto scroll in the container.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'autoscrollSensitivity,',\r\n\t\t\t\ttype: 'number',\r\n\t\t\t\tdefault: '20',\r\n\t\t\t\tdescription: 'it is sensivity radius of the auto scroll when dragging in the container edge.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'eventListenerOption',\r\n\t\t\t\ttype: 'boolean | object',\r\n\t\t\t\tdefault: 'false',\r\n\t\t\t\tdescription: 'you can set your own options in addEventListener.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: '}',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t]\r\n\t}, \r\n\t{\r\n\t\tname: ')',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n];  \r\n\r\nconst EventTypes = [\r\n\t{\r\n\t\tname: 'dragstart',\r\n\t\ttype: '-',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it will be invoked when the user touch or click the container',\r\n\t},\r\n\t{\r\n\t\tname: 'dragmove',\r\n\t\ttype: '-',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it will be invoked when the user is dragging inside container',\r\n\t},\r\n\t{\r\n\t\tname: 'dragend',\r\n\t\ttype: '-',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it will be invoked when the user is drop the touch or click inside container',\r\n\t},\r\n\t{\r\n\t\tname: 'dragenter',\r\n\t\ttype: '-',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it will be invoked when the user drag entered the droppable element inside container',\r\n\t},\r\n\t{\r\n\t\tname: 'dragover',\r\n\t\ttype: '-',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it will be invoked when the user drag is moving in the droppable element inside container',\r\n\t},\r\n\t{\r\n\t\tname: 'dragexit',\r\n\t\ttype: '-',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it will be invoked when the user drag exited the droppable element inside container',\r\n\t},\r\n\t{\r\n\t\tname: 'drop',\r\n\t\ttype: '-',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it will be invoked when the user droped inside the droppable element',\r\n\t},\r\n]\r\n\r\nconst MethodRows = [\r\n\t{\r\n\t\tname: 'Instance.on',\r\n\t\ttype: 'void',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the method to add Dragger event listener',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Instance.on(',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'eventType',\r\n\t\t\t\ttype: 'string',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'it is the type of event you want to add. the allowed type are the following dragstart, dragend, dragend, dragenter, dragexit and drop',\r\n\t\t\t\tdata: EventTypes\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'callback',\r\n\t\t\t\ttype: 'function',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'it is the callback that will be invoke when the eventType is triggered.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: '): void',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Instance.off',\r\n\t\ttype: 'void',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the method to remove Dragger event listener',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Instance.off(',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'eventType',\r\n\t\t\t\ttype: 'string',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'it is the type of event you want to remove. the allowed type are the following dragstart, dragmove, dragend, dragenter, dragexit and drop',\r\n\t\t\t\tdata: EventTypes\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: '): void',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'Instance.destroy',\r\n\t\ttype: 'void',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is use to destroy and kill the Dragger.',\r\n\t},\r\n]\r\n\r\nconst EventsRows = [ \r\n\t{\r\n\t\tname: 'type',\r\n\t\ttype: 'string',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is event type.',\r\n\t},\r\n\t{\r\n\t\tname: 'preventDefault',\r\n\t\ttype: 'method',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is use to prevent default.',\r\n\t},\r\n\t{\r\n\t\tname: 'stopPropagation',\r\n\t\ttype: 'method',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is use to stop the propagation.',\r\n\t},\r\n\t{\r\n\t\tname: 'originalEvent',\r\n\t\ttype: 'object',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the original event',\r\n\t},\r\n\t{\r\n\t\tname: 'clientX',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the x position of the cursor in window',\r\n\t},\r\n\t{\r\n\t\tname: 'clientY',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the y position of the cursor in window',\r\n\t},\r\n\t{\r\n\t\tname: 'startX',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the start x position of the cursor in container.',\r\n\t},\r\n\t{\r\n\t\tname: 'startY',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the start y position of the cursor in container.',\r\n\t},\r\n\t{\r\n\t\tname: 'moveX',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the current x position of the cursor in container.',\r\n\t},\r\n\t{\r\n\t\tname: 'moveY',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the current y position of the cursor in container.',\r\n\t},\r\n\t{\r\n\t\tname: 'endX',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the end x position of the cursor in container.',\r\n\t},\r\n\t{\r\n\t\tname: 'endY',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the end y position of the cursor in container.',\r\n\t},\r\n\t{\r\n\t\tname: 'isDraggableElement',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it indicates if the targeted element is draggable.',\r\n\t},\r\n\t{\r\n\t\tname: 'target',\r\n\t\ttype: 'element | node',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the element which is targeted.',\r\n\t},\r\n\t{\r\n\t\tname: 'container',\r\n\t\ttype: 'element | node',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the element container.',\r\n\t},\r\n\t{\r\n\t\tname: 'droppable (dragover, dragenter, drop)',\r\n\t\ttype: 'element | node',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the element inside droppable container where the target is landed. it might be the children of the droppable container.',\r\n\t},\r\n\t{\r\n\t\tname: 'currentDroppable (dragover, dragenter, dragexit, drop)',\r\n\t\ttype: 'element | node',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'it is the droppable container element which you want to drop (dragenter), you fail to drop (dragexit) or you dropped (drop).',\r\n\t},\r\n]\r\n\r\nexport const Dragger = () => (\r\n\t<Section\r\n\t\ttitle='Dragger'>\r\n\t\t<Table.ForAPI nameLabel=\"Argument\" data={DraggerRows} />\r\n\t</Section>\r\n);\r\n\r\nexport const Methods = () => (\r\n\t<Section\r\n\t\ttitle='Dragger Methods'>\r\n\t\t<Table.ForAPI nameLabel=\"Method\" typeLabel=\"Return\" data={MethodRows} />\r\n\t</Section>\r\n);\r\n\r\nexport const EventProp = () => (\r\n\t<Section\r\n\t\ttitle='Event Properties'>\r\n\t\t<Table.ForAPI data={EventsRows} />\r\n\t</Section>\r\n);","import React from 'react'; \r\nimport { MainContainer, SidePanel, Article, HeadGear } from 'Templates';\r\nimport * as Section from './Sections';\r\nimport * as Table from './Tables';\r\n\r\nconst Draggerjs = () => { \r\n\tconst title = 'Draggerjs (not publish yet)';\r\n\tconst context = `is a pure vanila javascript without dependency which is use to drag and drop elements in easy and understabdable way.`;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HeadGear>\r\n\t\t\t \t<HeadGear.Meta \r\n\t\t\t\t\ttitle={`${title} - Javascript Libraries | Mytabworks `}\r\n\t\t\t\t\tdescription={context}\r\n\t\t\t\t\timage='/images/icons/icon-512x512.png'\r\n\t\t\t\t/>\r\n\t\t\t</HeadGear>\r\n\t\t\t<MainContainer \r\n\t\t\t\ttitle={title}\r\n\t\t\t\tcontext={context}\r\n\t\t\t\tmain={<DraggerjsMain />}\r\n\t\t\t\tside={<DraggerjsSidePanel />}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nDraggerjs.propTypes = {}; \r\n\r\nconst DraggerjsMain = () => (\r\n\t<>\r\n\t\t<Section.Installation />\r\n\t\t<Section.Importing />\r\n\t\t<Section.GettingStarted /> \r\n\t\t<Section.Autoscroll />\r\n\t\t<Section.RawDrag />\r\n\t\t<Section.Droppable />\r\n\t\t<Section.Cloning />\r\n\t\t<Section.Switching />\r\n\t\t<Article title='API'>\r\n\t\t\t<Table.Dragger /> \r\n\t\t\t<Table.Methods /> \r\n\t\t\t<Table.EventProp />\r\n\t\t</Article>\r\n\t</>\r\n);\r\n\r\nconst DraggerjsSidePanel = () => {\r\n\tconst list = [\r\n\t\t{ label: 'Installation' },\r\n\t\t{ label: 'Imports' },\r\n\t\t{\r\n\t\t\tlabel: 'Getting Started',\r\n\t\t\tsub: [\r\n\t\t\t\t{ label: 'Autoscroll' },\r\n\t\t\t\t{ label: 'Raw Draggable' },\r\n\t\t\t\t{ label: 'Droppable' },\r\n\t\t\t\t{ label: 'Cloning' },\r\n\t\t\t\t{ label: 'Switching' },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'API',\r\n\t\t\tsub: [\r\n\t\t\t\t{ label: 'Dragger' },\r\n\t\t\t\t{ label: 'Dragger Methods' },\r\n\t\t\t\t{ label: 'Event Properties' },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\treturn <SidePanel.ScrollNav list={list} />;\r\n};\r\n\r\nexport default Draggerjs"],"sourceRoot":""}