{"version":3,"sources":["App/Main/Pages/Others/ComingSoon.js","Components/validozer/validators.js","Components/validozer/messages.js","Components/validozer/utils.js","Components/validozer/index.js","Components/formydable/FormEvent.js","Components/formydable/FormHooks.js","Components/formydable/FormState.js","Components/donevent/index.js","Components/formydable/index.js","Snippets/Spinner/index.js","Components/requestjs/defaults.js","Components/requestjs/utils.js","Components/requestjs/index.js"],"names":["ComingSoon","useForm","subscribe","label","rules","formState","formUpdate","formSubmit","handleSubmit","event","cookie","get","Toast","create","isReady","key","uid","className","loading","options","duration","request","GoogleAppURL","method","headers","responseType","body","param","then","response","status","Error","success","catch","reset","set","expressionRef","createRef","useEffect","expression","current","handler","classList","document","keyHiddenEvent","addHiddenEventListener","removeHiddenEventListener","ref","data-color-changable","onSubmit","isInvalid","isValidated","type","name","placeholder","value","onChange","message","validators","alpha","regexp","exe","received","length","this","test","numeric","email","max","parameter","parseInt","Array","isArray","min","required","mimes","from","every","file","filename","split","includes","toLowerCase","alpha_space","alpha_slug","alpha_dash","alpha_num","url","max_size","some","size","min_size","required_if","parameter_value","other_value","data","val","RegExp","trim","same","messages","string","array","is","a","toString","Validator","isFail","Object","keys","map","validate","filter","Map","extension","forEach","extname","validator","assign","attribute","catch_name","catch_param","catch_value","validation","TypeError","allowMessageEvenValid","messageFromstack","replace","alias","failedIn","FormEvent","form","statuses","formstatuses","target","correction","autoscroll","root","documentElement","rootTop","scrollTop","errorTop","reduce","result","error","querySelector","Math","getBoundingClientRect","top","callback","field","aliasOf","endsWith","push","paramArray","res","substr","FormData","FormContext","createContext","useFormSupplier","useContext","formUpdater","schema","files","selectedOptions","querySelectorAll","element","checked","box","multiple","updateState","findOrCreate","state","immutableSchema","originalSchema","resetSchema","defaultSchema","useState","setSchema","useFormWhenMount","handlerSubmit","isSubmit","preventDefault","updatedSchema","formevent","originalEvent","formRegistry","FormStateProvider","children","Provider","defaultProps","DoneTypingEvent","timeoutReference","ms","withKeyboardCB","typingEventHandlerForChildren","keyCode","which","isInputBlurOrPressEnter","nodeName","typeIsKeyUpUnlessItIsBackspace","FakeEvent","clearTimeout","undefined","setTimeout","onBlur","onKeyUp","onKeyPress","Spinner","props","version","id","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","preserveAspectRatio","width","height","cx","cy","r","points","stroke","defaults","cache","credentials","timeout","onupload","ondownload","initialize","ServerResponse","xhr","statusText","getAllResponseHeaders","header","Promise","resolve","reject","XMLHttpRequest","open","withCredentials","setRequestHeader","upload","onprogress","onload","onabort","DOMException","onerror","ontimeout","send","global"],"mappings":"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","file":"static/js/8.39c938ae.chunk.js","sourcesContent":["import React, { useEffect, createRef } from 'react';\r\nimport { useForm } from 'formydable';\r\nimport request from 'requestjs';\r\nimport Toast from 'Snippets/Toast';\r\nimport { Spinner } from 'Snippets/Spinner';\r\nimport {\r\n    uid,\r\n\taddHiddenEventListener,\r\n\tremoveHiddenEventListener,\r\n\tkeyHiddenEvent,\r\n\tcookie\r\n} from 'Common/Utils';\r\nimport { GoogleAppURL } from 'Common/Constant';\r\n\r\nconst ComingSoon = () => {\r\n\tconst { formState, formUpdate, formSubmit } = useForm({\r\n\t\tsubscribe: { label: 'subscribe', rules: 'required|email' },\r\n\t});\r\n\r\n\tconst subscribe = formState('subscribe');\r\n\r\n\tconst handleSubmit = formSubmit((event) => {\r\n\t\tconst cookieKey = \"SBC\"\r\n\t\tif(cookie.get(cookieKey)) {\r\n\t\t\treturn Toast.create( \r\n\t\t\t\t'you are already subscribed try again tommorow' \r\n\t\t\t);\r\n\t\t}\r\n\t\tif (event.isReady()) {\r\n\t\t\tconst key = uid();\r\n\t\t\tToast.create(\r\n\t\t\t\t<div className=\"d-flex flex-center-y\">\r\n\t\t\t\t\t<Spinner loading={true} />\r\n\t\t\t\t\tsubscribing...\r\n\t\t\t\t</div>,\r\n\t\t\t\t{ key, options: { duration: 20000 } }\r\n\t\t\t);\r\n\r\n\t\t\trequest(GoogleAppURL, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t\t\t},\r\n\t\t\t\tresponseType: 'json',\r\n\t\t\t\tbody: event.param()+'&action=subscribe'\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif(response.status >= 400) {\r\n\t\t\t\t\tthrow Error(\"\")\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(() =>\r\n\t\t\t\tToast.create(\r\n\t\t\t\t\t<div className=\"d-flex flex-center-y\">\r\n\t\t\t\t\t\t<Spinner success={true} />\r\n\t\t\t\t\t\tWe will notify you when we publish something\r\n\t\t\t\t\t</div>,\r\n\t\t\t\t\t{ key, options: { duration: 4000 } }\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.catch(() =>\r\n\t\t\t\tToast.create(\r\n\t\t\t\t\t<div className=\"d-flex flex-center-y\">\r\n\t\t\t\t\t\t<Spinner success={false} />\r\n\t\t\t\t\t\tsomething went wrong try again later\r\n\t\t\t\t\t</div>,\r\n\t\t\t\t\t{ key, options: { duration: 4000 } }\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tevent.reset();\r\n\t\t\tcookie.set(cookieKey, \"true\", 1)\r\n\t\t}\r\n\t});\r\n\tconst expressionRef = createRef();\r\n\tuseEffect(() => {\r\n\t\tconst expression = expressionRef.current;\r\n\t\tconst handler = () => {\r\n\t\t\texpression.classList[document[keyHiddenEvent] ? 'remove' : 'add'](\r\n\t\t\t\t'active'\r\n            );\r\n\t\t};\r\n\t\taddHiddenEventListener(handler);\r\n\t\treturn () => removeHiddenEventListener(handler);\r\n\t}, [expressionRef]);\r\n\treturn (\r\n\t\t<div className='status-code'>\r\n\t\t\t<div className='active' ref={expressionRef}>\r\n\t\t\t\t<div className='status-lite' data-color-changable={true}>\r\n\t\t\t\t\t<div className='animate-wrench'>\r\n\t\t\t\t\t\t<i className='mytabworks icon-wrench' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<i className='mytabworks icon-cog' />\r\n\t\t\t\t\tMING SOON\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='hr n-bg' />\r\n\t\t\t\t<p className='description n-text-dim-color'>\r\n\t\t\t\t\tWe're currently working on creating this library <br />\r\n\t\t\t\t\tsubscribe to be notified when something is publish.\r\n\t\t\t\t</p>\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`n-form-field${\r\n\t\t\t\t\t\t\tsubscribe.isInvalid\r\n\t\t\t\t\t\t\t\t? ' n-form-invalid'\r\n\t\t\t\t\t\t\t\t: subscribe.isValidated\r\n\t\t\t\t\t\t\t\t? ' n-form-valid'\r\n\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t}`}>\r\n\t\t\t\t\t\t<div className='n-input-group'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName='n-form-control'\r\n\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\tname='subscribe'\r\n\t\t\t\t\t\t\t\tplaceholder='Enter your e-mail'\r\n\t\t\t\t\t\t\t\tvalue={subscribe.value}\r\n\t\t\t\t\t\t\t\tonChange={formUpdate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className='n-input-group-append'>\r\n\t\t\t\t\t\t\t\t<button className='n-btn' type='submit'>\r\n\t\t\t\t\t\t\t\t\tSubscribe\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='n-invalid-feedback'>\r\n\t\t\t\t\t\t\t{subscribe.isInvalid && subscribe.message}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ComingSoon;","const validators = {\r\n    alpha: {\r\n        regexp: /^[A-Za-z]+$/,\r\n        exe({received}) {\r\n            return received.length && !this.regexp.test(received);\r\n        },\r\n    },\r\n\r\n    numeric: {\r\n        regexp: /^\\d+$/,\r\n        exe({received}) {\r\n            return received.length && !this.regexp.test(received);\r\n        },\r\n    },\r\n\r\n    email: {\r\n        regexp: /^[\\w.]{2,40}@[\\w]{2,20}\\.[a-z]{2,3}(?:\\.[a-z]{2})?$/,\r\n        exe({received}) {\r\n            return received.length && !this.regexp.test(received);\r\n        },\r\n    },\r\n\r\n    max: {\r\n        exe({received, parameter}) {\r\n            const max = parseInt(parameter);\r\n\r\n            return !Array.isArray(received) && /^\\d+$/.test(received)\r\n                ? received && parseInt(received) > max\r\n                : received.length && received.length > max;\r\n        },\r\n    },\r\n\r\n    min: {\r\n        exe({received, parameter}) {\r\n            const min = parseInt(parameter);\r\n\r\n            return !Array.isArray(received) && /^\\d+$/.test(received)\r\n                ? received && parseInt(received) < min\r\n                : received.length && received.length < min;\r\n        },\r\n    },\r\n\r\n    required: {\r\n        exe({received}) {\r\n            return !received.length;\r\n        },\r\n    },\r\n\r\n    mimes: {\r\n        exe({received, parameter}) {\r\n            return !Array.from(received).every((file) => {\r\n                const filename = file.name.split('.');\r\n                return parameter.includes(filename[filename.length - 1].toLowerCase());\r\n            });\r\n        },\r\n    },\r\n    \r\n    alpha_space: {\r\n        regexp: /^[A-Za-z\\s]+$/,\r\n        exe({received}) {\r\n            return received.length && !this.regexp.test(received);\r\n        },\r\n    },\r\n\r\n    alpha_slug: {\r\n        regexp: /^[a-zA-Z\\d_]+$/,\r\n        exe({received}) {\r\n            return received.length && !this.regexp.test(received);\r\n        },\r\n    },\r\n\r\n    alpha_dash: {\r\n        regexp: /^[a-zA-Z\\d-]+$/,\r\n        exe({received}) {\r\n            return received.length && !this.regexp.test(received);\r\n        },\r\n    },\r\n\r\n    alpha_num: {\r\n        regexp: /^[a-zA-Z\\d]+$/,\r\n        exe({received}) {\r\n            return received.length && !this.regexp.test(received);\r\n        },\r\n    },\r\n\r\n    url: {\r\n        regexp: /^(?:https?:\\/\\/)?([a-z]{3}\\.)?([a-z]{3,20}\\.)?[\\w]{3,20}\\.[a-z]{2,3}(?:\\/.*)?$/,\r\n        exe({received}) {\r\n            return received.length && !this.regexp.test(received);\r\n        },\r\n    },\r\n\r\n    max_size: {\r\n        exe({received, parameter}) {\r\n            const max_size = parseInt(parameter);\r\n            return (\r\n                received.length &&\r\n                Array.from(received).some((value) => value.size / 1000 > max_size)\r\n            );\r\n        },\r\n    },\r\n\r\n    min_size: {\r\n        exe({received, parameter}) {\r\n            const min_size = parseInt(parameter);\r\n            return (\r\n                received.length &&\r\n                Array.from(received).some((value) => value.size / 1000 < min_size)\r\n            );\r\n        },\r\n    },\r\n\r\n    required_if: {\r\n        exe({received, parameter, parameter_value, data}) {\r\n            const other_value = data[parameter]\r\n            \r\n            if(Array.isArray(other_value)) {\r\n                return !received.length && other_value.some(\r\n                    (val) => new RegExp(`^${parameter_value.trim()}$`).test(val)\r\n                )\r\n            }\r\n            return (\r\n                !received.length && new RegExp(`^${parameter_value.trim()}$`).test(other_value)\r\n            );\r\n        },\r\n    },\r\n\r\n    same: {\r\n        exe({received, parameter, data}) { \r\n            return received.length && data[parameter] !== received;\r\n        },\r\n    },\r\n};\r\n\r\nexport default validators","const messages = {\r\n    alpha: 'The :attribute may only contain letters.',\r\n\r\n    numeric: 'The :attribute may only contain numbers.',\r\n\r\n    email: 'The :attribute must be a valid email.',\r\n\r\n    max: {\r\n        numeric: 'The :attribute may not be greater than :max.',\r\n        file: 'The :attribute may not be greater than :max files.',\r\n        string: 'The :attribute may not be greater than :max characters.',\r\n        array: 'The :attribute may not be greater than :max items.',\r\n    },\r\n\r\n    min: {\r\n        numeric: 'The :attribute must be atleast :min.',\r\n        file: 'The :attribute must be atleast :min files.',\r\n        string: 'The :attribute must be atleast :min characters.',\r\n        array: 'The :attribute must be atleast :min items.',\r\n    },\r\n\r\n    required: 'The :attribute field is required.',\r\n\r\n    mimes: 'The :attribute only allow :mimes.',\r\n    \r\n    alpha_space: 'The :attribute must contain letters with spaces.',\r\n\r\n    alpha_slug: 'The :attribute may only contain letters, numbers, and underscores.',\r\n\r\n    alpha_dash: 'The :attribute may only contain letters, numbers, and dashes.',\r\n\r\n    alpha_num: 'The :attribute may only contain letters and numbers.',\r\n\r\n    url: 'The :attribute must be a valid url.',\r\n\r\n    max_size: 'The :attribute may not be greater :max_size kilobytes.',\r\n\r\n    min_size: 'The :attribute must be atleast :min_size kilobytes.',\r\n\r\n    required_if: 'The :attribute field is required when :required_if is :value.',\r\n\r\n    same: 'The :attribute and :same must match.',\r\n};\r\n\r\nexport default messages","export const is = {\r\n    obj: (a) => !!a && a !== '[object Object]' && a.toString() === '[object Object]',\r\n    fnc: (a) => typeof a === 'function'\r\n}","import validators from './validators';\r\nimport messages from './messages';\r\nimport { is } from './utils';\r\nexport default class Validator {\r\n    data;\r\n    rules;\r\n    messages = [] \r\n\r\n    static rulesExtend(extension) {\r\n        if(!is.obj(extension)) {\r\n            throw new Error(`Invalid rule extention`);\r\n        }\r\n        Object.keys(extension).forEach((extname) => {\r\n            const { message, ...validator } = extension[extname]\r\n            if(!is.fnc(validator.exe)) {\r\n                throw new Error(`Invalid rule extention method \\`exe\\` is missing in rule \\`${extname}\\``);\r\n            }\r\n            Object.assign(messages, { [extname]: message });\r\n            Object.assign(validators, { [extname]: validator });\r\n        })\r\n    }\r\n    \r\n    static rulesUpdateMessage(name, message) {\r\n        if (!validators[name]) {\r\n            throw new Error(`\"${name}\" is not part of Validator rules`);\r\n        }\r\n        messages[name] =\r\n            is.obj(message) && ['min', 'max'].includes(name)\r\n                ? { ...messages[name], ...message }\r\n                : message;\r\n    }\r\n    \r\n    static validate(received, rules, attribute, data) {\r\n        const array_rules = rules.split('|');\r\n        let catch_name, catch_param, catch_value;\r\n        const isInvalid = array_rules.some((validation) => { \r\n            const [name, param, value] = validation.split(/:|=/);\r\n            catch_name = name;\r\n            catch_param = param;\r\n            catch_value = value;\r\n            if (!validators[name])\r\n                throw new TypeError(\r\n                    `Validator does not recognize rule \\`${name}\\` in \\`${attribute}\\``\r\n                ); \r\n\r\n            return validators[name].exe({ \r\n                received, \r\n                data,\r\n                parameter: param && param.split('@')[0],\r\n                parameter_value: value && value.split('@')[0],\r\n            })\r\n        });\r\n    \r\n        if (isInvalid || validators[catch_name].allowMessageEvenValid) {\r\n            let messageFromstack = messages[catch_name] || validators[catch_name].message || `The :attribute is ${catch_name}`;\r\n            let message;\r\n            if (messageFromstack.toString() === '[object Object]') {\r\n                if (!Array.isArray(received) && /^\\d+$/.test(received)) {\r\n                    messageFromstack = messageFromstack.numeric;\r\n                } else if (typeof received === 'string') {\r\n                    messageFromstack = messageFromstack.string;\r\n                } else if (Array.isArray(received)) {\r\n                    messageFromstack = messageFromstack.array;\r\n                } else {\r\n                    messageFromstack = messageFromstack.file;\r\n                }\r\n            }\r\n    \r\n            message = messageFromstack.replace(':attribute', attribute);\r\n    \r\n            if (catch_param) {\r\n                if (catch_param.includes('@')) {\r\n                    const [, alias] = catch_param.split('@');\r\n                    catch_param = alias;\r\n                }\r\n                message = message.replace(\r\n                    `:${catch_name}`,\r\n                    (catch_param || '').replace(/,/g, ', ')\r\n                );\r\n            }\r\n    \r\n            if (catch_value) {\r\n                if (catch_value.includes('@')) {\r\n                    const [, alias] = catch_value.split('@');\r\n                    catch_value = alias;\r\n                }\r\n                message = message.replace(':value', catch_value);\r\n            }\r\n    \r\n            return {\r\n                isInvalid,\r\n                message,\r\n                failedIn: isInvalid ? catch_name : null,\r\n            };\r\n        }\r\n    \r\n        return { isInvalid, failedIn: null };\r\n    }\r\n\r\n    make(data, rules) {\r\n        this.data = data\r\n        this.rules = rules\r\n        return this\r\n    }\r\n\r\n    fails() {\r\n        let isFail = false;\r\n\r\n        this.messages = Object.keys(this.rules)\r\n            .map((name) => {\r\n                const { rules, label } = this.rules[name];\r\n                const validate = Validator.validate(\r\n                    this.data[name],\r\n                    rules,\r\n                    label || name,\r\n                    this.data\r\n                );\r\n                if (validate.isInvalid && !isFail) {\r\n                    isFail = true;\r\n                }\r\n                return [name, validate.message];\r\n            })\r\n            .filter(([, message]) => !!message);\r\n\r\n        return isFail;\r\n    }\r\n\r\n    errors() {\r\n        return new Map(this.messages);\r\n    }\r\n}\r\n","export class FormEvent {\r\n\r\n\ttarget;\r\n\r\n\tformstatuses = {};\r\n\r\n\treset;\r\n\r\n\tconstructor(form, statuses, reset) {\r\n\t\tthis.formstatuses = statuses;\r\n\t\tthis.target = form;\r\n\t\tthis.reset = reset;\r\n\t}\r\n\r\n\tlocateFailed(correction = 40, autoscroll = true) {\r\n\t\tconst root = document.documentElement;\r\n\t\tconst rootTop = root.scrollTop;\r\n\t\tconst errorTop = Object.keys(this.formstatuses).reduce(\r\n\t\t\t(result, current) => {\r\n\t\t\t\tif (!this.formstatuses[current].isInvalid) return result;\r\n\t\t\t\tconst error = this.target.querySelector(\r\n\t\t\t\t\t`[name=\"${current}\"], [data-alias=\"${current}\"]`\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn Math.min(\r\n\t\t\t\t\troot.scrollTop + ((error && error.getBoundingClientRect().top) || 0),\r\n\t\t\t\t\tresult\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\trootTop\r\n\t\t);\r\n\r\n\t\tif (errorTop === rootTop) return rootTop;\r\n\r\n\t\treturn autoscroll\r\n\t\t\t? (root.scrollTop = errorTop - correction)\r\n\t\t\t: errorTop - correction;\r\n\t}\r\n\r\n\tisReady() {\r\n\t\tconst form = this.formstatuses;\r\n\r\n\t\treturn Object.keys(form).every((name) => !form[name].isInvalid);\r\n\t}\r\n\r\n\tforEach(callback) {\r\n\t\tconst form = this.formstatuses;\r\n\t\tObject.keys(form).forEach((field) =>\r\n\t\t\tcallback(form[field].value, form[field].aliasOf || field)\r\n\t\t);\r\n\t}\r\n\r\n\tjson() {\r\n\t\tconst result = {};\r\n\r\n\t\tthis.forEach((value, name) => {\r\n\t\t\tconst isArray = name.endsWith('[]');\r\n\t\t\tname = name.replace('[]', '');\r\n\t\t\tif (name in result) {\r\n\t\t\t\tif (Array.isArray(result[name])) {\r\n\t\t\t\t\tresult[name].push(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult[name] = [result[name], value];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresult[name] = isArray && !Array.isArray(value) ? [value] : value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparamArray() {\r\n\t\tconst result = [];\r\n\r\n\t\tthis.forEach((value, name) => result.push({ name, value }));\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tparam() {\r\n\t\treturn this.paramArray()\r\n\t\t\t.reduce(\r\n\t\t\t\t(result, current) =>\r\n\t\t\t\t\t(result += Array.isArray(current.value)\r\n\t\t\t\t\t\t? current.value.reduce(\r\n\t\t\t\t\t\t\t\t(res, val) => (res += `&${current.name}=${val}`),\r\n\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: `&${current.name}=${current.value}`),\r\n\t\t\t\t''\r\n\t\t\t)\r\n\t\t\t.substr(1);\r\n\t}\r\n\r\n\tformData() {\r\n\t\treturn new FormData(this.target);\r\n\t}\r\n}\r\n","import { useState, useEffect, useContext, createContext } from 'react';\r\nimport Validator from 'validozer';\r\nimport { FormEvent } from './FormEvent';\r\n\r\nexport const FormContext = createContext(null);\r\n\r\nexport const useFormSupplier = () => {\r\n\treturn useContext(FormContext);\r\n};\r\n\r\nconst formUpdater = (schema, target, alias) => {\r\n\tlet { name, value, form, files, selectedOptions, type } = target;\r\n\r\n\tif (['checkbox', 'radio'].includes(type)) {\r\n\t\tvalue = Array.from(form.querySelectorAll(`[name=\"${name}\"]`))\r\n\t\t\t.filter((element) => element.checked)\r\n\t\t\t.map((box) => box.value);\r\n\t\tif (type === 'radio') {\r\n\t\t\tvalue = value[0];\r\n\t\t}\r\n\t}\r\n\r\n\tif (alias) {\r\n\t\tname = alias;\r\n\t}\r\n\r\n\tif (files) {\r\n\t\tvalue = files;\r\n\t}\r\n\r\n\tif (selectedOptions && target.multiple) {\r\n\t\tvalue = Array.from(selectedOptions);\r\n\t}\r\n\r\n\tif (!schema[name]) return schema;\r\n\r\n\tconst updateState = {\r\n\t\t...schema[name],\r\n\t\tisValidated: true,\r\n\t\tvalue,\r\n\t};\r\n\r\n\tconst { label, rules } = updateState;\r\n\r\n\tif (rules) {\r\n\t\tObject.assign(\r\n\t\t\tupdateState,\r\n\t\t\tValidator.validate(\r\n\t\t\t\tvalue, \r\n\t\t\t\trules, \r\n\t\t\t\tlabel || target.name, \r\n\t\t\t\tObject.keys(schema).reduce((result, key) => { \r\n\t\t\t\t\tresult[key] = schema[key].value\r\n\t\t\t\t\treturn result\r\n\t\t\t\t}, {})\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\treturn { ...schema, [name]: updateState };\r\n};\r\n\r\nconst findOrCreate = (state = {}) => ({\r\n\tvalue: '',\r\n\tisInvalid: false,\r\n\tisValidated: false,\r\n\tmessage: null,\r\n\taliasOf: null,\r\n\t...state,\r\n});\r\n\r\nconst immutableSchema = (originalSchema) => (\r\n\tObject.keys(originalSchema).reduce((result, name) => {\r\n\t\tresult[name] = {...originalSchema[name]}\r\n\t\treturn result;\r\n\t}, {})\r\n)\r\n\r\nconst resetSchema = (originalSchema) => (\r\n\tObject.keys(originalSchema).reduce((result, name) => {\r\n\t\tresult[name] = {\r\n\t\t\t...originalSchema[name],\r\n\t\t\tisInvalid: false,\r\n\t\t\tisValidated: false,\r\n\t\t\tmessage: null,\r\n\t\t\tvalue: '',\r\n\t\t} \r\n\t\treturn result;\r\n\t}, {})\r\n)\r\n\r\nexport const useForm = (defaultSchema = {}) => {\r\n\tconst [schema, setSchema] = useState(\r\n\t\tObject.keys(defaultSchema).reduce((result, name) => {\r\n\t\t\tresult[name] = {\r\n\t\t\t\tvalue: '',\r\n\t\t\t\t...defaultSchema[name],\r\n\t\t\t\tisInvalid: false,\r\n\t\t\t\tisValidated: false,\r\n\t\t\t\tmessage: null,\r\n\t\t\t\taliasOf: null,\r\n\t\t\t};\r\n\t\t\treturn result;\r\n\t\t}, {})\r\n\t);\r\n\r\n\tconst formState = (get) =>\r\n\t\ttypeof get === 'string'\r\n\t\t\t? findOrCreate(schema[get])\r\n\t\t\t: immutableSchema(schema) \r\n\r\n\tconst formUpdate = ({ target }, alias) => {\r\n\t\tsetSchema((state) => formUpdater(state, target, alias));\r\n\t};\r\n\r\n\tconst useFormWhenMount = ({\r\n\t\tname,\r\n\t\tlabel,\r\n\t\trules,\r\n\t\tvalue = '',\r\n\t\talias = null,\r\n\t}) => {\r\n\t\tuseEffect(() => {\r\n\t\t\t// if (!rules) return;\r\n\r\n\t\t\tsetSchema((state) => ({\r\n\t\t\t\t...state,\r\n\t\t\t\t[alias || name]: {\r\n\t\t\t\t\tlabel,\r\n\t\t\t\t\trules,\r\n\t\t\t\t\tisInvalid: false,\r\n\t\t\t\t\tisValidated: false,\r\n\t\t\t\t\tmessage: null,\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\taliasOf: alias && name,\r\n\t\t\t\t},\r\n\t\t\t}));\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tsetSchema((state) => {\r\n\t\t\t\t\tdelete state[alias || name];\r\n\t\t\t\t\treturn { ...state };\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t}, [name, label, rules, value, alias]);\r\n\t};\r\n\r\n\tconst handlerSubmit = (onSubmit) => {\r\n\t\treturn (event) => {\r\n\t\t\tconst isSubmit = event.type === 'submit'\r\n\t\t\tisSubmit && event.preventDefault();\r\n\t\t\tconst target = event.target;  \r\n\t\t\tconst updatedSchema = Object.keys(schema).reduce((result, name) => {\r\n\t\t\t\treturn target\r\n\t\t\t\t\t? formUpdater(result, { name, value: result[name].value })\r\n\t\t\t\t\t: result;\r\n\t\t\t}, immutableSchema(schema));\r\n\r\n\t\t\tsetSchema(updatedSchema);\r\n\r\n\t\t\tconst reset = () => {\r\n\t\t\t\tsetSchema(resetSchema(updatedSchema));\r\n\t\t\t\tisSubmit && target.reset();\r\n\t\t\t};\r\n\r\n\t\t\tconst formevent = new FormEvent(target, immutableSchema(updatedSchema), reset);\r\n\t\t\tformevent.type = event.type\r\n\t\t\tformevent.originalEvent = event\r\n\t\t\ttypeof onSubmit === 'function' && onSubmit(formevent);\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tformState,\r\n\t\tformUpdate,\r\n\t\tformSubmit: handlerSubmit,\r\n\t\tformRegistry: useFormWhenMount,\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormContext } from './FormHooks';\r\n\r\nconst formPropTypes = {\r\n\tvalue: PropTypes.exact({\r\n\t\tformState: PropTypes.func,\r\n\t\tformUpdate: PropTypes.func,\r\n\t\tformRegistry: PropTypes.func,\r\n\t}).isRequired,\r\n\tchildren: PropTypes.element.isRequired,\r\n};\r\n\r\nconst formDefaultProps = {};\r\n\r\nconst FormStateProvider = ({ value, children }) => {\r\n\treturn <FormContext.Provider value={value}>{children}</FormContext.Provider>;\r\n};\r\n\r\nFormStateProvider.propTypes = formPropTypes;\r\nFormStateProvider.defaultProps = formDefaultProps;\r\n\r\nexport default FormStateProvider;\r\n","const DoneTypingEvent = (callback, ms = 700, withKeyboardCB) => {\r\n    let timeoutReference;\r\n\r\n    const typingEventHandlerForChildren = (event) => {\r\n        const { type, keyCode, target, which } = event;\r\n        const isInputBlurOrPressEnter =\r\n            type === 'blur' ||\r\n            (target.nodeName !== 'TEXTAREA' && (keyCode === 13 || which === 13));\r\n        const typeIsKeyUpUnlessItIsBackspace = type === 'keyup' && keyCode !== 8;\r\n        const FakeEvent = { type, target, keyCode };\r\n        typeof withKeyboardCB === 'function' &&\r\n            type !== 'blur' &&\r\n            withKeyboardCB(event);\r\n\r\n        if (isInputBlurOrPressEnter) {\r\n            if (timeoutReference) {\r\n                clearTimeout(timeoutReference);\r\n                timeoutReference = undefined;\r\n            }\r\n            return callback(FakeEvent);\r\n        }\r\n\r\n        if (typeIsKeyUpUnlessItIsBackspace) return;\r\n\r\n        if (timeoutReference) clearTimeout(timeoutReference);\r\n\r\n        timeoutReference = setTimeout(() => {\r\n            callback(FakeEvent);\r\n            timeoutReference = undefined;\r\n        }, ms);\r\n    };\r\n\r\n    return {\r\n        onBlur: typingEventHandlerForChildren,\r\n        onKeyUp: typingEventHandlerForChildren,\r\n        onKeyPress: typingEventHandlerForChildren,\r\n    };\r\n};\r\n\r\nexport default DoneTypingEvent","export { default as FormSupplier } from './FormState';\r\nexport { useForm, useFormSupplier } from './FormHooks';\r\nexport { default as DoneTypingEvent } from 'donevent';\r\nexport { default as Validator } from 'validozer'; \r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './index.css';\r\n\r\nconst SpinnerProps = {\r\n    loading: PropTypes.bool,\r\n    success: PropTypes.bool\r\n};\r\nconst SpinnerDefault = {\r\n    loading: false,\r\n    success: false\r\n};\r\n\r\nexport const Spinner = ({ loading, success, ...props }) => {\r\n\treturn (\r\n\t\t<svg\r\n            className={`spinner ${loading ? 'loading' : success ? 'success' : 'failed'}`}\r\n\t\t\tversion='1.1'\r\n\t\t\tid='Layer_1'\r\n\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\txmlnsXlink='http://www.w3.org/1999/xlink'\r\n\t\t\tx='0px'\r\n\t\t\ty='0px'\r\n\t\t\tviewBox='0 0 100 100'\r\n\t\t\tstyle={{ enableBackground: 'new 0 0 100 100' }}\r\n\t\t\txmlSpace='preserve'\r\n            preserveAspectRatio='xMidYMid meet'\r\n            width=\"20\"\r\n            height=\"20\"\r\n\t\t\t{...props}>\r\n\t\t\t<g>\r\n\t\t\t\t<circle className='circle' cx='50' cy='49.9999657' r='47.5' />\r\n\t\t\t\t<circle className='circle-dash' cx='50' cy='49.9999657' r='47.5' />\r\n                <polyline className='cross' points='35,35 70,70' stroke='red' />\r\n                <polyline className='cross' points='35,70 70,35' stroke='red' />\r\n                <polyline\r\n                    className='cross-dash'\r\n                    points='35,35 70,70'\r\n                    stroke='red'\r\n                />\r\n                <polyline\r\n                    className='cross-dash'\r\n                    points='35,70 70,35'\r\n                    stroke='red'\r\n                />\r\n                <polyline\r\n                    className='check'\r\n                    points='28.6469955,52.0561066 42.2152748,65.6243896 71.3530045,36.4866562 \t'\r\n                />\r\n                <polyline\r\n                    className='check-dash'\r\n                    points='28.6469955,52.0561066 42.2152748,65.6243896 71.3530045,36.4866562 \t'\r\n                />\r\n\t\t\t</g>\r\n\t\t</svg>\r\n\t);\r\n};\r\n\r\nSpinner.propTypes = SpinnerProps\r\nSpinner.defaultProps = SpinnerDefault","const defaults = { \r\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.   \r\n    cache: \"default\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {},\r\n    body: null,\r\n    responseType: \"\", // text, json, document, arraybuffer, blob\r\n    timeout: 0,\r\n    onupload: null,\r\n    ondownload: null\r\n}\r\n\r\nexport default defaults","import defaults from './defaults';\r\n\r\nexport const initialize = (options) => ({\r\n    ...defaults, \r\n    ...options, \r\n    headers: {\r\n        ...defaults.headers, \r\n        ...options.headers,\r\n    }\r\n})\r\n\r\nexport const global = (options) => {\r\n    Object.assign(defaults, options)\r\n}\r\n\r\nexport function ServerResponse (xhr) {\r\n    this.data = xhr.response\r\n    this.status = xhr.status\r\n    this.statusText = xhr.statusText\r\n    this.headers = xhr.getAllResponseHeaders().split(/\\n/)\r\n    .reduce((result, header) => {\r\n        const [key, value] = header.split(\": \")\r\n        if(key && value)\r\n            result[key] = value\r\n        return result\r\n    }, {})\r\n}","import { initialize, ServerResponse, global } from \"./utils\";\r\n\r\nconst request = (url, options = {}) => new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest() \r\n    const {\r\n        method,\r\n        cache,\r\n        credentials,\r\n        headers,\r\n        body,\r\n        responseType,\r\n        timeout,\r\n        onupload,\r\n        ondownload\r\n    } = initialize(options)\r\n    \r\n    xhr.open(method, url, true)\r\n\r\n    xhr.withCredentials = credentials.trim() === \"include\"\r\n\r\n    xhr.timeout = timeout\r\n\r\n    xhr.responseType = responseType\r\n\r\n    if(cache !== \"default\")\r\n        xhr.setRequestHeader(\"Cache-Control\", cache)\r\n\r\n    Object.keys(headers).forEach((key) => {\r\n        xhr.setRequestHeader(key, headers[key])\r\n    })\r\n    \r\n    if(xhr.upload)\r\n        xhr.upload.onprogress = onupload\r\n\r\n    xhr.onprogress = ondownload\r\n\r\n    xhr.onload = () => resolve(new ServerResponse(xhr))\r\n\r\n    xhr.onabort = () => reject(new DOMException('Aborted', 'AbortError'))\r\n\r\n    xhr.onerror = xhr.ontimeout = () => reject(new TypeError('Network request failed'))\r\n\r\n    xhr.send(body)\r\n})\r\n\r\nrequest.global = global\r\n\r\nexport default request"],"sourceRoot":""}