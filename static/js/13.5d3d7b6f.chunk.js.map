{"version":3,"sources":["App/Main/Pages/Neumorphism/CommonSetting.js","App/Main/Pages/Neumorphism/Topics/Card/StringCodes.js","App/Main/Pages/Neumorphism/Topics/Card/Sections.js","App/Main/Pages/Neumorphism/Topics/Card/index.js"],"names":["CommonSetting","settingsAllowed","localkey","allowConvex","allowEngrave","allowEngraveWithConcave","allowFloat","max","min","useLocal","getLocal","setLocal","settings","distance","blur","intensity","radius","border","className","id","type","checked","convex","onChange","e","prev","value","htmlFor","engrave","concave","float","map","each","key","variant","message","placement","parseInt","target","Example","Thumbnail","Footer","TableInside","IMG","width","height","xmlns","preserveAspectRatio","focusable","role","aria-label","fill","x","y","dy","lorem","title","context","code","alt","src","CardMain","CardSidePanel","card","Card","Meta","description","image","main","side","style","backgroundColor"],"mappings":"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","file":"static/js/13.5d3d7b6f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLocal } from 'Source/App/Storage/Local';\r\nimport Tooltip from 'Snippets/Tooltip'\r\n\r\nexport const CommonSetting = ({\r\n\tsettingsAllowed,\r\n\tlocalkey,\r\n\tallowConvex,\r\n\tallowEngrave,\r\n\tallowEngraveWithConcave,\r\n\tallowFloat,\r\n\tmax,\r\n\tmin\r\n}) => {\r\n\tconst { getLocal, setLocal } = useLocal(localkey);\r\n\tconst settings = getLocal();\r\n\tmax = {distance: 10, blur: 20, intensity: 100, radius: 50, border: 10, ...max}\r\n\tmin = {distance: 1, blur: 2, intensity: 10, radius: 0, border: 1, ...min}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{allowConvex && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-convex'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.convex}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tconst value = 2;\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tconvex: !prev.convex,\r\n\t\t\t\t\t\t\t\t\t\tdistance: value,\r\n\t\t\t\t\t\t\t\t\t\tblur: value * 2,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-convex'>convex</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{allowEngrave && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-engrave'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.engrave}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev, \r\n\t\t\t\t\t\t\t\t\t\tengrave: !prev.engrave\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-engrave'>engrave</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{allowEngraveWithConcave && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-engrave'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.engrave}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tconcave: prev.engrave,\r\n\t\t\t\t\t\t\t\t\t\tengrave: !prev.engrave,\r\n\t\t\t\t\t\t\t\t\t\tborder: 2,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-engrave'>engrave</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{allowFloat && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-float'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.float}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tfloat: !prev.float,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-float'>float</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{settingsAllowed.map((each) => (\r\n\t\t\t\t<li key={each}>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<label>{each}</label>\r\n\t\t\t\t\t\t<Tooltip variant='dark' message={`${settings[each]}`} placement=\"left\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='range'\r\n\t\t\t\t\t\t\t\tvalue={settings[each]}\r\n\t\t\t\t\t\t\t\tmin={min[each]}\r\n\t\t\t\t\t\t\t\tmax={max[each]}\r\n\t\t\t\t\t\t\t\tclassName='n-form-control'\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tconst value = parseInt(e.target.value);\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) =>\r\n\t\t\t\t\t\t\t\t\t\teach === 'distance'\r\n\t\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdistance: value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tblur: value * 2,\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t: { ...prev, [each]: value }\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nCommonSetting.propTypes = {\r\n\tlocalkey: PropTypes.string,\r\n\tsettingsAllowed: PropTypes.arrayOf(\r\n\t\tPropTypes.oneOf(['distance', 'blur', 'intensity', 'radius', 'border'])\r\n\t),\r\n};\r\n","export const Example = `<div class=\"n-card\">\r\n    <div class=\"n-card-header\">\r\n        Card Header\r\n    </div>\r\n    <div class=\"n-card-body\">\r\n        <p class=\"n-card-text\">lorem ipsum</p>\r\n    </div>\r\n</div>`\r\n\r\nexport const Thumbnail = `<div class=\"n-card\">\r\n    <img class=\"n-card-img\" alt=\"image\" src=\"/image.png\" />\r\n    <div class=\"n-card-body\">\r\n        <p class=\"n-card-text\">lorem ipsum</p>\r\n    </div> \r\n</div>`\r\n\r\nexport const Footer = `<div class=\"n-card\">\r\n    <div class=\"n-card-header\">\r\n        Card Header\r\n    </div>\r\n    <div class=\"n-card-body\">\r\n        <p class=\"n-card-text\">lorem ipsum</p>\r\n    </div>\r\n    <div class=\"n-card-footer\">\r\n        Card Footer\r\n    </div>\r\n</div>`\r\n\r\nexport const TableInside = `<div class=\"n-card\">\r\n    <div class=\"n-card-header\">\r\n        Card Header\r\n    </div>\r\n    <div class=\"n-card-body\">\r\n        <table class=\"n-table\">\r\n            <thead>\r\n                <tr><th>Name</th><th>Age</th><th>Gender</th></tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr><td>Eugene</td><td>20</td><td>male</td></tr>\r\n                <tr><td>Choi</td><td>30</td><td>male</td></tr>\r\n                <tr><td>Man</td><td>10</td><td>female</td></tr>\r\n                <tr><td>Boyna</td><td>10</td><td>male</td></tr>\r\n            </tbody>\r\n        </table> \r\n    </div>\r\n</div>`","import React from 'react';\r\nimport { Section, CodeReadOnly, HoverCopy } from 'Templates';\r\nimport * as code from './StringCodes';\r\nconst IMG = ({className}) => (\r\n    <svg className={className} width=\"100%\" height=\"180\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\" aria-label=\"Placeholder: Image cap\">\r\n        <rect width=\"100%\" height=\"100%\" fill=\"#868e96\"></rect>\r\n        <text x=\"50%\" y=\"50%\" fill=\"#dee2e6\" dy=\".3em\">Image</text>\r\n    </svg>\r\n)\r\nconst lorem = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\nexport const Example = () => (\r\n\t<Section\r\n\t\ttitle='Example'\r\n\t\tcontext={<>the size is depend on the <b>width</b> you apply or the width of wrapper.</>}>\r\n\t\t<HoverCopy code={code.Example}>\r\n\t\t\t<CodeReadOnly code={code.Example} />\r\n        </HoverCopy>\r\n        <div className=\"n-card\">\r\n            <div className=\"n-card-header\">\r\n                Card Header\r\n            </div>\r\n            <div className=\"n-card-body\">\r\n                <p className=\"n-card-text\">{lorem}</p>\r\n            </div>\r\n        </div>\r\n\t</Section>\r\n);\r\n\r\nexport const Thumbnail = () => (\r\n\t<Section\r\n\t\ttitle='Thumbnail'\r\n        context={<>you can use it as thumbnail.</>}>\r\n\t\t<HoverCopy code={code.Thumbnail}>\r\n\t\t\t<CodeReadOnly code={code.Thumbnail} />\r\n        </HoverCopy>\r\n        <div className=\"n-card\">\r\n            <IMG className=\"n-card-img\" alt=\"image\" src=\"/image.png\" />\r\n            <div className=\"n-card-body\">\r\n                <p className=\"n-card-text\">{lorem}</p>\r\n            </div> \r\n        </div>\r\n\t</Section>\r\n);\r\n\r\nexport const Footer = () => (\r\n\t<Section\r\n\t\ttitle='Footer'\r\n\t\tcontext='card has footer for you.'>\r\n\t\t<HoverCopy code={code.Footer}>\r\n\t\t\t<CodeReadOnly code={code.Footer} />\r\n        </HoverCopy>\r\n        <div className=\"n-card\">\r\n            <div className=\"n-card-header\">\r\n                Card Header\r\n            </div>\r\n            <div className=\"n-card-body\">\r\n                <p className=\"n-card-text\">{lorem}</p>\r\n            </div>\r\n            <div className=\"n-card-footer\">\r\n                Card Footer\r\n            </div>\r\n        </div>\r\n\t</Section>\r\n);\r\n\r\nexport const TableInside = () => (\r\n\t<Section\r\n\t\ttitle='Card Table'\r\n\t\tcontext='you can have table inside.'>\r\n\t\t<HoverCopy code={code.TableInside}>\r\n\t\t\t<CodeReadOnly code={code.TableInside} />\r\n        </HoverCopy>\r\n        <div className=\"n-card\">\r\n            <div className=\"n-card-header\">\r\n                Card Header\r\n            </div>\r\n            <div className=\"n-card-body\">\r\n                <table className=\"n-table\">\r\n                    <thead>\r\n                        <tr><th>Name</th><th>Age</th><th>Gender</th></tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr><td>Eugene</td><td>20</td><td>male</td></tr>\r\n                        <tr><td>Choi</td><td>30</td><td>male</td></tr>\r\n                        <tr><td>Man</td><td>10</td><td>female</td></tr>\r\n                        <tr><td>Boyna</td><td>10</td><td>male</td></tr>\r\n                    </tbody>\r\n                </table> \r\n            </div>\r\n        </div>\r\n\t</Section>\r\n);","import React from 'react';\r\nimport { MainContainer, HeadGear } from 'Templates';\r\nimport { CommonSetting } from '../../CommonSetting';\r\nimport { localkey } from 'Source/App/Main/local-config';\r\nimport * as Section from './Sections';\r\n\r\nconst Card = () => { \r\n\tconst title = 'Card';\r\n\tconst context = `it is a container to make you more creative.`;\r\n\r\n\treturn (\r\n\t\t<>  \r\n            <HeadGear>\r\n                <HeadGear.Meta \r\n\t\t\t\t\ttitle={`${title} - Neumorphism Project | Mytabworks`}\r\n\t\t\t\t\tdescription={context}\r\n\t\t\t\t\timage='/images/icons/icon-512x512.png'\r\n\t\t\t\t/>\r\n            </HeadGear>\r\n\t\t\t<MainContainer \r\n\t\t\t\ttitle={title}\r\n\t\t\t\tcontext={context}\r\n\t\t\t\tmain={<CardMain />}\r\n\t\t\t\tside={<CardSidePanel />}\r\n\t\t\t\tstyle={{ backgroundColor: 'transparent' }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nCard.propTypes = {};\r\n\r\nconst CardMain = () => (\r\n\t<>\r\n\t\t<Section.Example />  \r\n\t\t<Section.Thumbnail />\r\n\t\t<Section.Footer />\r\n\t\t<Section.TableInside />\r\n\t</>\r\n);\r\n\r\nconst CardSidePanel = () => (\r\n\t<ul className='scroll-nav'>\r\n\t\t<li>\r\n\t\t\t<h6 className='px-3 py-2 mb-0'>Card Style</h6>\r\n\t\t</li>\r\n\t\t<CommonSetting\r\n\t\t\tlocalkey={localkey.card}\r\n\t\t\tsettingsAllowed={['distance', 'blur', 'intensity', 'radius', 'border']}\r\n\t\t/>\r\n\t</ul>\r\n);\r\n\r\nexport default Card;"],"sourceRoot":""}