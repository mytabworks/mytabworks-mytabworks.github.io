{"version":3,"sources":["Snippets/Neumorphism/Collapse/index.js","Snippets/Neumorphism/Modal/ModalBody.js","Snippets/Neumorphism/Modal/ModalFooter.js","Snippets/Neumorphism/Modal/index.js","Snippets/Neumorphism/Modal/ModalTitle.js","Snippets/Neumorphism/index.js","App/Main/Pages/React/Topics/Reatable/ActualExampleCode.js","App/Main/Pages/React/Topics/Reatable/StringCodes.js","App/Main/Pages/React/Topics/Reatable/Sections.js","App/Main/Pages/React/Topics/Reatable/Tables.js","App/Main/Pages/React/Topics/Reatable/index.js"],"names":["Collapse","show","children","shadow","in","timing","suffix","enter","exit","onEnter","target","classList","add","style","height","onEntering","scrollHeight","onEntered","remove","onExit","offsetHeight","onExiting","onExited","allowRef","className","data-shadow","ModalBody","ModalFooter","Modal","size","onHide","ReactDOM","createPortal","document","body","onClick","e","matches","modalCorner","Title","Body","Footer","createElement","appendChild","AbortController","signal","aborted","clearTimeout","this","fetch","url","sortOrderBy","sortOrder","currentPage","pageSize","filters","source","data","length","reduce","result","dataIndex","transformed","value","map","pattern","RegExp","replace","filter","row","some","regexp","test","rowsCount","reverse","sort","a","b","slice","Promise","resolve","reject","setTimeout","Response","Blob","JSON","stringify","type","status","Math","round","random","columns","label","sortable","filterSearch","like","filterMultiple","id","fname","lname","age","gender","smallData","GettingStarted","ColumnGroup","MutatingTableCell","reuseData","TableWithPagination","SortableTable","CollapsibleTable","CollapsibleTableUsingButton","TableFiltration","Installation","readonly","title","code","language","theme","plain","color","backgroundColor","styles","Importing","context","scope","variant","marginTop","marginBottom","collapsible","AsynchronousTable","actual","CustomizableTableInterfaces","CustomizeLoader","CustomizablePagination","CreateYourOwnPagination","ChangablePageSize","CreateFilterFirstLetters","CreateFilterBySearch","CustomizeTableContentRowAndCell","CustomizeTableContentEmptyData","CustomizeTableContentColumnHeader","PassedRowDataOnModal","TableSelection","filterData","name","default","description","filtersProps","partialOfiterateArgs","columnsData","TableAPIRows","TableContentRows","PaginationRows","usePaginationRows","useSortRows","useFilterRows","useColumnRows","TableAPI","ForAPI","TableContent","Pagination","Loader","usePagination","useSort","useFilter","useColumn","ReatableMain","triggerId","onDone","console","log","onSkip","as","ReatableSidePanel","ScrollNav","list","sub","Reatable","Meta","image","main","side"],"mappings":"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","file":"static/js/22.b742b9fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Transition } from 'myt-react-snippets';\r\n\r\nconst CollapseProps = {\r\n\tshow: PropTypes.bool.isRequired,\r\n\tchildren: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]).isRequired,\r\n};\r\n\r\nconst Collapse = ({ show, children, shadow = true }) => (\r\n\t<Transition\r\n\t\tin={show}\r\n\t\ttiming={700}\r\n\t\tsuffix={{ enter: 'show', exit: '' }}\r\n\t\tonEnter={(target) => {\r\n\t\t\ttarget.classList.add(\"transition\")\r\n\t\t\ttarget.style.height = 0\r\n\t\t}}\r\n\t\tonEntering={(target) =>\r\n\t\t\t(target.style.height = `${target.scrollHeight}px`)\r\n\t\t}\r\n\t\tonEntered={(target) => {\r\n\t\t\ttarget.classList.remove(\"transition\")\r\n\t\t\ttarget.style.height = null\r\n\t\t}}\r\n\t\tonExit={ (target) => {\r\n\t\t\ttarget.classList.add(\"transition\")\r\n\t\t\ttarget.style.height = `${target.offsetHeight}px`\r\n\t\t}}\r\n\t\tonExiting={(target) => (target.style.height = 0)}\r\n\t\tonExited={(target) => {\r\n\t\t\ttarget.classList.remove(\"transition\")\r\n\t\t\ttarget.style.height = null\r\n\t\t}}\r\n\t\tallowRef>\r\n\t\t<div className='n-collapse d-block transition' data-shadow={shadow} style={{height: 0}}>\r\n\t\t\t<div className='n-collapse-content'>{children}</div>\r\n\t\t</div>\r\n\t</Transition>\r\n);\r\n\r\nCollapse.propTypes = CollapseProps;\r\n\r\nexport default Collapse;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ModalBody = ({children}) => {\r\n    return (\r\n        <div className='n-modal-body'>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nModalBody.propTypes = {\r\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)])\r\n}\r\n\r\nexport default ModalBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ModalFooter = ({children}) => {\r\n    return (\r\n        <div className='n-modal-footer'>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nModalFooter.propTypes = {\r\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)])\r\n}\r\n\r\nexport default ModalFooter\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { Transition } from 'myt-react-snippets';\r\nimport ModalBody from './ModalBody';\r\nimport ModalTitle from './ModalTitle';\r\nimport ModalFooter from './ModalFooter';\r\n\r\nconst ModalProps = {\r\n\tshow: PropTypes.bool.isRequired,\r\n\tsize: PropTypes.oneOf(['sm', 'lg', 'xl']),\r\n\tonHide: PropTypes.func,\r\n\tchildren: PropTypes.arrayOf(PropTypes.element),\r\n};\r\n\r\nconst Modal = ({ show, size, onHide, children }) => { \r\n\treturn ReactDOM.createPortal(\r\n\t\t<Transition\r\n\t\t\tin={show}\r\n\t\t\ttiming={800}\r\n\t\t\tsuffix={{ enter: 'show', exit: '' }}\r\n\t\t\tonEnter={(target) => {\r\n\t\t\t\ttarget.classList.add('transition');\r\n\t\t\t\tdocument.body.classList.add('n-modal-shown')\r\n\t\t\t}}\r\n\t\t\tonEntered={(target) => {\r\n\t\t\t\ttarget.classList.remove('transition');\r\n\t\t\t}}\r\n\t\t\tonExit={(target) => {\r\n\t\t\t\ttarget.classList.add('transition');\r\n\t\t\t}}\r\n\t\t\tonExited={(target) => {\r\n\t\t\t\ttarget.classList.remove('transition');\r\n\t\t\t\tdocument.body.classList.remove('n-modal-shown')\r\n\t\t\t}}\r\n\t\t\tallowRef>\r\n\t\t\t<div \r\n\t\t\t\tclassName='n-modal d-block'\r\n\t\t\t\tonClick={(e) => show && e.target.matches('.n-modal') && onHide && onHide(e)}>\r\n\t\t\t\t<div className={`n-modal-dialog${size ? ` n-modal-${size}` : ''}`}>\r\n\t\t\t\t\t<div className='n-modal-content'>{children}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Transition>,\r\n\t\tmodalCorner\r\n\t);\r\n};\r\n\r\nModal.propTypes = ModalProps;\r\nModal.Title = ModalTitle;\r\nModal.Body = ModalBody;\r\nModal.Footer = ModalFooter;\r\n\r\nconst modalCorner = document.createElement('div');\r\n\r\ndocument.body.appendChild(modalCorner);\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ModalTitle = ({ onHide, children }) => {\r\n\treturn (\r\n\t\t<div className='n-modal-header'>\r\n\t\t\t<h5 className='n-modal-title'>{children}</h5>\r\n\t\t\t{onHide && (\r\n\t\t\t\t<button className='n-btn n-btn-xs' onClick={onHide}>\r\n\t\t\t\t\t&times;\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nModalTitle.propTypes = {\r\n\tchildren: PropTypes.string,\r\n};\r\n\r\nexport default ModalTitle;\r\n","// import { lazy } from 'react'\r\n\r\nexport { default as Collapse } from './Collapse'\r\n\r\nexport { default as Modal } from './Modal'\r\n","export class AbortController {\r\n\tsignal = { aborted: false };\r\n\tabort() {\r\n\t\tclearTimeout(this.signal.aborted);\r\n\t}\r\n}\r\nexport const fetch = (url, { signal = {}, body }) => {\r\n\tconst { sortOrderBy, sortOrder, currentPage, pageSize, filters = [] } = body;\r\n\tlet source = [...data];\r\n\tif (filters.length) {\r\n\t\tsource = filters.reduce((result, { dataIndex, value }) => {\r\n\t\t\tconst transformed = value.map(\r\n\t\t\t\t(pattern) => new RegExp(`^${pattern.replace(/%/g, '.*')}$`, 'i')\r\n\t\t\t);\r\n\t\t\treturn result.filter((row) =>\r\n\t\t\t\ttransformed.some((regexp) => regexp.test(row[dataIndex]))\r\n\t\t\t);\r\n\t\t}, source);\r\n\t}\r\n\tconst rowsCount = source.length;\r\n\tif (sortOrderBy) {\r\n\t\tconst isDesc = sortOrder === 'desc';\r\n\t\tconst reverse = isDesc ? -1 : 1;\r\n\t\tsource = source.sort((a, b) => {\r\n\t\t\tconst isNumber =\r\n\t\t\t\ttypeof a[sortOrderBy] === 'number' || /^\\d+$/.test(a[sortOrderBy]);\r\n\t\t\tconst result = isNumber\r\n\t\t\t\t? a[sortOrderBy] - b[sortOrderBy]\r\n\t\t\t\t: a[sortOrderBy] < b[sortOrderBy]\r\n\t\t\t\t? -1\r\n\t\t\t\t: a[sortOrderBy] > b[sortOrderBy]\r\n\t\t\t\t? 1\r\n\t\t\t\t: 0;\r\n\t\t\treturn result * reverse;\r\n\t\t});\r\n\t}\r\n\r\n\tif (pageSize && pageSize < data.length)\r\n\t\tsource = source.slice(\r\n\t\t\tcurrentPage * pageSize - pageSize,\r\n\t\t\tcurrentPage * pageSize\r\n\t\t);\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsignal.aborted = setTimeout(\r\n\t\t\t() =>\r\n\t\t\t\tresolve(\r\n\t\t\t\t\tnew Response(\r\n\t\t\t\t\t\tnew Blob(\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\tJSON.stringify(\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tdata: source,\r\n\t\t\t\t\t\t\t\t\t\trowsCount,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t\t\t\t2\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t{ type: 'application/json' }\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t{ status: 200 }\r\n\t\t\t\t\t)\r\n\t\t\t\t),\r\n\t\t\tMath.round(2000 * Math.random()) + 1000\r\n\t\t);\r\n\t});\r\n};\r\n\r\nexport const columns = [\r\n\t{\r\n\t\tdataIndex: 'fname',\r\n\t\tlabel: 'First Name',\r\n\t\tsortable: true,\r\n\t\tfilterSearch: { label: 'Search', like: '{search}%' },\r\n\t},\r\n\t{\r\n\t\tdataIndex: 'lname',\r\n\t\tlabel: 'Last Name',\r\n\t},\r\n\t{\r\n\t\tdataIndex: 'age',\r\n\t\tlabel: 'Age',\r\n\t\tsortable: true,\r\n\t},\r\n\t{\r\n\t\tdataIndex: 'gender',\r\n\t\tlabel: 'Gender',\r\n\t\tfilters: [\r\n\t\t\t{ label: 'Male', like: 'male' },\r\n\t\t\t{ label: 'Female', like: 'female' },\r\n\t\t],\r\n\t\tfilterMultiple: false,\r\n\t},\r\n];\r\n\r\nexport const data = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tfname: 'Jesse',\r\n\t\tlname: 'Jules',\r\n\t\tage: '73',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tfname: 'Tyler',\r\n\t\tlname: 'Aiden',\r\n\t\tage: '74',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tfname: 'Ash',\r\n\t\tlname: 'Remy',\r\n\t\tage: '22',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\tfname: 'Winter',\r\n\t\tlname: 'Andy',\r\n\t\tage: '32',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\tfname: 'Daryl',\r\n\t\tlname: 'Campbell',\r\n\t\tage: '37',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\tfname: 'Elliott',\r\n\t\tlname: 'Roan',\r\n\t\tage: '77',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 7,\r\n\t\tfname: 'Emerson',\r\n\t\tlname: 'Kelsey',\r\n\t\tage: '76',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 8,\r\n\t\tfname: 'Sam',\r\n\t\tlname: 'Kelly',\r\n\t\tage: '52',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 9,\r\n\t\tfname: 'Tatum',\r\n\t\tlname: 'Landry',\r\n\t\tage: '16',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 10,\r\n\t\tfname: 'Amari',\r\n\t\tlname: 'Jayden',\r\n\t\tage: '82',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 11,\r\n\t\tfname: 'Drew',\r\n\t\tlname: 'Devin',\r\n\t\tage: '79',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 12,\r\n\t\tfname: 'Hayden',\r\n\t\tlname: 'Maxwell',\r\n\t\tage: '60',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 13,\r\n\t\tfname: 'Glenn',\r\n\t\tlname: 'Eddie',\r\n\t\tage: '48',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 14,\r\n\t\tfname: 'Reagan',\r\n\t\tlname: 'Hunter',\r\n\t\tage: '21',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 15,\r\n\t\tfname: 'Aspen',\r\n\t\tlname: 'Dakota',\r\n\t\tage: '18',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 16,\r\n\t\tfname: 'Jean',\r\n\t\tlname: 'Dallas',\r\n\t\tage: '23',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 17,\r\n\t\tfname: 'Maxwell',\r\n\t\tlname: 'Clay',\r\n\t\tage: '33',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 18,\r\n\t\tfname: 'Kendall',\r\n\t\tlname: 'Amari',\r\n\t\tage: '70',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 19,\r\n\t\tfname: 'Easton',\r\n\t\tlname: 'Mackenzie',\r\n\t\tage: '74',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 20,\r\n\t\tfname: 'Delta',\r\n\t\tlname: 'Lake',\r\n\t\tage: '77',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 21,\r\n\t\tfname: 'Rory',\r\n\t\tlname: 'Rowan',\r\n\t\tage: '73',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 22,\r\n\t\tfname: 'Chris',\r\n\t\tlname: 'Mackenzie',\r\n\t\tage: '54',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 23,\r\n\t\tfname: 'Tatum',\r\n\t\tlname: 'Campbell',\r\n\t\tage: '48',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 24,\r\n\t\tfname: 'Jordan',\r\n\t\tlname: 'Ainsley',\r\n\t\tage: '89',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 25,\r\n\t\tfname: 'Elliott',\r\n\t\tlname: 'Taylor',\r\n\t\tage: '34',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 26,\r\n\t\tfname: 'London',\r\n\t\tlname: 'Remy',\r\n\t\tage: '20',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 27,\r\n\t\tfname: 'Peyton',\r\n\t\tlname: 'Stevie',\r\n\t\tage: '55',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 28,\r\n\t\tfname: 'Hudson',\r\n\t\tlname: 'Ari',\r\n\t\tage: '72',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 29,\r\n\t\tfname: 'Lincoln',\r\n\t\tlname: 'Ryan',\r\n\t\tage: '28',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 30,\r\n\t\tfname: 'Mason',\r\n\t\tlname: 'Lincoln',\r\n\t\tage: '73',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 31,\r\n\t\tfname: 'Kai',\r\n\t\tlname: 'Ash',\r\n\t\tage: '77',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 32,\r\n\t\tfname: 'Roan',\r\n\t\tlname: 'Parker',\r\n\t\tage: '76',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 33,\r\n\t\tfname: 'Gabriel',\r\n\t\tlname: 'Mackenzie',\r\n\t\tage: '60',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 34,\r\n\t\tfname: 'Ray',\r\n\t\tlname: 'Ryan',\r\n\t\tage: '44',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 35,\r\n\t\tfname: 'Hunter',\r\n\t\tlname: 'Kennedy',\r\n\t\tage: '29',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 36,\r\n\t\tfname: 'Kelly',\r\n\t\tlname: 'Rudy',\r\n\t\tage: '70',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 37,\r\n\t\tfname: 'Gabriel',\r\n\t\tlname: 'Dorian',\r\n\t\tage: '18',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 38,\r\n\t\tfname: 'Kaden',\r\n\t\tlname: 'Riley',\r\n\t\tage: '20',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 39,\r\n\t\tfname: 'Frances',\r\n\t\tlname: 'Dakota',\r\n\t\tage: '89',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 40,\r\n\t\tfname: 'Max',\r\n\t\tlname: 'James',\r\n\t\tage: '43',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 41,\r\n\t\tfname: 'Sam',\r\n\t\tlname: 'Bailey',\r\n\t\tage: '36',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 42,\r\n\t\tfname: 'Bobbie',\r\n\t\tlname: 'Brett',\r\n\t\tage: '44',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 43,\r\n\t\tfname: 'Finley',\r\n\t\tlname: 'Stevie',\r\n\t\tage: '76',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 44,\r\n\t\tfname: 'Kai',\r\n\t\tlname: 'Julian',\r\n\t\tage: '22',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 45,\r\n\t\tfname: 'Blaine',\r\n\t\tlname: 'Alex',\r\n\t\tage: '59',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 46,\r\n\t\tfname: 'Kaden',\r\n\t\tlname: 'Remy',\r\n\t\tage: '27',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 47,\r\n\t\tfname: 'Corey',\r\n\t\tlname: 'Dana',\r\n\t\tage: '50',\r\n\t\tgender: 'female',\r\n\t},\r\n\t{\r\n\t\tid: 48,\r\n\t\tfname: 'Bobbie',\r\n\t\tlname: 'Harley',\r\n\t\tage: '54',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 49,\r\n\t\tfname: 'Reagan',\r\n\t\tlname: 'James',\r\n\t\tage: '62',\r\n\t\tgender: 'male',\r\n\t},\r\n\t{\r\n\t\tid: 50,\r\n\t\tfname: 'Daryl',\r\n\t\tlname: 'Karter',\r\n\t\tage: '76',\r\n\t\tgender: 'male',\r\n\t},\r\n];\r\n","export const Imports = `import { Table, TableContent, Pagination, Loader, usePagination, useSort, useFilter } from \"reatable\"`;\r\n\r\nconst smallData = `const data = [\r\n    {\r\n        id: 1,\r\n        fname: 'Drew',\r\n        lname: 'Kai',\r\n        age: '24',\r\n        gender: 'male',\r\n    },\r\n    {\r\n        id: 2,\r\n        fname: 'Frankie',\r\n        lname: 'Riley',\r\n        age: '70',\r\n        gender: 'male',\r\n    },\r\n    {\r\n        id: 3,\r\n        fname: 'Brook',\r\n        lname: 'Mason',\r\n        age: '38',\r\n        gender: 'female',\r\n    },\r\n    {\r\n        id: 4,\r\n        fname: 'West',\r\n        lname: 'Emery',\r\n        age: '31',\r\n        gender: 'male',\r\n    },\r\n    {\r\n        id: 5,\r\n        fname: 'West',\r\n        lname: 'Bailey',\r\n        age: '49',\r\n        gender: 'female',\r\n    },\r\n];`;\r\n\r\nexport const GettingStarted = `import React from \"react\";\r\nimport { Table } from \"reatable\";\r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: \"fname\",\r\n        label: \"First Name\"\r\n    },\r\n    {\r\n        dataIndex: \"lname\",\r\n        label: \"Last Name\"\r\n    },\r\n    {\r\n        dataIndex: \"age\",\r\n        label: \"Age\"\r\n    },\r\n    {\r\n        dataIndex: \"gender\",\r\n        label: \"Gender\"\r\n    },\r\n]\r\n\r\n${smallData}\r\n\r\n#render(<Table columns={columns} data={data} />)`;\r\n\r\nexport const ColumnGroup = `import React from \"react\";\r\nimport { Table } from \"reatable\";\r\n\r\nconst columns = [\r\n    { \r\n        label: \"Human Data\",\r\n        columns: [\r\n            {\r\n                label: \"Name\",\r\n                columns: [\r\n                    {\r\n                        dataIndex: \"fname\",\r\n                        label: \"First Name\"\r\n                    },\r\n                    {\r\n                        dataIndex: \"lname\",\r\n                        label: \"Last Name\"\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                dataIndex: \"age\",\r\n                label: \"Age\"\r\n            },\r\n            { \r\n                label: \"Gender\",\r\n                columns: [\r\n                    {\r\n                        dataIndex: \"gender\",\r\n                        label: \"Male\",\r\n                        render: (gender) => gender === \"male\" && \"<span role=\"img\">✔️</span>\"\r\n                    },\r\n                    {\r\n                        dataIndex: \"gender\",\r\n                        label: \"Female\",\r\n                        render: (gender) => gender === \"female\" && \"<span role=\"img\">✔️</span>\"\r\n                    },\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n]\r\n\r\n${smallData}\r\n\r\n#render(\r\n    <Table columns={columns} data={data} />\r\n)`;\r\n\r\nexport const MutatingTableCell = `import React from \"react\";\r\nimport { Table } from \"reatable\";\r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: \"fname\",\r\n        label: \"First Name\"\r\n    },\r\n    {\r\n        dataIndex: \"lname\",\r\n        label: \"Last Name\"\r\n    },\r\n    {\r\n        dataIndex: \"age\",\r\n        label: \"Age\"\r\n    },\r\n    {\r\n        dataIndex: \"gender\",\r\n        label: \"Gender\",\r\n        render: (gender, row, index) => (\r\n            <span className={\\`badge badge-\\${gender === 'male' ? 'info' : 'danger'}\\`}>\r\n                {gender}\r\n            </span>\r\n        )\r\n    },\r\n]\r\n\r\n${smallData}\r\n\r\n#render(<Table columns={columns} data={data} />)`;\r\n\r\nconst reuseData = `const data = [\r\n    {\r\n        id: 1,\r\n        fname: \"Eli\",\r\n        lname: \"Corey\",\r\n        age: \"34\",\r\n        gender: \"male\",\r\n    },\r\n    {\r\n        id: 2,\r\n        fname: \"August\",\r\n        lname: \"Shawn\",\r\n        age: \"59\",\r\n        gender: \"male\",\r\n    },\r\n    {\r\n        id: 3,\r\n        fname: \"Shawn\",\r\n        lname: \"River\",\r\n        age: \"88\",\r\n        gender: \"male\",\r\n    },\r\n    {\r\n        id: 4,\r\n        fname: \"Rowan\",\r\n        lname: \"Maxwell\",\r\n        age: \"43\",\r\n        gender: \"female\",\r\n    },\r\n    {\r\n        id: 5,\r\n        fname: \"Pat\",\r\n        lname: \"Lake\",\r\n        age: \"100\",\r\n        gender: \"male\",\r\n    },\r\n    {\r\n        id: 6,\r\n        fname: \"Devin\",\r\n        lname: \"Bailey\",\r\n        age: \"98\",\r\n        gender: \"female\",\r\n    },\r\n    {\r\n        id: 7,\r\n        fname: \"Clay\",\r\n        lname: \"Finley\",\r\n        age: \"97\",\r\n        gender: \"male\",\r\n    },\r\n    {\r\n        id: 8,\r\n        fname: \"Drew\",\r\n        lname: \"London\",\r\n        age: \"66\",\r\n        gender: \"male\",\r\n    },\r\n    {\r\n        id: 9,\r\n        fname: \"Rudy\",\r\n        lname: \"Avery\",\r\n        age: \"73\",\r\n        gender: \"female\",\r\n    },\r\n    {\r\n        id: 10,\r\n        fname: \"Dana\",\r\n        lname: \"Julian\",\r\n        age: \"59\",\r\n        gender: \"female\",\r\n    },\r\n    {\r\n        id: 11,\r\n        fname: \"Val\",\r\n        lname: \"Clay\",\r\n        age: \"93\",\r\n        gender: \"female\",\r\n    },\r\n    {\r\n        id: 12,\r\n        fname: \"Delta\",\r\n        lname: \"Dorian\",\r\n        age: \"87\",\r\n        gender: \"male\",\r\n    },\r\n    {\r\n        id: 13,\r\n        fname: \"Ash\",\r\n        lname: \"Hayden\",\r\n        age: \"50\",\r\n        gender: \"female\",\r\n    },\r\n    {\r\n        id: 14,\r\n        fname: \"Reed\",\r\n        lname: \"Gabriel\",\r\n        age: \"37\",\r\n        gender: \"male\",\r\n    },\r\n    {\r\n        id: 15,\r\n        fname: \"Aiden\",\r\n        lname: \"Stevie\",\r\n        age: \"68\",\r\n        gender: \"female\",\r\n    },\r\n    {\r\n        id: 16,\r\n        fname: \"Bay\",\r\n        lname: \"Rory\",\r\n        age: \"97\",\r\n        gender: \"male\",\r\n    },\r\n    {\r\n        id: 17,\r\n        fname: \"Campbell\",\r\n        lname: \"Harley\",\r\n        age: \"56\",\r\n        gender: \"female\",\r\n    },\r\n    {\r\n        id: 18,\r\n        fname: \"Mason\",\r\n        lname: \"Andy\",\r\n        age: \"31\",\r\n        gender: \"male\",\r\n    },\r\n    {\r\n        id: 19,\r\n        fname: \"Glenn\",\r\n        lname: \"Carroll\",\r\n        age: \"70\",\r\n        gender: \"male\",\r\n    },\r\n    {\r\n        id: 20,\r\n        fname: \"Brooklyn\",\r\n        lname: \"Adrian\",\r\n        age: \"62\",\r\n        gender: \"female\",\r\n    }\r\n]`;\r\n\r\nexport const TableWithPagination = `import React from \"react\";\r\nimport { Table } from \"reatable\";\r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: \"fname\",\r\n        label: \"First Name\"\r\n    },\r\n    {\r\n        dataIndex: \"lname\",\r\n        label: \"Last Name\"\r\n    },\r\n    {\r\n        dataIndex: \"age\",\r\n        label: \"Age\"\r\n    },\r\n    {\r\n        dataIndex: \"gender\",\r\n        label: \"Gender\"\r\n    },\r\n]\r\n\r\n${reuseData}\r\n\r\n#render(\r\n    <Table\r\n        columns={columns} \r\n        data={data} \r\n        pagination={{\r\n            pageSize: 5\r\n        }} \r\n    />\r\n)`;\r\n\r\nexport const SortableTable = `import React from \"react\";\r\nimport { Table } from \"reatable\";\r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: \"fname\",\r\n        label: \"First Name\",\r\n        sortable: true,\r\n        sortOrderDefault: 'desc'\r\n    },\r\n    {\r\n        dataIndex: \"lname\",\r\n        label: \"Last Name\",\r\n        sortable: (a, b) => a.length - b.length,\r\n        sortDirection: [\"asc\"]\r\n    },\r\n    {\r\n        dataIndex: \"age\",\r\n        label: \"Age\",\r\n        sortable: true,\r\n        sortDirection: [\"desc\", \"asc\"]\r\n    },\r\n    {\r\n        dataIndex: \"gender\",\r\n        label: \"Gender\"\r\n    },\r\n]\r\n\r\n${reuseData}\r\n\r\n#render(\r\n    <>  \r\n        <style>\r\n            {\\`table.sortable-table td[data-sorted=\"true\"], \r\n            table.sortable-table th[data-sortable=\"true\"]:not([data-sort-order=\"none\"]) {\r\n                background: rgba(0,0,0,0.04)\r\n            }\\`} \r\n        </style>\r\n        <Table \r\n            className=\"n-table n-no-shadow sortable-table\" \r\n            columns={columns} \r\n            data={data} \r\n            pagination={{\r\n                pageSize: 5\r\n            }} \r\n        />\r\n    </>\r\n)`;\r\n\r\nexport const CollapsibleTable = `import React from \"react\";\r\nimport { Table } from \"reatable\";\r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: \"fname\",\r\n        label: \"First Name\", \r\n    },\r\n    {\r\n        dataIndex: \"lname\",\r\n        label: \"Last Name\"\r\n    },\r\n    {\r\n        dataIndex: \"age\",\r\n        label: \"Age\",\r\n        sortable: true,\r\n        sortOrderDefault: 'asc'\r\n    },\r\n    {\r\n        dataIndex: \"gender\",\r\n        label: \"Gender\"\r\n    },\r\n]\r\n\r\n${smallData}\r\n\r\n#render(\r\n    <>\r\n        <style>\r\n            {\\`.row-collapsible tr[data-collapsible=\"true\"] {\r\n                cursor: pointer; \r\n            }\\`}\r\n            {\\`.row-collapsible tr[data-collapsible=\"false\"] { \r\n                background: rgba(0,0,0,0.05)\r\n            }\\`}\r\n        </style>\r\n        <Table \r\n            className=\"n-table n-no-shadow row-collapsible\" \r\n            columns={columns} \r\n            data={data}  \r\n            collapsible={{\r\n                render: (row) => (\r\n                    <div style={{padding: \"10px 20px\"}}>\r\n                    {\\`\\${row.fname} \\${row.lname} is age below 50, that is why the row is collapsible base on the condition in collapseWhen\\`}\r\n                    </div>\r\n                ),\r\n                collapseWhen: (row) => parseInt(row.age) < 50,\r\n                collapseWhenClickRow: true,\r\n                accordion: true,\r\n                transition: {\r\n                    duration: 100,\r\n                    timingFunction: \"ease-in\"\r\n                },\r\n            }}\r\n        />\r\n    </>\r\n)`;\r\n\r\nexport const CollapsibleTableUsingButton = `import React from \"react\";\r\nimport { Table } from \"reatable\";\r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: \"fname\",\r\n        label: \"First Name\",\r\n        render: (fname, row, index, {collapsible, sort, page, filters}) => {\r\n            const { collapsed, collapseHandler } = collapsible \r\n            return (\r\n                <span className=\"d-flex flex-center-y\">\r\n                    {collapsible && (\r\n                        <button \r\n                            className={\\`n-btn btn-caret mr-2\\${collapsed ? \" active\" : \"\"}\\`} \r\n                            onClick={collapseHandler} \r\n                        />  \r\n                    )}\r\n                    {fname}\r\n                </span>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        dataIndex: \"lname\",\r\n        label: \"Last Name\"\r\n    },\r\n    {\r\n        dataIndex: \"age\",\r\n        label: \"Age\",\r\n        sortable: true,\r\n        sortOrderDefault: 'asc'\r\n    },\r\n    {\r\n        dataIndex: \"gender\",\r\n        label: \"Gender\"\r\n    },\r\n]\r\n\r\n${smallData}\r\n\r\n#render(\r\n    <> \r\n        <Table \r\n            className=\"n-table n-no-shadow row-collapsible\" \r\n            columns={columns} \r\n            data={data}  \r\n            collapsible={{\r\n                render: (row) => (\r\n                    <div style={{padding: \"10px 20px\"}}>\r\n                    {\\`\\${row.fname} \\${row.lname} is age below 50, that is why the row is collapsible base on the condition in collapseWhen\\`}\r\n                    </div>\r\n                ),\r\n                collapseWhen: (row) => parseInt(row.age) < 50,\r\n            }}\r\n        />\r\n    </>\r\n)`;\r\n\r\nexport const TableFiltration = `import React from \"react\";\r\nimport { Table } from \"reatable\";\r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: \"fname\",\r\n        label: \"First Name\", \r\n        sortable: true,\r\n        filterSearch: { label: \"Search\", like: \"{search}%\"}\r\n    },\r\n    {\r\n        dataIndex: \"lname\",\r\n        label: \"Last Name\",\r\n        sortable: true,\r\n        filters: [\r\n            { label: \"Starts with A\", like: \"a%\" },\r\n            { label: \"Starts with B\", like: \"b%\" },\r\n            { label: \"Ends with Y\", like: \"%y\" },\r\n            { label: \"Has C\", like: \"%c%\" }\r\n        ],\r\n    },\r\n    {\r\n        dataIndex: \"age\",\r\n        label: \"Age\", \r\n        sortable: true,\r\n    },\r\n    {\r\n        dataIndex: \"gender\",\r\n        label: \"Gender\",  \r\n        filters: [\r\n            { label: \"Male\", like: \"male\" },\r\n            { label: \"Female\", like: \"female\" }\r\n        ],\r\n        filterMultiple: false\r\n    },\r\n]\r\n\r\n${reuseData}\r\n\r\n#render(\r\n    <> \r\n        <Table \r\n            className=\"n-table n-no-shadow sortable-table\" \r\n            columns={columns} \r\n            data={data} \r\n            pagination={{\r\n                pageSize: 5\r\n            }} \r\n        />\r\n    </>\r\n)`;\r\n\r\nexport const AsynchronousTable = `import React from \"react\";\r\nimport { Table } from \"reatable\";\r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: \"fname\",\r\n        label: \"First Name\", \r\n        sortable: true,\r\n        filterSearch: { label: \"Search\", like: \"{search}%\"}\r\n    },\r\n    {\r\n        dataIndex: \"lname\",\r\n        label: \"Last Name\",\r\n        sortable: true,\r\n    },\r\n    {\r\n        dataIndex: \"age\",\r\n        label: \"Age\",\r\n        sortable: true,\r\n    },\r\n    {\r\n        dataIndex: \"gender\",\r\n        label: \"Gender\", \r\n        filters: [\r\n            { label: \"Male\", like: \"male\" },\r\n            { label: \"Female\", like: \"female\" }\r\n        ],\r\n        filterMultiple: false\r\n    },\r\n]\r\n\r\nconst AsyncTable = () => {\r\n    const [response, setResponse] = React.useState({data: [], rowsCount: 0})\r\n    const [changes, setChanges] = React.useState(null)\r\n\r\n    React.useEffect(() => {\r\n        if(!changes) return\r\n        \r\n        const controller = new AbortController()\r\n        fetch(\"/human/data\", {\r\n            signal: controller.signal,\r\n            method: \"GET\", \r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: {\r\n                sortOrderBy: changes.sort.orderBy,\r\n                sortOrder: changes.sort.order,\r\n                currentPage: changes.pagination.currentPage,\r\n                pageSize: changes.pagination.pageSize,\r\n                filters: changes.filters,\r\n            } \r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200) {\r\n                return response.json() \r\n            } else {\r\n                response.error()\r\n            }\r\n        }).then((result) => {\r\n            setResponse({\r\n                data: result.data,\r\n                rowsCount: result.rowsCount\r\n            })\r\n        })\r\n        .catch((error) => console.error(error))\r\n        return () => controller.abort()\r\n    }, [changes])\r\n\r\n    const handleChange = React.useCallback((e) => { \r\n        setChanges(e)\r\n    }, [])\r\n\r\n    return (\r\n        <Table \r\n            className=\"n-table n-no-shadow sortable-table\" \r\n            columns={columns} \r\n            data={response.data} \r\n            pagination={{\r\n                pageSize: 5,\r\n                totalRows: response.rowsCount\r\n            }} \r\n            asynchronous\r\n            onChange={handleChange} \r\n        />\r\n    )\r\n}\r\n\r\n#render(<AsyncTable />)`;\r\n\r\nexport const CustomizableTableInterfaces = `import React from \"react\";\r\nimport { Table, TableContent, Pagination, Loader } from \"reatable\";\r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: \"fname\",\r\n        label: \"First Name\", \r\n        sortable: true,\r\n        filterSearch: { label: \"Search\", like: \"{search}%\"}\r\n    },\r\n    {\r\n        dataIndex: \"lname\",\r\n        label: \"Last Name\",\r\n        sortable: true,\r\n    },\r\n    {\r\n        dataIndex: \"age\",\r\n        label: \"Age\",\r\n        sortable: true,\r\n    },\r\n    {\r\n        dataIndex: \"gender\",\r\n        label: \"Gender\", \r\n        filters: [\r\n            { label: \"Male\", like: \"male\" },\r\n            { label: \"Female\", like: \"female\" }\r\n        ],\r\n        filterMultiple: false\r\n    },\r\n]\r\n\r\nconst containerStyle = {\r\n    position: \"relative\",  \r\n    overflowX: \"auto\"\r\n}\r\n\r\nconst AsyncTable = () => {\r\n    const [response, setResponse] = React.useState({data: [], rowsCount: 0})\r\n    const [changes, setChanges] = React.useState(null)\r\n    \r\n    React.useEffect(() => {\r\n        if(!changes) return\r\n        \r\n        const controller = new AbortController()\r\n        fetch(\"/human/data\", {\r\n            signal: controller.signal,\r\n            method: \"GET\", \r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: {\r\n                sortOrderBy: changes.sort.orderBy,\r\n                sortOrder: changes.sort.order,\r\n                currentPage: changes.pagination.currentPage,\r\n                pageSize: changes.pagination.pageSize,\r\n                filters: changes.filters,\r\n            } \r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200) {\r\n                return response.json() \r\n            } else {\r\n                response.error()\r\n            }\r\n        }).then((result) => {\r\n            setResponse({\r\n                data: result.data,\r\n                rowsCount: result.rowsCount\r\n            })\r\n        })\r\n        .catch((error) => console.error(error))\r\n        return () => controller.abort()\r\n    }, [changes])\r\n\r\n    const handleChange = React.useCallback((e) => { \r\n        setChanges(e)\r\n    }, [])\r\n\r\n    return (\r\n        <Table  \r\n            columns={columns} \r\n            data={response.data} \r\n            pagination={{\r\n                pageSize: 5,\r\n                totalRows: response.rowsCount\r\n            }} \r\n            asynchronous\r\n            onChange={handleChange} \r\n        >\r\n            <div style={containerStyle}>  \r\n                <div className=\"d-flex flex-end-x\">\r\n                    <Pagination /> \r\n                </div>\r\n                <TableContent className=\"n-table n-no-shadow sortable-table\" />\r\n                <div className=\"d-flex flex-end-x\">\r\n                    <Pagination /> \r\n                </div>\r\n                <Loader />\r\n            </div>\r\n        </Table>\r\n    )\r\n}\r\n\r\n#render(<AsyncTable />)`;\r\n\r\nexport const CustomizeLoader = `import React from \"react\";\r\nimport { Table, TableContent, Pagination, Loader } from \"reatable\";\r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: \"fname\",\r\n        label: \"First Name\", \r\n        sortable: true,\r\n        filterSearch: { label: \"Search\", like: \"{search}%\"}\r\n    },\r\n    {\r\n        dataIndex: \"lname\",\r\n        label: \"Last Name\",\r\n        sortable: true,\r\n    },\r\n    {\r\n        dataIndex: \"age\",\r\n        label: \"Age\",\r\n        sortable: true,\r\n    },\r\n    {\r\n        dataIndex: \"gender\",\r\n        label: \"Gender\", \r\n        filters: [\r\n            { label: \"Male\", like: \"male\" },\r\n            { label: \"Female\", like: \"female\" }\r\n        ],\r\n        filterMultiple: false\r\n    },\r\n]\r\n\r\nconst loaderStyle = {\r\n    display: \"flex\",\r\n    justifyContent: \"center\", \r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    color: \"#fff\"\r\n}\r\n\r\nconst containerStyle = {\r\n    position: \"relative\",  \r\n    overflowX: \"auto\"\r\n}\r\n\r\nconst AsyncTable = () => {\r\n    const [response, setResponse] = React.useState({data: [], rowsCount: 0})\r\n    const [changes, setChanges] = React.useState(null)\r\n    \r\n    React.useEffect(() => {\r\n        if(!changes) return\r\n        \r\n        const controller = new AbortController()\r\n        fetch(\"/human/data\", {\r\n            signal: controller.signal,\r\n            method: \"GET\", \r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: {\r\n                sortOrderBy: changes.sort.orderBy,\r\n                sortOrder: changes.sort.order,\r\n                currentPage: changes.pagination.currentPage,\r\n                pageSize: changes.pagination.pageSize,\r\n                filters: changes.filters,\r\n            } \r\n        })\r\n        .then((response) => {\r\n            if(response.status === 200) {\r\n                return response.json() \r\n            } else {\r\n                response.error()\r\n            }\r\n        }).then((result) => {\r\n            setResponse({\r\n                data: result.data,\r\n                rowsCount: result.rowsCount\r\n            })\r\n        })\r\n        .catch((error) => console.error(error))\r\n        return () => controller.abort()\r\n    }, [changes])\r\n\r\n    const handleChange = React.useCallback((e) => { \r\n        setChanges(e)\r\n    }, [])\r\n\r\n    return (\r\n        <Table  \r\n            columns={columns} \r\n            data={response.data} \r\n            pagination={{\r\n                pageSize: 5,\r\n                totalRows: response.rowsCount\r\n            }} \r\n            asynchronous\r\n            onChange={handleChange} \r\n        >\r\n            <div style={containerStyle}>   \r\n                <TableContent className=\"n-table n-no-shadow sortable-table\" />\r\n                <div className=\"d-flex flex-end-x\">\r\n                    <Pagination />\r\n                </div>\r\n                <Loader>\r\n                    <div style={loaderStyle}>\r\n                        loading......\r\n                    </div>\r\n                </Loader>\r\n            </div>\r\n        </Table>\r\n    )\r\n}\r\n\r\n#render(<AsyncTable />)`;\r\n\r\nexport const CustomizablePagination = `import React from \"react\";\r\nimport { Table, TableContent, Pagination } from \"reatable\";\r\nimport data from \"human-data.json\";\r\nimport {columns, data} from \"human-data\"; \r\n\r\nconst PaginationContainer = ({ children }) => (\r\n    <ul className=\"n-nav n-nav-flated n-no-hover\">\r\n        {children}\r\n    </ul>\r\n)\r\n\r\nconst PaginationList = ({ children, active, disabled, onClick }) => ( \r\n    <a \r\n       className={\\`n-nav-link\\${active \r\n            ? \" active\" \r\n            : disabled \r\n            ? \" disabled\" \r\n            : \"\"}\\`\r\n       }\r\n       href=\"#\" \r\n       onClick={onClick}>\r\n        {children}\r\n    </a> \r\n)\r\n\r\n#render(\r\n    <Table  \r\n        columns={columns} \r\n        data={data} \r\n        pagination={{\r\n            pageSize: 5\r\n        }}>\r\n        <div className=\"overflow-x-auto\">\r\n            <TableContent className=\"n-table n-no-shadow sortable-table\" />\r\n            <div className=\"d-flex flex-end-x\">\r\n                <Pagination \r\n                    prevLabel=\"〈\"\r\n                    nextLabel=\"〉\"\r\n                    as={{\r\n                        Container: PaginationContainer,\r\n                        List: PaginationList\r\n                    }} \r\n                />\r\n            </div>\r\n        </div>\r\n    </Table>\r\n) `;\r\n\r\nexport const CreateYourOwnPagination = `import React from \"react\";\r\nimport { Table, TableContent, usePagination } from \"reatable\";\r\nimport {columns, data} from \"human-data\"; \r\n\r\nconst CustomPagination = () => {\r\n    const { allowPagination, totalPages, page, setPage } = usePagination();\r\n    return allowPagination && (\r\n        <nav className=\"n-nav\">\r\n            {Array.from(new Int32Array(totalPages)).map((v, index) => {\r\n                const pageNumber = index + 1\r\n                return (\r\n                    <a key={index}\r\n                        href=\"#\" \r\n                        className={\\`n-nav-link\\${ \r\n                            pageNumber === page \r\n                            ? \" active\"  \r\n                            : \"\"}\\`\r\n                        }\r\n                        onClick={(e) => {\r\n                            e.preventDefault()\r\n                            setPage(pageNumber)\r\n                        }}>\r\n                        {pageNumber}\r\n                    </a>\r\n                )\r\n            })}\r\n        </nav>\r\n    )\r\n}\r\n\r\n#render(\r\n    <Table  \r\n        columns={columns} \r\n        data={data} \r\n        pagination={{\r\n            pageSize: 10\r\n        }}>\r\n        <div className=\"overflow-x-auto\">  \r\n            <TableContent className=\"n-table n-no-shadow sortable-table\" />\r\n            <div className=\"d-flex flex-end-x\">\r\n                <CustomPagination />\r\n            </div>\r\n        </div>\r\n    </Table>\r\n) `;\r\n\r\nexport const ChangablePageSize = `import React from \"react\";\r\nimport { Table, TableContent, Pagination } from \"reatable\";\r\nimport {columns, data} from \"human-data\"; \r\n\r\nconst TableWrapper = () => {\r\n    const [pagesize, setPagesize] = React.useState(5)\r\n\r\n    const showStyle = {\r\n        borderRadius: \"2px\",\r\n        padding: \"5px 10px\",\r\n        marginBottom: \"16px\"\r\n    }\r\n    const sizeSelectionStyle = {\r\n        ...showStyle, \r\n        borderColor: '#f0f0f0'\r\n    }\r\n\r\n    return (\r\n        <Table  \r\n            columns={columns} \r\n            data={data} \r\n            pagination={{\r\n                pageSize: pagesize\r\n            }}>\r\n            <div className=\"overflow-x-auto\">\r\n                <TableContent className=\"n-table n-no-shadow sortable-table\" />\r\n                <div className=\"d-flex flex-spb-x\">\r\n                    <div className=\"d-flex\">\r\n                        <span style={showStyle}>show</span>\r\n                        <select value={pagesize} \r\n                            onChange={({target}) => setPagesize(parseInt(target.value)) }\r\n                            style={sizeSelectionStyle}>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"15\">15</option>\r\n                            <option value=\"20\">20</option>\r\n                        </select>\r\n                    </div>\r\n                    <Pagination /> \r\n                </div>\r\n            </div>\r\n        </Table>\r\n    )\r\n}\r\n\r\n#render(<TableWrapper />)`;\r\n\r\nexport const CreateFilterFirstLetters = `import React from \"react\";\r\nimport { Table, TableContent, Pagination, useFilter } from \"reatable\";\r\nimport { data } from \"human-data\"; \r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: \"fname\",\r\n        label: \"First Name\",  \r\n    },\r\n    {\r\n        dataIndex: \"lname\",\r\n        label: \"Last Name\",\r\n        sortable: true,\r\n    },\r\n    {\r\n        dataIndex: \"age\",\r\n        label: \"Age\", \r\n    },\r\n    {\r\n        dataIndex: \"gender\",\r\n        label: \"Gender\",\r\n        filters: [\r\n            { label: \"Male\", like: \"male\" },\r\n            { label: \"Female\", like: \"female\" }\r\n        ],\r\n        filterMultiple: false,\r\n    },\r\n]\r\n\r\nconst Alphabet = [ \r\n    { label: \"A\", like: \"a%\" }, \r\n    { label: \"B\", like: \"b%\" },\r\n    { label: \"C\", like: \"c%\" },\r\n    { label: \"D\", like: \"d%\" },\r\n    { label: \"E\", like: \"e%\" },\r\n    { label: \"F\", like: \"f%\" },\r\n    { label: \"G\", like: \"g%\" },\r\n    { label: \"H\", like: \"h%\" }, \r\n    { label: \"I\", like: \"i%\" }, \r\n    { label: \"J\", like: \"j%\" },\r\n    { label: \"K\", like: \"k%\" },\r\n    { label: \"L\", like: \"l%\" },\r\n    { label: \"M\", like: \"m%\" },\r\n    { label: \"N\", like: \"n%\" },\r\n    { label: \"O\", like: \"o%\" },\r\n    { label: \"P\", like: \"p%\" },\r\n    { label: \"Q\", like: \"q%\" },\r\n    { label: \"R\", like: \"r%\" },\r\n    { label: \"S\", like: \"s%\" },\r\n    { label: \"T\", like: \"t%\" },\r\n    { label: \"U\", like: \"u%\" },\r\n    { label: \"V\", like: \"v%\" },\r\n    { label: \"W\", like: \"w%\" },\r\n    { label: \"X\", like: \"x%\" },\r\n    { label: \"Y\", like: \"y%\" },\r\n    { label: \"Z\", like: \"z%\" },\r\n]\r\n\r\nconst CustomFilterAlphabet = () => {\r\n    const [dataIndex, setDataIndex] = React.useState(\"fname\")\r\n    const { \r\n        // filterable, \r\n        // filters, \r\n        // filterMultiple, \r\n        // filterSearch,\r\n        filterState,\r\n        setFilter \r\n    } = useFilter(dataIndex);\r\n\r\n    const dataIndexCurrentFilter = filterState.find(each => { \r\n        return each.dataIndex === dataIndex\r\n    })\r\n    \r\n    return (\r\n        <div className=\"d-flex flex-center-y mb-3\"> \r\n            <div className=\"custom-filter\">\r\n                <span className=\"filter-label\">Filter By:</span>\r\n                <select\r\n                    className=\"filter-form\" \r\n                    value={dataIndex} \r\n                    onChange={({target}) => setDataIndex(target.value)}>\r\n                    <option value=\"fname\">First Name</option>\r\n                    <option value=\"lname\">Last Name</option> \r\n                </select>    \r\n                <button \r\n                    className=\"filter-form\"\r\n                    onClick={() => setFilter(() => [])}>\r\n                    Reset\r\n                </button> \r\n            </div>  \r\n            <ul className=\"custom-letter-filter\">\r\n                {Alphabet.map((each) => (\r\n                        <li key={each.label} \r\n                            className={\r\n                                dataIndexCurrentFilter && \r\n                                dataIndexCurrentFilter\r\n                                    .value\r\n                                    .includes(each.like) \r\n                                ? \" active\"  \r\n                                : \"\" }>\r\n                            <a  href=\"#\" \r\n                                onClick={(e) => {\r\n                                    e.preventDefault()\r\n                                    setFilter((current) => {  \r\n                                        const update = dataIndexCurrentFilter \r\n                                                            || { dataIndex, value: [] } \r\n                                        const isAlreadyActive = update.value.includes(each.like)\r\n                                        update.value = isAlreadyActive\r\n                                                ? update.value.filter(like => like !== each.like)\r\n                                                : [...update.value, each.like]\r\n                                        return update.value.length  \r\n                                            ? [...current, update]\r\n                                            : current.filter(fltr => fltr.dataIndex !== dataIndex)\r\n                                    })\r\n                                }}>\r\n                            {each.label}\r\n                            </a>\r\n                        </li>\r\n                    )\r\n                )}\r\n            </ul> \r\n        </div>\r\n    )\r\n}\r\n\r\nconst showStyle = {\r\n    borderRadius: \"2px\",\r\n    padding: \"4px 10px\",\r\n    marginBottom: \"16px\"\r\n}\r\nconst sizeSelectionStyle = {\r\n    ...showStyle, \r\n    borderColor: '#f0f0f0'\r\n}\r\n\r\nconst TableWrapper = () => {\r\n    const [pagesize, setPagesize] = React.useState(5)\r\n    return (\r\n        <Table  \r\n            columns={columns} \r\n            data={data} \r\n            pagination={{\r\n                pageSize: pagesize\r\n            }}>\r\n            <div className=\"overflow-x-auto\">\r\n                <CustomFilterAlphabet />  \r\n                <TableContent className=\"n-table n-no-shadow sortable-table\" />\r\n                <div className=\"d-flex flex-spb-x\">\r\n                    <div className=\"d-flex\">\r\n                        <span style={showStyle}>show</span>\r\n                        <select value={pagesize} \r\n                            onChange={({target}) => setPagesize(parseInt(target.value)) }\r\n                            style={sizeSelectionStyle}>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"15\">15</option>\r\n                            <option value=\"20\">20</option>\r\n                        </select>\r\n                    </div>\r\n                    <Pagination /> \r\n                </div>\r\n            </div>\r\n        </Table>\r\n    )\r\n}\r\n\r\n#render(<TableWrapper />) `;\r\n\r\nexport const CreateFilterBySearch = `import React from \"react\";\r\nimport { Table, TableContent, Pagination, useFilter } from \"reatable\";\r\nimport { data } from \"human-data\"; \r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: \"fname\",\r\n        label: \"First Name\", \r\n    },\r\n    {\r\n        dataIndex: \"lname\",\r\n        label: \"Last Name\",\r\n        sortable: true, \r\n    },\r\n    {\r\n        dataIndex: \"age\",\r\n        label: \"Age\", \r\n    },\r\n    {\r\n        dataIndex: \"gender\",\r\n        label: \"Gender\",\r\n        filters: [\r\n            { label: \"Male\", like: \"male\" },\r\n            { label: \"Female\", like: \"female\" }\r\n        ],\r\n        filterMultiple: false,\r\n    },\r\n] \r\n\r\nconst CustomFilterBySearch = () => {\r\n    const [dataIndex, setDataIndex] = React.useState(\"fname\") \r\n    const { \r\n        // filterable, \r\n        // filters, \r\n        // filterMultiple, \r\n        // filterSearch,\r\n        filterState,\r\n        setFilter \r\n    } = useFilter(dataIndex);\r\n\r\n    const dataIndexCurrentFilter = filterState.find(each => { \r\n        return each.dataIndex === dataIndex\r\n    })\r\n\r\n    return ( \r\n        <div key={dataIndex} className=\"custom-filter mb-3\"> \r\n                <span className=\"filter-label\">Filter By:</span> \r\n            <select\r\n                className=\"filter-form\" \r\n                value={dataIndex} \r\n                onChange={({target}) => {\r\n                    setDataIndex(target.value)\r\n                    setFilter((current) => current.filter((fltr) => fltr.dataIndex !== dataIndex))\r\n                }}>\r\n                <option value=\"fname\">First Name</option>\r\n                <option value=\"lname\">Last Name</option> \r\n            </select>    \r\n            <input \r\n                className=\"filter-form\"\r\n                placeholder=\"search...\"\r\n                value={dataIndexCurrentFilter \r\n                    ? dataIndexCurrentFilter.value[0].replace(/%/g, \"\")\r\n                    : \"\"}\r\n                onChange={({target}) => {\r\n                    const value = target.value \r\n                    setFilter((current) => { \r\n                        const update = dataIndexCurrentFilter || { dataIndex, value: []}\r\n                        update.value = [\\`\\${value}%\\`]\r\n                        return value.length \r\n                            ? [...current, update]\r\n                            : current.filter((fltr) => fltr.dataIndex !== dataIndex) \r\n                    })\r\n                }} \r\n            /> \r\n            <button \r\n                className=\"filter-form\"\r\n                onClick={() => setFilter(() => [])}>\r\n                Reset\r\n            </button> \r\n        </div>  \r\n    )\r\n}\r\n\r\nconst showStyle = {\r\n    borderRadius: \"2px\",\r\n    padding: \"4px 10px\",\r\n    marginBottom: \"16px\"\r\n}\r\nconst sizeSelectionStyle = {\r\n    ...showStyle, \r\n    borderColor: '#f0f0f0'\r\n}\r\n\r\nconst TableWrapper = () => {\r\n    const [pagesize, setPagesize] = React.useState(5)\r\n    return (\r\n        <Table  \r\n            columns={columns} \r\n            data={data} \r\n            pagination={{\r\n                pageSize: pagesize\r\n            }}>\r\n            <div className=\"overflow-x-auto\">\r\n                <div className=\"d-flex flex-spb-x\"> \r\n                    <CustomFilterBySearch />\r\n                    <Pagination /> \r\n                </div>\r\n                <TableContent className=\"n-table n-no-shadow sortable-table\" />\r\n                <div className=\"d-flex flex-spb-x\"> \r\n                    <div className=\"d-flex\"> \r\n                        <span style={showStyle}>show</span>\r\n                        <select value={pagesize} \r\n                            onChange={({target}) => setPagesize(parseInt(target.value)) }\r\n                            style={sizeSelectionStyle}>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"15\">15</option>\r\n                            <option value=\"20\">20</option>\r\n                        </select>\r\n                    </div>\r\n                    <Pagination /> \r\n                </div>\r\n            </div>\r\n        </Table>\r\n    )\r\n}\r\n\r\n#render(<TableWrapper />) `;\r\n\r\nexport const CustomizeTableContentRowAndCell = `import React from \"react\";\r\nimport { Table, TableContent, Pagination, useColumn } from \"reatable\";\r\nimport { data } from \"human-data\"; \r\n\r\nconst columns = [\r\n    {\r\n        dataIndex: 'fname',\r\n        label: 'First Name',\r\n        sortable: true,\r\n        filterSearch: { label: 'Search', like: '{search}%' },\r\n    },\r\n    {\r\n        dataIndex: 'lname',\r\n        label: 'Last Name',\r\n        editable: true, // you can create your own feature like this and use the useColumn to get this settings\r\n    },\r\n    {\r\n        dataIndex: 'age',\r\n        label: 'Age',\r\n        sortable: true,\r\n    },\r\n    {\r\n        dataIndex: 'gender',\r\n        label: 'Gender',\r\n        filters: [\r\n            { label: 'Male', like: 'male' },\r\n            { label: 'Female', like: 'female' },\r\n        ],\r\n        filterMultiple: false,\r\n    },\r\n];\r\n\r\nconst TableRow = ({ row, children, ...props}) => (\r\n    <tr\r\n        className={\\`my-class\\${props['aria-expanded'] ? ' collapsed' : ''}\\`}\r\n        {...props}\r\n    >\r\n        {children}\r\n    </tr>\r\n);\r\n\r\nconst EditableTableCell = ({ row, dataIndex, children, ...props}) => {\r\n    const column = useColumn(dataIndex)  \r\n    const [isEditMode, setEditMode] = React.useState(false)\r\n    const [value, setValue] = React.useState(children)\r\n    const handleDouble = (e) => {\r\n        e.preventDefault()\r\n        setEditMode(true)\r\n    }\r\n    const handleBlur = () => setEditMode(false)\r\n    const handleChange = ({target}) => setValue(target.value)\r\n\r\n    return (\r\n        <td\r\n            className={\\`your-class\\${props['data-sorted'] ? ' sorted' : ''}\\`}\r\n            onDoubleClick={handleDouble}\r\n            {...props}\r\n        >\r\n            {column.editable && isEditMode ? (\r\n                <input \r\n                    autoFocus\r\n                    value={value} \r\n                    onBlur={handleBlur} \r\n                    onChange={handleChange}\r\n                    style={{\r\n                        display: \"inline\",\r\n                        border: 0\r\n                    }} \r\n                /> \r\n            ) : (\r\n                <span>{value}</span>\r\n            )}\r\n        </td>\r\n    );\r\n}\r\n\r\n#render(\r\n    <Table  \r\n        columns={columns} \r\n        data={data} \r\n        pagination={{\r\n            pageSize: 5\r\n        }}>\r\n        <div className=\"overflow-x-auto\">  \r\n            <TableContent \r\n                as={{\r\n                    Row: TableRow,\r\n                    Cell: EditableTableCell\r\n                }} \r\n                className=\"n-table n-no-shadow sortable-table\" \r\n            />\r\n            <div className=\"d-flex flex-end-x\"> \r\n                <Pagination /> \r\n            </div>\r\n        </div>\r\n    </Table>\r\n) `;\r\n\r\nexport const CustomizeTableContentEmptyData = `import React from \"react\";\r\nimport { Table, TableContent } from \"reatable\";\r\nimport { columns } from \"human-data\"; \r\n\r\nconst exampledata = []\r\n\r\nconst EmptyData = ({ colSpan }) => (\r\n    <tr className=\"myclass\" >\r\n       <td colSpan={colSpan}>\r\n            <center>Empty Data....</center>\r\n       </td>\r\n    </tr>\r\n);  \r\n\r\n#render(\r\n    <Table  \r\n        columns={columns} \r\n        data={exampledata}>\r\n        <div className=\"overflow-x-auto\">   \r\n            <TableContent \r\n                as={{\r\n                    Empty: EmptyData, \r\n                }} \r\n                className=\"n-table n-no-shadow\" \r\n            />\r\n        </div>\r\n    </Table>\r\n) `;\r\n\r\nexport const CustomizeTableContentColumnHeader = `import React from \"react\";\r\nimport { Table, TableContent, Pagination, useSort, useFilter } from \"reatable\";\r\nimport { columns, data } from \"human-data\"; \r\n\r\nconst ColumnHeader = ({ label, dataIndex, ...rest }) => {\r\n\tconst { sortable, sortOrder, handleSort } = useSort(dataIndex);\r\n\tconst { filterable } = useFilter(dataIndex);\r\n    return (\r\n        <th \r\n            {...rest}\r\n            data-sortable={sortable}\r\n            data-sort-order={sortable ? sortOrder || 'none' : undefined}\r\n            style={{backgroundColor: \"#00BCD4\"}}\r\n        > \r\n            {sortable ? (\r\n                <span className='rt-sortable' onClick={handleSort}>\r\n                    {label}\r\n                    <i className='rt-sort-icon' />\r\n                </span>\r\n            ) : (\r\n                label\r\n            )}  \r\n        </th>\r\n    );\r\n};\r\n\r\n#render(\r\n    <Table  \r\n        columns={columns} \r\n        data={data} \r\n        pagination={{\r\n            pageSize: 5\r\n        }}>\r\n        <div className=\"overflow-x-auto\">   \r\n            <TableContent \r\n                as={{\r\n                    Column: ColumnHeader, \r\n                }} \r\n                className=\"n-table n-no-shadow\" \r\n            />\r\n            <div className=\"d-flex flex-end-x\"> \r\n                <Pagination /> \r\n            </div>\r\n        </div>\r\n    </Table>\r\n)`;\r\n\r\nexport const PassedRowDataOnModal = `import React from \"react\";\r\nimport { Table } from \"reatable\";\r\nimport { Modal } from \"modal\";\r\nimport { data } from \"human-data\";  \r\n\r\nconst TableWrapper = () => {\r\n\r\n    const [modalData, setModalData] = React.useState(false)\r\n    const columns = React.useMemo(() => [\r\n        {\r\n            dataIndex: 'fname',\r\n            label: 'First Name',\r\n            sortable: true,\r\n            filterSearch: { label: 'Search', like: '{search}%' },\r\n        },\r\n        {\r\n            dataIndex: 'lname',\r\n            label: 'Last Name',\r\n        },\r\n        {\r\n            dataIndex: 'age',\r\n            label: 'Age',\r\n            sortable: true,\r\n        },\r\n        {\r\n            dataIndex: 'gender',\r\n            label: 'Gender',\r\n            filters: [\r\n                { label: 'Male', like: 'male' },\r\n                { label: 'Female', like: 'female' },\r\n            ],\r\n            filterMultiple: false,\r\n        },\r\n        {\r\n            dataIndex: 'id',\r\n            label: 'Action',\r\n            render: (id, row, index) => {\r\n                const handleClick = () => setModalData(row)\r\n                return (\r\n                    <button \r\n                        className=\"n-btn n-btn-xs\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        view\r\n                    </button>\r\n                )\r\n            }\r\n        },\r\n    ], [])\r\n\r\n    const handleClose = () => setModalData(false)\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                className=\"n-table n-no-shadow\"\r\n                columns={columns} \r\n                data={data} \r\n                pagination={{\r\n                    pageSize: 5\r\n                }}\r\n            />  \r\n            <Modal show={!!modalData} onHide={handleClose}>\r\n                <Modal.Title onHide={handleClose}>Row Data</Modal.Title>                \r\n                <Modal.Body> \r\n                    <p><b>ID</b>: {modalData.id}</p>\r\n                    <p><b>First Name</b>: {modalData.fname}</p>\r\n                    <p><b>Last Name</b>: {modalData.lname}</p>\r\n                    <p><b>Age</b>: {modalData.age}</p>\r\n                    <p><b>Gender</b>: {modalData.gender}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button\r\n                        className=\"n-btn\" \r\n                        onClick={handleClose}>\r\n                        Close\r\n                    </button> \r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n#render(<TableWrapper />)`;\r\n\r\nexport const TableSelection = `import React from \"react\";\r\nimport { Table } from \"reatable\"; \r\nimport { Modal } from \"modal\";\r\nimport { data } from \"human-data\";\r\n\r\nconst CustomCheckbox = (props) => (\r\n    <input type=\"checkbox\" className=\"n-form-control va-m mb-1\" {...props} />\r\n)\r\n\r\nconst TableWrapper = () => {\r\n    const pageRows = 5\r\n    const [show, setShow] = React.useState(false)\r\n    const [selected, setSelected] = React.useState([])\r\n    const columns = React.useMemo(() => [\r\n        {\r\n            dataIndex: \"id\",\r\n            label: ({ data }) => (\r\n                <CustomCheckbox  \r\n                    id=\"master\"\r\n                    checked={selected.length === pageRows}\r\n                    indeterminate=\"true\"\r\n                    onChange={e => {\r\n                        const isChecked = e.target.checked\r\n                        setSelected(isChecked ? [...data] : [])\r\n                    }}\r\n                /> \r\n            ),\r\n            render: (id, row, index) => {\r\n                return (\r\n                    <CustomCheckbox\r\n                        id={id}\r\n                        checked={selected.some(each => each.id === id)}\r\n                        onChange={e => {\r\n                            const isChecked = e.target.checked\r\n                            setSelected(current => {\r\n                                return isChecked \r\n                                    ? [...current, row]\r\n                                    : current.filter(each => each.id !== id) \r\n                            })\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataIndex: \"fname\",\r\n            label: \"First Name\",\r\n        },\r\n        {\r\n            dataIndex: \"age\",\r\n            label: \"Age\", \r\n            sortable: true,\r\n        },\r\n        {\r\n            dataIndex: \"gender\",\r\n            label: \"Gender\",  \r\n            filters: [\r\n                { label: \"Male\", like: \"male\" },\r\n                { label: \"Female\", like: \"female\" }\r\n            ],\r\n            filterMultiple: false\r\n        },\r\n    ], [selected, pageRows])\r\n\r\n    const handleChange = React.useCallback(() => setSelected([]), [])\r\n    const handleClose = () => setShow(false)\r\n\r\n    return (\r\n        <>  \r\n            <button\r\n                disabled={!selected.length}\r\n                className=\"n-btn mb-3\"\r\n                children=\"view\"\r\n                onClick={() => setShow(!show)}\r\n            />\r\n            <Table \r\n                className=\"n-table n-no-shadow\" \r\n                columns={columns} \r\n                data={data} \r\n                pagination={{\r\n                    pageSize: pageRows\r\n                }} \r\n                onChange={handleChange}\r\n            />\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Title onHide={handleClose}>Row Data</Modal.Title>                \r\n                <Modal.Body> \r\n                    {selected.map(row => ( \r\n                        <div key={row.id} className=\"n-engrave-low mb-3\">\r\n                            <div className=\"p-3\">\r\n                                <h5>\r\n                                    {\\`\\${row.fname} \\${row.lname} profile\\`}\r\n                                </h5>\r\n                                <p><b>ID</b>: {row.id}</p>\r\n                                <p><b>First Name</b>: {row.fname}</p>\r\n                                <p><b>Last Name</b>: {row.lname}</p>\r\n                                <p><b>Age</b>: {row.age}</p>\r\n                                <p><b>Gender</b>: {row.gender}</p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button\r\n                        className=\"n-btn\" \r\n                        onClick={handleClose}>\r\n                        Close\r\n                    </button> \r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n#render(<TableWrapper />)`;\r\n","import React from 'react';\r\nimport { Modal } from 'Snippets/Neumorphism';\r\nimport { SectionWithCode, Note } from 'Templates';\r\nimport * as actual from './ActualExampleCode';\r\nimport * as scope from 'reatable';\r\nimport * as code from './StringCodes';\r\n\r\nexport const Installation = () => (\r\n\t<SectionWithCode\r\n\t\treadonly\r\n\t\ttitle='Installation'\r\n\t\tcode={`npm i reatable`}\r\n\t\tlanguage='js'\r\n\t\ttheme={{\r\n\t\t\tplain: {\r\n\t\t\t\tcolor: 'rgb(215,215,215)',\r\n\t\t\t\tbackgroundColor: 'rgb(86,86,86)',\r\n\t\t\t},\r\n\t\t\tstyles: [],\r\n\t\t}}\r\n\t/>\r\n);\r\n\r\nexport const Importing = () => (\r\n\t<SectionWithCode readonly title='Imports' code={code.Imports} />\r\n);\r\n\r\nexport const GettingStarted = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\ttitle='Getting Started'\r\n\t\t\tcontext='it is the basic example for reatable.'\r\n\t\t\tcode={code.GettingStarted}\r\n\t\t\tscope={scope}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tvariant=\"info\"\r\n\t\t\tcontext={\r\n\t\t\t\t<>\r\n\t\t\t\t\t<b>Table</b> or <b>TableContent</b> setting <b>className</b> attribute will remove the default stylesheet in table to prevent conflict to the setted class.\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\tstyle={{ marginTop: '-20px' }}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tcontext={\r\n\t\t\t\t<>\r\n\t\t\t\t\t<b>Table</b> property <b>data</b> must be an array of object that\r\n\t\t\t\t\tcontains <b>id</b> or <b>key</b> to distinguish it from each other to\r\n\t\t\t\t\tprevent bugs.\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\tstyle={{ marginBottom: '20px' }}\r\n\t\t/>\r\n\t</>\r\n);\r\n\r\nexport const ColumnGroup = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\ttitle='Column Group'\r\n\t\t\tcontext='you can group your table column headers.'\r\n\t\t\tcode={code.ColumnGroup}\r\n\t\t\tscope={scope}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tvariant='info'\r\n\t\t\ttitle='Tip'\r\n\t\t\tcontext='you can group column headers as many group as you like.'\r\n\t\t\tstyle={{ marginTop: '-20px', marginBottom: '20px' }}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tcontext={\r\n\t\t\t\t<>\r\n\t\t\t\t\t<b>Table</b> property <b>data</b> must be an array of object that\r\n\t\t\t\t\tcontains <b>id</b> or <b>key</b> to distinguish it from each other to\r\n\t\t\t\t\tprevent bugs.\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t/>\r\n\t</>\r\n);\r\n\r\nexport const MutatingTableCell = () => (\r\n\t<SectionWithCode\r\n\t\ttitle='Mutating Table Cell'\r\n\t\tcontext='you can mutate the appearance and elements of table cell'\r\n\t\tcode={code.MutatingTableCell}\r\n\t\tscope={scope}\r\n\t/>\r\n);\r\n\r\nexport const TableWithPagination = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\tcollapsible\r\n\t\t\ttitle='Table With Pagination'\r\n\t\t\tcontext='whenever the data is too big you need to paginate which is built-in in reatable.'\r\n\t\t\tcode={code.TableWithPagination}\r\n\t\t\tscope={scope}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tvariant='info'\r\n\t\t\tcontext='pagination will only be applicable if you assign value in pagination property pageSize.'\r\n\t\t\tstyle={{ marginTop: '-20px', marginBottom: '20px' }}\r\n\t\t/>\r\n\t</>\r\n);\r\n\r\nexport const SortableTable = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\tcollapsible\r\n\t\t\ttitle='Sortable Table'\r\n\t\t\tcontext='it has built-in feature column sorting.'\r\n\t\t\tcode={code.SortableTable}\r\n\t\t\tscope={scope}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tvariant='info'\r\n\t\t\tcontext='the column property sortable can be assign boolean that will be sorted by the built-in sorting algorithm of the component. or you can make your own algorithm by assigning function that compares the two argument.'\r\n\t\t\tstyle={{ marginTop: '-20px', marginBottom: '20px' }}\r\n\t\t/>\r\n\t\t<Note context='built-in sorting algorithm is not applicable in asynchronous table.' />\r\n\t</>\r\n);\r\n\r\nexport const CollapsibleTable = () => (\r\n\t<SectionWithCode\r\n\t\ttitle='Collapsible Table'\r\n\t\tcontext='you can make a collapsible table.'\r\n\t\tcode={code.CollapsibleTable}\r\n\t\tscope={scope}\r\n\t/>\r\n);\r\n\r\nexport const CollapsibleTableUsingButton = () => (\r\n\t<SectionWithCode\r\n\t\tcollapsible\r\n\t\ttitle='Collapsible Table Using Button'\r\n\t\tcontext='you can make a collapsible table using button in columns render.'\r\n\t\tcode={code.CollapsibleTableUsingButton}\r\n\t\tscope={scope}\r\n\t/>\r\n);\r\n\r\nexport const TableFiltration = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\tcollapsible\r\n\t\t\ttitle='Table Filtration'\r\n\t\t\tcontext='it has built-in feature column filtering.'\r\n\t\t\tcode={code.TableFiltration}\r\n\t\t\tscope={scope}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tcontext='built-in filtering algorithm is not applicable in asynchronous table.'\r\n\t\t\tstyle={{ marginTop: '-20px', marginBottom: '20px' }}\r\n\t\t/>\r\n\t</>\r\n);\r\n\r\nexport const AsynchronousTable = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\ttitle='Asynchronous Table'\r\n\t\t\tcontext='you can make asynchronous table.'\r\n\t\t\tcode={code.AsynchronousTable}\r\n\t\t\tscope={{\r\n\t\t\t\t...scope,\r\n\t\t\t\tfetch: actual.fetch,\r\n\t\t\t\tAbortController: actual.AbortController,\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tvariant='info'\r\n\t\t\tcontext='every action you made the loader will be shown because the table is asynchronous which makes it to wait for the sever response.'\r\n\t\t\tstyle={{ marginTop: '-20px', marginBottom: '20px' }}\r\n\t\t/>\r\n\t</>\r\n);\r\n\r\nexport const CustomizableTableInterfaces = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\tcollapsible\r\n\t\t\ttitle='Customizable Table Interfaces'\r\n\t\t\tcontext='you can customize your table appearance.'\r\n\t\t\tcode={code.CustomizableTableInterfaces}\r\n\t\t\tscope={{\r\n\t\t\t\t...scope,\r\n\t\t\t\tfetch: actual.fetch,\r\n\t\t\t\tAbortController: actual.AbortController,\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tvariant='info'\r\n\t\t\tcontext='all the component and hooks are only applicable inside Table component.'\r\n\t\t\tstyle={{ marginTop: '-20px', marginBottom: '20px' }}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tvariant='info'\r\n\t\t\tcontext={\r\n\t\t\t\t<>\r\n\t\t\t\t\tpassing the <b>className</b> in <b>Table</b> will be unnecessary,\r\n\t\t\t\t\tsince you can access directly to the <b>TableContent</b> to assign{' '}\r\n\t\t\t\t\t<b>className</b>.\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t/>\r\n\t</>\r\n);\r\n\r\nexport const CustomizeLoader = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\tcollapsible\r\n\t\t\ttitle='Customize Loader'\r\n\t\t\tcontext='you can customize your loader appearance.'\r\n\t\t\tcode={code.CustomizeLoader}\r\n\t\t\tscope={{\r\n\t\t\t\t...scope,\r\n\t\t\t\tfetch: actual.fetch,\r\n\t\t\t\tAbortController: actual.AbortController,\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tvariant='warning'\r\n\t\t\tcontext='Loader will only be visible when the table is asynchronous.'\r\n\t\t\tstyle={{ marginTop: '-20px', marginBottom: '20px' }}\r\n\t\t/>\r\n\t</>\r\n);\r\n\r\nexport const CustomizablePagination = () => (\r\n\t<SectionWithCode\r\n\t\ttitle='Customizable Pagination Component'\r\n\t\tcontext='you can customize pagination container and list and still using the Pagination components algorithm.'\r\n\t\tcode={code.CustomizablePagination}\r\n\t\tscope={{ ...scope, ...actual }}\r\n\t/>\r\n);\r\n\r\nexport const CreateYourOwnPagination = () => (\r\n\t<SectionWithCode\r\n\t\ttitle='Create Your Own Pagination'\r\n\t\tcontext=\"if you don't like the overall Pagination component model, then you can create your own by using usePagination.\"\r\n\t\tcode={code.CreateYourOwnPagination}\r\n\t\tscope={{ ...scope, ...actual }}\r\n\t/>\r\n);\r\n\r\nexport const ChangablePageSize = () => (\r\n\t<SectionWithCode\r\n\t\ttitle='Changable Page Size'\r\n\t\tcontext='there is no built-in component for page size changer but you can make your own by adding a few lines of code.'\r\n\t\tcode={code.ChangablePageSize}\r\n\t\tscope={{ ...scope, ...actual }}\r\n\t/>\r\n);\r\n\r\nexport const CreateFilterFirstLetters = () => (\r\n\t<SectionWithCode\r\n\t\tcollapsible\r\n\t\ttitle='Create Filter By First Letters'\r\n\t\tcontext='you can do all you want on filtering by using hook useFilter, this is just one of many things that you can do.'\r\n\t\tcode={code.CreateFilterFirstLetters}\r\n\t\tscope={{ ...scope, ...actual }}\r\n\t/>\r\n);\r\n\r\nexport const CreateFilterBySearch = () => (\r\n\t<SectionWithCode\r\n\t\tcollapsible\r\n\t\ttitle='Create Filter By Search'\r\n\t\tcontext='filter by search is so typical in dynamic table. this is just the idea to create greater things.'\r\n\t\tcode={code.CreateFilterBySearch}\r\n\t\tscope={{ ...scope, ...actual }}\r\n\t/>\r\n);\r\n\r\nexport const CustomizeTableContentRowAndCell = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\tcollapsible\r\n\t\t\ttitle='Customize TableContent Row & Cell'\r\n\t\t\tcontext='you can customize and create your own features on the table row(tr) and cell(td) in your own perspective, design and functionalities by using useColumn hooks, you can get your column settings you entered in the Table property columns. the customize cell example is editable and it is just one of many features you can create.'\r\n\t\t\tcode={code.CustomizeTableContentRowAndCell}\r\n\t\t\tscope={{ ...scope, ...actual }}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tvariant='info'\r\n\t\t\tcontext='you can use hooks especially useColumn to get the settings on columns and create your very own features.'\r\n\t\t\tstyle={{ marginTop: '-20px', marginBottom: '20px' }}\r\n\t\t/>\r\n\t</>\r\n);\r\n\r\nexport const CustomizeTableContentEmptyData = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\ttitle='Customize TableContent Empty Data'\r\n\t\t\tcontext=\"if you don't like the given empty data design you can make your own.\"\r\n\t\t\tcode={code.CustomizeTableContentEmptyData}\r\n\t\t\tscope={{ ...scope, ...actual }}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tvariant='info'\r\n\t\t\tcontext='you can use the given hooks in this customizes components.'\r\n\t\t\tstyle={{ marginTop: '-20px', marginBottom: '20px' }}\r\n\t\t/>\r\n\t</>\r\n);\r\n\r\nexport const CustomizeTableContentColumnHeader = () => (\r\n\t<>\r\n\t\t<SectionWithCode\r\n\t\t\ttitle='Customize TableContent Column Header'\r\n\t\t\tcontext='it is just a mediocre example on how you create a column header with sortable. it is just an idea for you to create greater header.'\r\n\t\t\tcode={code.CustomizeTableContentColumnHeader}\r\n\t\t\tscope={{ ...scope, ...actual }}\r\n\t\t/>\r\n\t\t<Note\r\n\t\t\tvariant='info'\r\n\t\t\tcontext='you can use the given hooks in this customizes components.'\r\n\t\t\tstyle={{ marginTop: '-20px', marginBottom: '20px' }}\r\n\t\t/>\r\n\t</>\r\n);\r\n\r\nexport const PassedRowDataOnModal = () => (\r\n\t<SectionWithCode\r\n\t\ttitle='Passing A Row Data On Modal'\r\n\t\tcontext='it is an idea on how to pass a data on modal, since modal is commonly use to handle changes in table.'\r\n\t\tcode={code.PassedRowDataOnModal}\r\n\t\tscope={{ ...scope, ...actual, Modal }}\r\n\t/>\r\n);\r\n\r\nexport const TableSelection = () => (\r\n\t<SectionWithCode\r\n\t\ttitle='Table Selection'\r\n\t\tcontext='it is an example to apply a selection on your table with sending multple data in modal.'\r\n\t\tcode={code.TableSelection}\r\n\t\tscope={{ ...scope, ...actual, Modal }}\r\n\t/>\r\n);\r\n","import React from 'react';\r\nimport { Section, Table } from 'Templates';\r\n\r\nconst filterData = {\r\n\tname: 'like',\r\n\ttype: 'string',\r\n\tdefault: '-',\r\n\tdescription: (\r\n\t\t<>\r\n\t\t\tIt is the filteration pattern. The pattern is similar to <b>MYSQL</b>{' '}\r\n\t\t\t<b>LIKE</b>.\r\n\t\t\t<br />\r\n\t\t\t<b>%</b> - The percent sign represents zero, one, or multiple characters.\r\n\t\t\t<br />\r\n\t\t\t<b>\"a%\"</b> - Finds any values that start with \"a\".\r\n\t\t\t<br />\r\n\t\t\t<b>\"%a\"</b> - Finds any values that ends with \"a\".\r\n\t\t\t<br />\r\n\t\t\t<b>\"%or%\"</b> - Finds any values that have \"or\" in any position.\r\n\t\t\t<br />\r\n\t\t\t<b>\"a%o\"</b> - Finds any values that start with \"a\" and ends with \"o\".\r\n\t\t\t<br />\r\n\t\t\t<b>\"aloha\"</b> - Without <b>%</b> will be recognize as exact.\r\n\t\t\t<br />\r\n\t\t\tAlthough the \"%\" is only effective in <b>Table</b> when{' '}\r\n\t\t\t<b>asynchronous</b> is <b>false</b>, but still any pattern entry will be\r\n\t\t\tpassed on <b>onChange</b> event property filters. which will be useful in{' '}\r\n\t\t\t<b>asynchronous</b> that will be requested in server.\r\n\t\t</>\r\n\t),\r\n};\r\n\r\nconst filtersProps = [\r\n\t{\r\n\t\tname: 'dataIndex',\r\n\t\ttype: 'string',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'It is use to determine which column is filtering.',\r\n\t},\r\n\t{\r\n\t\tname: 'value',\r\n\t\ttype: 'like[]',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'It contains all filter pattern of the column dataIndex.',\r\n\t\tdata: [filterData]\r\n\t},\r\n]\r\n\r\nconst partialOfiterateArgs = [\r\n\t{\r\n\t\tname: 'row,',\r\n\t\ttype: 'any',\r\n\t\tdefault: '-',\r\n\t\tdescription: <>It is the row of the data iteration.</>,\r\n\t},\r\n\t{\r\n\t\tname: 'index,',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription: <>It is the index of the data iteration.</>,\r\n\t},\r\n\t{\r\n\t\tname: 'states',\r\n\t\ttype: 'object',\r\n\t\tdefault: '-',\r\n\t\tdescription: <>It is status of the table that contains.</>,\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'collapsible',\r\n\t\t\t\ttype: 'boolean | object',\r\n\t\t\t\tdefault: 'false',\r\n\t\t\t\tdescription: (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\tIt is the state of the collapsible row. it will provide <b>false</b>{' '}\r\n\t\t\t\t\t\twhen the row is not collapsible.\r\n\t\t\t\t\t</>\r\n\t\t\t\t),\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'collapsed,',\r\n\t\t\t\t\t\ttype: 'boolean',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\t'It is the state of your row if it is already collapsed or not',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'collapseHandler,',\r\n\t\t\t\t\t\ttype: 'function',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\tIt is use to handle the row collapse state which supposed to be\r\n\t\t\t\t\t\t\t\tassign in <b>Element</b> property <b>onClick</b>.\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'sort',\r\n\t\t\t\ttype: 'object',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'It is the state of sort.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'orderBy',\r\n\t\t\t\t\t\ttype: 'string | null',\r\n\t\t\t\t\t\tdefault: 'null',\r\n\t\t\t\t\t\tdescription: (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\tIt is the column <b>dataIndex</b> which is ordering the sort.\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'order',\r\n\t\t\t\t\t\ttype: \"'asc' | 'desc' | null\",\r\n\t\t\t\t\t\tdefault: 'null',\r\n\t\t\t\t\t\tdescription: 'It is the order of the sort.',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'page',\r\n\t\t\t\ttype: 'number',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'It is the pagination current page.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'filters',\r\n\t\t\t\ttype: 'object[]',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'It is the state of filters.',\r\n\t\t\t\tdata: filtersProps\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n\r\nconst columnsData = [\r\n\t{\r\n\t\tname: 'dataIndex',\r\n\t\ttype: 'string',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'it is the index of the object from the data that will be displayed its value in the column. and also it is the key to get the column settings.',\r\n\t},\r\n\t{\r\n\t\tname: 'label',\r\n\t\ttype: 'string | elementType',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'The title of the column.',\r\n\t},\r\n\t{\r\n\t\tname: 'render',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'To mutate the column cell which is originally string into a element or anything.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'function (',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'cellData,',\r\n\t\t\t\ttype: 'any',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\tIt is the value which your <b>dataIndex</b> providing in each\r\n\t\t\t\t\t\titeration.\r\n\t\t\t\t\t</>\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t\t...partialOfiterateArgs,\r\n\t\t\t{\r\n\t\t\t\tname: `) {\r\n\t\t\t\t\treturn element \\| any\r\n\t\t\t\t}`,\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'cellAttr',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'you can add your own attributes on each table cell especially colSpan.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'function (',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t...partialOfiterateArgs,\r\n\t\t\t{\r\n\t\t\t\tname: `) {\r\n\t\t\t\t\treturn object\r\n\t\t\t\t}`,\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'mountCellWhen',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'it is use to determine if the column cell will be mounted or not, especially when one of the cell is occupying colSpan. when returned true it will be mounted otherwise it is not.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'function (',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t...partialOfiterateArgs,\r\n\t\t\t{\r\n\t\t\t\tname: `) {\r\n\t\t\t\t\treturn boolean\r\n\t\t\t\t}`,\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'sortable',\r\n\t\ttype: 'boolean | function',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'To determine if the column is sortable. plus, you can assign a function to create your own algorithm although it is not working in asynchronous.',\r\n\t},\r\n\t{\r\n\t\tname: 'sortOrderDefault',\r\n\t\ttype: \"'asc' | 'desc'\",\r\n\t\tdefault: '-',\r\n\t\tdescription: 'The default sort order of the column when mounted.',\r\n\t},\r\n\t{\r\n\t\tname: 'sortDirection',\r\n\t\ttype: \"['asc' | 'desc']\",\r\n\t\tdefault: '-',\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tThe direction of the sort order or the sort order will only allow.\r\n\t\t\t\tnormally the direction is <b>['asc', 'desc']</b>, you can reverse the\r\n\t\t\t\tdirection by doing <b>['desc', 'asc']</b>, or you can allow only\r\n\t\t\t\tascending by doing <b>['asc']</b> or descending by doing <b>['desc']</b>\r\n\t\t\t\t.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tname: 'filters',\r\n\t\ttype: 'object[]',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'The filters options list.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'label',\r\n\t\t\t\ttype: 'string',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'The label of the option.',\r\n\t\t\t},\r\n\t\t\tfilterData,\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'filterSearch',\r\n\t\ttype: 'object',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'The filtering by search.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'label',\r\n\t\t\t\ttype: 'string',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'The placeholder of the search filter.',\r\n\t\t\t},\r\n\t\t\tfilterData,\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'filterMultiple',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'true',\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tWhen <b>true</b>, the options will be a <b>checkbox</b>. When{' '}\r\n\t\t\t\t<b>false</b>, the option will be <b>radio button</b>\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n];\r\n\r\nconst TableAPIRows = [\r\n\t{\r\n\t\tname: 'columns',\r\n\t\ttype: 'object[]',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'The settings of the table columns.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'columns',\r\n\t\t\t\ttype: 'object[]',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'To make a nested column group.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'columns',\r\n\t\t\t\t\t\ttype: 'object[]',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'To make a nested column group.',\r\n\t\t\t\t\t\tdata: columnsData,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t...columnsData,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t...columnsData,\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'data',\r\n\t\ttype: 'object[]',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'The data of the table which is to be display.',\r\n\t},\r\n\t{\r\n\t\tname: 'className',\r\n\t\ttype: 'string',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'The className of your table.',\r\n\t},\r\n\t{\r\n\t\tname: 'pagination',\r\n\t\ttype: 'object',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'The setting of your pagination.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'pageSize',\r\n\t\t\t\ttype: 'number',\r\n\t\t\t\tdefault: '0',\r\n\t\t\t\tdescription:\r\n\t\t\t\t\t'The row size of each page. When 0 or no entry, all the data will be rendered and the pagination will not be visible',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'totalRows',\r\n\t\t\t\ttype: 'number',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\tThe total row of the data. it is useful when <b>Table</b> is{' '}\r\n\t\t\t\t\t\t<b>asynchronous</b>\r\n\t\t\t\t\t</>\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'currentPage',\r\n\t\t\t\ttype: 'number',\r\n\t\t\t\tdefault: '1',\r\n\t\t\t\tdescription: 'The current page of pagination',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'collapsible',\r\n\t\ttype: 'object',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'The setting of your expandable row.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'render',\r\n\t\t\t\ttype: 'function',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription:\r\n\t\t\t\t\t'It is the function on what is the content of the collapse.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'function (',\r\n\t\t\t\t\t\ttype: '',\r\n\t\t\t\t\t\tdefault: '',\r\n\t\t\t\t\t\tdescription: '',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'row',\r\n\t\t\t\t\t\ttype: 'object',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the row of each data iteration',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: ') { return element }',\r\n\t\t\t\t\t\ttype: '',\r\n\t\t\t\t\t\tdefault: '',\r\n\t\t\t\t\t\tdescription: '',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'collapseWhen',\r\n\t\t\t\ttype: 'function',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription:\r\n\t\t\t\t\t'It is use to determine which row is allowed to be collapsible.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'function (',\r\n\t\t\t\t\t\ttype: '',\r\n\t\t\t\t\t\tdefault: '',\r\n\t\t\t\t\t\tdescription: '',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'row',\r\n\t\t\t\t\t\ttype: 'object',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the row of each data iteration.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: ') { return boolean }',\r\n\t\t\t\t\t\ttype: '',\r\n\t\t\t\t\t\tdefault: '',\r\n\t\t\t\t\t\tdescription: '',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'collapseWhenClickRow',\r\n\t\t\t\ttype: 'boolean',\r\n\t\t\t\tdefault: 'false',\r\n\t\t\t\tdescription:\r\n\t\t\t\t\t'When true, the entire row will be the trigger to collapse the whole thing.',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'accordion',\r\n\t\t\t\ttype: 'boolean',\r\n\t\t\t\tdefault: 'false',\r\n\t\t\t\tdescription:\r\n\t\t\t\t\t'When true, the collapse will only expanded one at a time. if there are row which is collapsed then it will close automatically when another is open',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'transition',\r\n\t\t\t\ttype: 'object',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'The transition of collapsed.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'duration',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tdefault: '300',\r\n\t\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\t'It is the duration which the collapsed will transition.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'timingFunction',\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tdefault: \"'ease-in-out'\",\r\n\t\t\t\t\t\tdescription: 'It is the easing function.',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'asynchronous',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: 'false',\r\n\t\tdescription:\r\n\t\t\t'To determine if the table data will be requested when action is pagination, sort, and filters. Plus, The loader will be activated while waiting on the request.',\r\n\t},\r\n\t{\r\n\t\tname: 'onChange',\r\n\t\ttype: 'React.useCallback',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'It will be triggered when there is a action changes in the table like pagination, sort, and filters.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'React.useCallback(function (',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'event',\r\n\t\t\t\ttype: 'object',\r\n\t\t\t\tdefault: '-',\r\n\t\t\t\tdescription: 'It is the statuses of the Table.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'sort',\r\n\t\t\t\t\t\ttype: 'object',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the state of sort.',\r\n\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tname: 'orderBy',\r\n\t\t\t\t\t\t\t\ttype: 'string | null',\r\n\t\t\t\t\t\t\t\tdefault: 'null',\r\n\t\t\t\t\t\t\t\tdescription: (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\tIt is the column <b>dataIndex</b> which is ordering the\r\n\t\t\t\t\t\t\t\t\t\tsort.\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tname: 'order',\r\n\t\t\t\t\t\t\t\ttype: \"'asc' | 'desc' | null\",\r\n\t\t\t\t\t\t\t\tdefault: 'null',\r\n\t\t\t\t\t\t\t\tdescription: 'It is the order of the sort.',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'pagination',\r\n\t\t\t\t\t\ttype: 'object',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the state of pagination.',\r\n\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tname: 'currentPage',\r\n\t\t\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\t\t\tdefault: '1',\r\n\t\t\t\t\t\t\t\tdescription: 'It is the pagination current page.',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tname: 'pageSize',\r\n\t\t\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\t\t\tdefault: '0',\r\n\t\t\t\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\t\t\t'The row size of each page. 0 means no pagination which will render all the data.',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'filters',\r\n\t\t\t\t\t\ttype: 'object[]',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the state of filters.',\r\n\t\t\t\t\t\tdata: filtersProps\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: ') { return void }, [])',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n\r\nconst TableContentRows = [\r\n\t{\r\n\t\tname: 'as',\r\n\t\ttype: 'object',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'It is use to customize certain components without changing the main algorithm.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Row',\r\n\t\t\t\ttype: 'elementType',\r\n\t\t\t\tdefault: '<tr>',\r\n\t\t\t\tdescription: 'The customize table row.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'row',\r\n\t\t\t\t\t\ttype: 'object',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'The row of each data iteration.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'onClick',\r\n\t\t\t\t\t\ttype: 'function',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\tIt is the collapse handler when <b>collapsedWhenClickRow</b> is{' '}\r\n\t\t\t\t\t\t\t\t<b>true</b>.\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'data-collapsible',\r\n\t\t\t\t\t\ttype: 'boolean',\r\n\t\t\t\t\t\tdefault: 'false',\r\n\t\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\t'It is use to access the row which is collapsible and not.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'aria-expanded',\r\n\t\t\t\t\t\ttype: 'boolean',\r\n\t\t\t\t\t\tdefault: 'false',\r\n\t\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\t'It is the ARIA attribute when row is collapsed or not.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'children',\r\n\t\t\t\t\t\ttype: 'element[]',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the cells.',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Cell',\r\n\t\t\t\ttype: 'elementType',\r\n\t\t\t\tdefault: '<td>',\r\n\t\t\t\tdescription: 'The customize table cell.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'row',\r\n\t\t\t\t\t\ttype: 'object',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'The row of each data iteration.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'dataIndex',\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the dataIndex of the column.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'data-sorted',\r\n\t\t\t\t\t\ttype: 'boolean',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is use to access the cell which are sorted.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'children',\r\n\t\t\t\t\t\ttype: 'element | string',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the content of the cell.',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Column',\r\n\t\t\t\ttype: 'elementType',\r\n\t\t\t\tdefault: 'ColumnWithSortAndFilter',\r\n\t\t\t\tdescription: 'The customize table column header.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'dataIndex',\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the dataIndex of the column.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'label',\r\n\t\t\t\t\t\ttype: 'string | element',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is label or title of the column.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'data-reatable',\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\t'It is the heirarchy of the column especially in column groups.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'rowSpan',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the row span of the column in column group.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'colSpan',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the col span of the column in column group.',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Empty',\r\n\t\t\t\ttype: 'elementType',\r\n\t\t\t\tdefault: 'EmptyData',\r\n\t\t\t\tdescription: 'The customize display when table is empty.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'colSpan',\r\n\t\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the number of columns.',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'className',\r\n\t\ttype: 'string',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'The className of your table.',\r\n\t},\r\n];\r\n\r\nconst PaginationRows = [\r\n\t{\r\n\t\tname: 'as',\r\n\t\ttype: 'object',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'It is use to customize certain components without changing the main algorithm.',\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Container',\r\n\t\t\t\ttype: 'elementType',\r\n\t\t\t\tdefault: 'UlComponent',\r\n\t\t\t\tdescription: 'It is the navigation container of the pagination.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'children',\r\n\t\t\t\t\t\ttype: 'element[]',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is lists.',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'List',\r\n\t\t\t\ttype: 'elementType',\r\n\t\t\t\tdefault: 'LiComponent',\r\n\t\t\t\tdescription: 'It is the navigation of the pagination.',\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'children',\r\n\t\t\t\t\t\ttype: 'string | number',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is pagination numbers.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'active',\r\n\t\t\t\t\t\ttype: 'boolean',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\t'you will recieved true when number is the current page.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'disabled',\r\n\t\t\t\t\t\ttype: 'boolean',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription:\r\n\t\t\t\t\t\t\t'you will recieved true when the next or prev is near the current page.',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'onClick',\r\n\t\t\t\t\t\ttype: 'function',\r\n\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\tdescription: 'It is the button handler.',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'className',\r\n\t\ttype: 'string',\r\n\t\tdefault: 'rt-pagination',\r\n\t\tdescription: 'The className of your pagination.',\r\n\t},\r\n\t{\r\n\t\tname: 'nextLabel',\r\n\t\ttype: 'string | element',\r\n\t\tdefault: \"'next'\",\r\n\t\tdescription: 'The label of the next button.',\r\n\t},\r\n\t{\r\n\t\tname: 'prevLabel',\r\n\t\ttype: 'string | element',\r\n\t\tdefault: \"'prev'\",\r\n\t\tdescription: 'The label of the prev button.',\r\n\t},\r\n];\r\n\r\nconst usePaginationRows = [\r\n\t{\r\n\t\tname: 'const {',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n\t{\r\n\t\tname: 'allowPagination,',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It use to determine if pagination will be display.',\r\n\t},\r\n\t{\r\n\t\tname: 'totalPages,',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the total pages of the pagination.',\r\n\t},\r\n\t{\r\n\t\tname: 'page,',\r\n\t\ttype: 'number',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the number of the current page.',\r\n\t},\r\n\t{\r\n\t\tname: 'setPage,',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is use to assign the current page in the table state.',\r\n\t},\r\n\t{\r\n\t\tname: '} = usePagination()',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n];\r\n\r\nconst useSortRows = [\r\n\t{\r\n\t\tname: 'const {',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n\t{\r\n\t\tname: 'sortable,',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is use to determine if column is sortable.',\r\n\t},\r\n\t{\r\n\t\tname: 'sortOrder,',\r\n\t\ttype: \"'asc' | 'desc' | null\",\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the state order currently the column is in.',\r\n\t},\r\n\t{\r\n\t\tname: 'handleSort,',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription:\r\n\t\t\t'It is the sort handler that suppose to be assign in the certain element property onClick',\r\n\t},\r\n\t{\r\n\t\tname: '} = useSort(',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n\t{\r\n\t\tname: 'dataIndex',\r\n\t\ttype: 'string',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'To get the column setting.',\r\n\t},\r\n\t{\r\n\t\tname: ')',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n];\r\n\r\nconst useFilterRows = [\r\n\t{\r\n\t\tname: 'const {',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n\t{\r\n\t\tname: 'filterable,',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is use to determine if column is filterable.',\r\n\t},\r\n\t{\r\n\t\tname: 'filters,',\r\n\t\ttype: 'object[]',\r\n\t\tdefault: '-',\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tIt is the content you put in <b>Table</b> property <b>columns</b>\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tname: 'filterSearch,',\r\n\t\ttype: 'object',\r\n\t\tdefault: '-',\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tIt is the content you put in <b>Table</b> property <b>columns</b>\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tname: 'filterMultiple,',\r\n\t\ttype: 'boolean',\r\n\t\tdefault: '-',\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tIt is the content you put in <b>Table</b> property <b>columns</b>\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tname: 'filterState,',\r\n\t\ttype: 'object[ ]',\r\n\t\tdefault: '-',\r\n\t\tdescription: (\r\n\t\t\t<>It is the current state of the filters which had been applied.</>\r\n\t\t),\r\n\t\tdata: [\r\n\t\t\t{\r\n\t\t\t\tname: '[{',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\t...filtersProps,\r\n\t\t\t{\r\n\t\t\t\tname: '}]',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tdefault: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: 'setFilter,',\r\n\t\ttype: 'function',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is use to assign filters in the table state.',\r\n\t},\r\n\t{\r\n\t\tname: '} = useFilter(',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n\t{\r\n\t\tname: 'dataIndex',\r\n\t\ttype: 'string',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'To get the column setting.',\r\n\t},\r\n\t{\r\n\t\tname: ')',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n];\r\n\r\nconst useColumnRows = [\r\n\t{\r\n\t\tname: 'const',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n\t{\r\n\t\tname: 'column',\r\n\t\ttype: 'object',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'It is the setting of the column.',\r\n\t\tdata: columnsData,\r\n\t},\r\n\t{\r\n\t\tname: '= useColumn(',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n\t{\r\n\t\tname: 'dataIndex',\r\n\t\ttype: 'string',\r\n\t\tdefault: '-',\r\n\t\tdescription: 'To determine which column setting you are getting.',\r\n\t},\r\n\t{\r\n\t\tname: ')',\r\n\t\ttype: '',\r\n\t\tdefault: '',\r\n\t\tdescription: '',\r\n\t},\r\n];\r\n\r\nexport const TableAPI = () => (\r\n\t<Section title='Table' context='It is the table wrapper.'>\r\n\t\t<Table.ForAPI data={TableAPIRows} />\r\n\t</Section>\r\n);\r\n\r\nexport const TableContent = () => (\r\n\t<Section title='TableContent' context='It is the table itself.'>\r\n\t\t<Table.ForAPI data={TableContentRows} />\r\n\t</Section>\r\n);\r\n\r\nexport const Pagination = () => (\r\n\t<Section title='Pagination' context='It is the pagination.'>\r\n\t\t<Table.ForAPI data={PaginationRows} />\r\n\t</Section>\r\n);\r\n\r\nexport const Loader = () => (\r\n\t<Section\r\n\t\ttitle='Loader'\r\n\t\tcontext='It is the loader when the table is asynchronous.'>\r\n\t\t<Table.ForAPI\r\n\t\t\tdata={[\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'children',\r\n\t\t\t\t\ttype: 'element',\r\n\t\t\t\t\tdefault: '<div className=\"rt-loader\"/>',\r\n\t\t\t\t\tdescription: 'Your customize element loader.',\r\n\t\t\t\t},\r\n\t\t\t]}\r\n\t\t/>\r\n\t</Section>\r\n);\r\n\r\nexport const usePagination = () => (\r\n\t<Section\r\n\t\ttitle='usePagination'\r\n\t\tcontext='It is use to create your own component pagination.'>\r\n\t\t<Table.ForAPI data={usePaginationRows} />\r\n\t</Section>\r\n);\r\n\r\nexport const useSort = () => (\r\n\t<Section\r\n\t\ttitle='useSort'\r\n\t\tcontext='It is use to create your own component sort. it is useful in Table property as Column.'>\r\n\t\t<Table.ForAPI data={useSortRows} />\r\n\t</Section>\r\n);\r\n\r\nexport const useFilter = () => (\r\n\t<Section\r\n\t\ttitle='useFilter'\r\n\t\tcontext='It is use to create your own component filteration.'>\r\n\t\t<Table.ForAPI data={useFilterRows} />\r\n\t</Section>\r\n);\r\n\r\nexport const useColumn = () => (\r\n\t<Section\r\n\t\ttitle='useColumn'\r\n\t\tcontext='It is use to get the column settings in Table property columns.'>\r\n\t\t<Table.ForAPI data={useColumnRows} />\r\n\t</Section>\r\n);\r\n","import React from 'react';\r\nimport { Chaperone } from 'chaperone';\r\nimport { MainContainer, SidePanel, Article, HeadGear } from 'Templates';\r\nimport * as Section from './Sections';\r\nimport * as Table from './Tables';\r\nimport { useAnimateGroup } from 'Snippets/Animation';\r\n\r\nconst Reatable = () => { \r\n\tconst title = 'Reatable (not publish yet)';\r\n\tconst context = `is a react dynamic table which displays rows of data. It is so\r\n\tlight with catchy setting and cognitive design structure. reatable is not limited with \r\n\tit's design and it's features since most of it's aspects are cuztomizable so table's creativity \r\n\tis endless within its bootstrap.`;\r\n\r\n\treturn (\r\n\t\t<>  \r\n            <HeadGear>\r\n                <HeadGear.Meta \r\n\t\t\t\t\ttitle={`${title} - React Libraries | Mytabworks`}\r\n\t\t\t\t\tdescription={context.slice(0, 100)}\r\n\t\t\t\t\timage='/images/icons/icon-512x512.png'\r\n\t\t\t\t/>\r\n            </HeadGear>\r\n\t\t\t<MainContainer \r\n\t\t\t\ttitle={title}\r\n\t\t\t\tcontext={context}\r\n\t\t\t\tmain={<ReatableMain />}\r\n\t\t\t\tside={<ReatableSidePanel />}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nReatable.propTypes = {};\r\n\r\nconst ReatableMain = () => (\r\n\t<Chaperone\r\n\t\ttriggerId='Reatable'\r\n\t\tonDone={() => console.log('done')}\r\n\t\tonSkip={(e) => console.log('skip')}>\r\n\t\t<Section.Installation />\r\n\t\t<Section.Importing />\r\n\t\t<Section.GettingStarted />\r\n\t\t<Section.MutatingTableCell />\r\n\t\t<Section.ColumnGroup />\r\n\t\t<Section.TableWithPagination />\r\n\t\t<Section.SortableTable />\r\n\t\t<Section.CollapsibleTable />\r\n\t\t<Section.CollapsibleTableUsingButton />\r\n\t\t<Section.TableFiltration />\r\n\t\t<Section.AsynchronousTable />\r\n\t\t<Section.CustomizableTableInterfaces />\r\n\t\t<Section.CustomizeLoader />\r\n\t\t<Section.CustomizablePagination />\r\n\t\t<Section.CreateYourOwnPagination />\r\n\t\t<Section.ChangablePageSize />\r\n\t\t<Section.CreateFilterFirstLetters />\r\n\t\t<Section.CreateFilterBySearch />\r\n\t\t<Section.CustomizeTableContentRowAndCell />\r\n\t\t<Section.CustomizeTableContentEmptyData />\r\n\t\t<Section.CustomizeTableContentColumnHeader />\r\n\t\t<Section.PassedRowDataOnModal />\r\n\t\t<Section.TableSelection />\r\n\r\n\t\t<Article title='API'>\r\n\t\t\t<Table.TableAPI />\r\n\t\t\t<Table.TableContent />\r\n\t\t\t<Table.Pagination />\r\n\t\t\t<Table.Loader />\r\n\t\t\t<Article as='h3' title='Hooks'>\r\n\t\t\t\t<Table.usePagination />\r\n\t\t\t\t<Table.useSort />\r\n\t\t\t\t<Table.useFilter />\r\n\t\t\t\t<Table.useColumn />\r\n\t\t\t</Article>\r\n\t\t</Article>\r\n\t</Chaperone>\r\n);\r\n\r\nconst ReatableSidePanel = () => {\r\n\tconst list = [\r\n\t\t{ label: 'Installation' },\r\n\t\t{ label: 'Importing' },\r\n\t\t{\r\n\t\t\tlabel: 'Getting Started',\r\n\t\t\tsub: [\r\n\t\t\t\t{ label: 'Mutating Table Cell' },\r\n\t\t\t\t{ label: 'Column Group' },\r\n\t\t\t\t{ label: 'Table With Pagination' },\r\n\t\t\t\t{ label: 'Sortable Table' },\r\n\t\t\t\t{ label: 'Collapsible Table' },\r\n\t\t\t\t{ label: 'Collapsible Table Using Button' },\r\n\t\t\t\t{ label: 'Table Filtration' },\r\n\t\t\t\t{ label: 'Asynchronous Table' },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Customizable Table Interfaces',\r\n\t\t\tsub: [\r\n\t\t\t\t{ label: 'Customize Loader' },\r\n\t\t\t\t{ label: 'Customizable Pagination Component' },\r\n\t\t\t\t{ label: 'Create Your Own Pagination' },\r\n\t\t\t\t{ label: 'Changable Page Size' },\r\n\t\t\t\t{ label: 'Create Filter By First Letters' },\r\n\t\t\t\t{ label: 'Create Filter By Search' },\r\n\t\t\t\t{ label: 'Customize TableContent Row & Cell' },\r\n\t\t\t\t{ label: 'Customize TableContent Empty Data' },\r\n\t\t\t\t{ label: 'Customize TableContent Column Header' },\r\n\t\t\t\t{ label: 'Passing A Row Data On Modal' },\r\n\t\t\t\t{ label: 'Table Selection' },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'API',\r\n\t\t\tsub: [\r\n\t\t\t\t{ label: 'Table' },\r\n\t\t\t\t{ label: 'TableContent' },\r\n\t\t\t\t{ label: 'Pagination' },\r\n\t\t\t\t{ label: 'Loader' },\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Hooks',\r\n\t\t\t\t\tsub: [\r\n\t\t\t\t\t\t{ label: 'usePagination' },\r\n\t\t\t\t\t\t{ label: 'useSort' },\r\n\t\t\t\t\t\t{ label: 'useFilter' },\r\n\t\t\t\t\t\t{ label: 'useColumn' },\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\treturn <SidePanel.ScrollNav list={list} />;\r\n};\r\n\r\nexport default Reatable;\r\n\r\nconst Tab = () => {\r\n\tconst [register, show, toggle] = useAnimateGroup(\r\n\t\t{\r\n\t\t\tanimation: {\r\n\t\t\t\tenter: {\r\n\t\t\t\t\theight: 'auto',\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t},\r\n\t\t\t\texit: { height: 0, opacity: 0 },\r\n\t\t\t},\r\n\t\t},\r\n\t\tfalse\r\n\t);\r\n\treturn (\r\n\t\t<div className='tab'>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref='#'\r\n\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\ttoggle('one');\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tone\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref='#'\r\n\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\ttoggle('two');\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\ttwo\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<div\r\n\t\t\t\tclassName='tab-content'\r\n\t\t\t\tref={register('one', true)}\r\n\t\t\t\tstyle={{ display: show('one') ? 'block' : 'none', height: '400px' }}>\r\n\t\t\t\t1\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName='tab-content'\r\n\t\t\t\tref={register('two')}\r\n\t\t\t\tstyle={{ display: show('two') ? 'block' : 'none', height: '400px' }}>\r\n\t\t\t\t2\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n"],"sourceRoot":""}