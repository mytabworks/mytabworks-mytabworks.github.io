{"version":3,"sources":["App/Main/Pages/Neumorphism/CommonSetting.js","App/Main/Pages/Neumorphism/Topics/Table/StringCodes.js","App/Main/Pages/Neumorphism/Topics/Table/Sections.js","App/Main/Pages/Neumorphism/Topics/Table/index.js"],"names":["CommonSetting","settingsAllowed","localkey","allowConvex","allowEngrave","allowEngraveWithConcave","allowFloat","max","min","useLocal","getLocal","setLocal","settings","distance","blur","intensity","radius","border","className","id","type","checked","convex","onChange","e","prev","value","htmlFor","engrave","concave","float","map","each","key","variant","message","placement","parseInt","target","Example","Flated","Bordered","Hover","title","context","code","TableMain","TableSidePanel","table","Table","Meta","description","image","main","side","style","backgroundColor"],"mappings":"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","file":"static/js/21.3216373b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLocal } from 'Source/App/Storage/Local';\r\nimport Tooltip from 'Snippets/Tooltip'\r\n\r\nexport const CommonSetting = ({\r\n\tsettingsAllowed,\r\n\tlocalkey,\r\n\tallowConvex,\r\n\tallowEngrave,\r\n\tallowEngraveWithConcave,\r\n\tallowFloat,\r\n\tmax,\r\n\tmin\r\n}) => {\r\n\tconst { getLocal, setLocal } = useLocal(localkey);\r\n\tconst settings = getLocal();\r\n\tmax = {distance: 10, blur: 20, intensity: 100, radius: 50, border: 10, ...max}\r\n\tmin = {distance: 1, blur: 2, intensity: 10, radius: 0, border: 1, ...min}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{allowConvex && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-convex'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.convex}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tconst value = 2;\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tconvex: !prev.convex,\r\n\t\t\t\t\t\t\t\t\t\tdistance: value,\r\n\t\t\t\t\t\t\t\t\t\tblur: value * 2,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-convex'>convex</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{allowEngrave && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-engrave'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.engrave}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev, \r\n\t\t\t\t\t\t\t\t\t\tengrave: !prev.engrave\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-engrave'>engrave</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{allowEngraveWithConcave && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-engrave'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.engrave}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tconcave: prev.engrave,\r\n\t\t\t\t\t\t\t\t\t\tengrave: !prev.engrave,\r\n\t\t\t\t\t\t\t\t\t\tborder: 2,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-engrave'>engrave</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{allowFloat && (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<div className='n-switch'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='switch-float'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={settings.float}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) => ({\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tfloat: !prev.float,\r\n\t\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label className='n-switch-label' htmlFor='switch-float'>float</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)}\r\n\t\t\t{settingsAllowed.map((each) => (\r\n\t\t\t\t<li key={each}>\r\n\t\t\t\t\t<div className='px-3 py-2'>\r\n\t\t\t\t\t\t<label>{each}</label>\r\n\t\t\t\t\t\t<Tooltip variant='dark' message={`${settings[each]}`} placement=\"left\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='range'\r\n\t\t\t\t\t\t\t\tvalue={settings[each]}\r\n\t\t\t\t\t\t\t\tmin={min[each]}\r\n\t\t\t\t\t\t\t\tmax={max[each]}\r\n\t\t\t\t\t\t\t\tclassName='n-form-control'\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tconst value = parseInt(e.target.value);\r\n\t\t\t\t\t\t\t\t\tsetLocal((prev) =>\r\n\t\t\t\t\t\t\t\t\t\teach === 'distance'\r\n\t\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdistance: value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tblur: value * 2,\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t: { ...prev, [each]: value }\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nCommonSetting.propTypes = {\r\n\tlocalkey: PropTypes.string,\r\n\tsettingsAllowed: PropTypes.arrayOf(\r\n\t\tPropTypes.oneOf(['distance', 'blur', 'intensity', 'radius', 'border'])\r\n\t),\r\n};\r\n","export const Example = `<table class=\"n-table\">\r\n    <thead>\r\n        <tr><th>Name</th><th>Age</th><th>Gender</th></tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr><td>Eugine</td><td>20</td><td>male</td></tr>\r\n        <tr><td>Choi</td><td>30</td><td>male</td></tr>\r\n        <tr><td>Man Choi</td><td>10</td><td>female</td></tr>\r\n        <tr><td>Boyna</td><td>10</td><td>male</td></tr>\r\n    </tbody>\r\n</table>`\r\n\r\nexport const Flated = `<table class=\"n-table n-table-flated\">\r\n    <thead>\r\n        <tr><th>Name</th><th>Age</th><th>Gender</th></tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr><td>Eugine</td><td>20</td><td>male</td></tr>\r\n        <tr><td>Choi</td><td>30</td><td>male</td></tr>\r\n        <tr><td>Man Choi</td><td>10</td><td>female</td></tr>\r\n        <tr><td>Boyna</td><td>10</td><td>male</td></tr>\r\n    </tbody>\r\n</table>`\r\n\r\nexport const Bordered = `<table class=\"n-table n-table-bordered\">\r\n    <thead>\r\n        <tr><th>Name</th><th>Age</th><th>Gender</th></tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr><td>Eugine</td><td>20</td><td>male</td></tr>\r\n        <tr><td>Choi</td><td>30</td><td>male</td></tr>\r\n        <tr><td>Man Choi</td><td>10</td><td>female</td></tr>\r\n        <tr><td>Boyna</td><td>10</td><td>male</td></tr>\r\n    </tbody>\r\n</table>`\r\n\r\nexport const Hover = `<table class=\"n-table n-table-bordered n-table-hover\">\r\n    <thead>\r\n        <tr><th>Name</th><th>Age</th><th>Gender</th></tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr><td>Eugine</td><td>20</td><td>male</td></tr>\r\n        <tr><td>Choi</td><td>30</td><td>male</td></tr>\r\n        <tr><td>Man Choi</td><td>10</td><td>female</td></tr>\r\n        <tr><td>Boyna</td><td>10</td><td>male</td></tr>\r\n    </tbody>\r\n</table>`","import React from 'react';\r\nimport { Section, CodeReadOnly, HoverCopy } from 'Templates';\r\nimport * as code from './StringCodes';\r\nexport const Example = () => (\r\n\t<Section\r\n\t\ttitle='Example'\r\n\t\tcontext='.n-table class will do the style.'>\r\n\t\t<HoverCopy code={code.Example}>\r\n            <CodeReadOnly code={code.Example} />\r\n        </HoverCopy>\r\n        <table className=\"n-table\">\r\n            <thead>\r\n                <tr><th>Name</th><th>Age</th><th>Gender</th></tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr><td>Eugene</td><td>20</td><td>male</td></tr>\r\n                <tr><td>Choi</td><td>30</td><td>male</td></tr>\r\n                <tr><td>Man</td><td>10</td><td>female</td></tr>\r\n                <tr><td>Boyna</td><td>10</td><td>male</td></tr>\r\n            </tbody>\r\n        </table> \r\n\t</Section>\r\n);\r\n\r\nexport const Flated = () => (\r\n\t<Section\r\n\t\ttitle='Flated top table'\r\n\t\tcontext='add .n-table-flated for borders of the cells.'>\r\n\t\t<HoverCopy code={code.Flated}>\r\n            <CodeReadOnly code={code.Flated} />\r\n        </HoverCopy>\r\n        <table className=\"n-table n-table-flated\">\r\n            <thead>\r\n                <tr><th>Name</th><th>Age</th><th>Gender</th></tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr><td>Eugene</td><td>20</td><td>male</td></tr>\r\n                <tr><td>Choi</td><td>30</td><td>male</td></tr>\r\n                <tr><td>Man</td><td>10</td><td>female</td></tr>\r\n                <tr><td>Boyna</td><td>10</td><td>male</td></tr>\r\n            </tbody>\r\n        </table> \r\n\t</Section>\r\n);\r\n\r\nexport const Bordered = () => (\r\n\t<Section\r\n\t\ttitle='Bordered table'\r\n\t\tcontext='add .n-table-bordered for borders of the cells.'>\r\n\t\t<HoverCopy code={code.Bordered}>\r\n            <CodeReadOnly code={code.Bordered} />\r\n        </HoverCopy>\r\n        <table className=\"n-table n-table-bordered\">\r\n            <thead>\r\n                <tr><th>Name</th><th>Age</th><th>Gender</th></tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr><td>Eugene</td><td>20</td><td>male</td></tr>\r\n                <tr><td>Choi</td><td>30</td><td>male</td></tr>\r\n                <tr><td>Man</td><td>10</td><td>female</td></tr>\r\n                <tr><td>Boyna</td><td>10</td><td>male</td></tr>\r\n            </tbody>\r\n        </table> \r\n\t</Section>\r\n);\r\n\r\nexport const Hover = () => (\r\n\t<Section\r\n\t\ttitle='Hover table'\r\n\t\tcontext='add .n-table-hover to enable hover effect on table rows.'>\r\n\t\t<HoverCopy code={code.Hover}>\r\n            <CodeReadOnly code={code.Hover} />\r\n        </HoverCopy>\r\n        <table className=\"n-table n-table-bordered n-table-hover\">\r\n            <thead>\r\n                <tr><th>Name</th><th>Age</th><th>Gender</th></tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr><td>Eugene</td><td>20</td><td>male</td></tr>\r\n                <tr><td>Choi</td><td>30</td><td>male</td></tr>\r\n                <tr><td>Man</td><td>10</td><td>female</td></tr>\r\n                <tr><td>Boyna</td><td>10</td><td>male</td></tr>\r\n            </tbody>\r\n        </table> \r\n\t</Section>\r\n);","import React from 'react';\r\nimport { MainContainer, HeadGear } from 'Templates';\r\nimport { CommonSetting } from '../../CommonSetting';\r\nimport { localkey } from 'Source/App/Main/local-config';\r\nimport * as Section from './Sections';\r\n\r\nconst Table = () => { \r\n\tconst title = 'Table';\r\n\tconst context = `it is use to arrange data.`;\r\n\r\n\treturn (\r\n\t\t<>  \r\n            <HeadGear>\r\n                <HeadGear.Meta \r\n\t\t\t\t\ttitle={`${title} - Neumorphism Project | Mytabworks`}\r\n\t\t\t\t\tdescription={context}\r\n\t\t\t\t\timage='/images/icons/icon-512x512.png'\r\n\t\t\t\t/>\r\n            </HeadGear>\r\n\t\t\t<MainContainer \r\n\t\t\t\ttitle={title}\r\n\t\t\t\tcontext={context}\r\n\t\t\t\tmain={<TableMain />}\r\n\t\t\t\tside={<TableSidePanel />}\r\n\t\t\t\tstyle={{ backgroundColor: 'transparent' }}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nTable.propTypes = {};\r\n\r\nconst TableMain = () => (\r\n\t<>\r\n\t\t<Section.Example />\r\n\t\t<Section.Flated />\r\n\t\t<Section.Bordered />  \r\n\t\t<Section.Hover />\r\n\t</>\r\n);\r\n\r\nconst TableSidePanel = () => (\r\n\t<ul className='scroll-nav'>\r\n\t\t<li>\r\n\t\t\t<h6 className='px-3 py-2 mb-0'>Table Style</h6>\r\n\t\t</li>\r\n\t\t<CommonSetting\r\n\t\t\tlocalkey={localkey.table}\r\n\t\t\tsettingsAllowed={['distance', 'blur', 'intensity', 'border']}\r\n\t\t/>\r\n\t</ul>\r\n);\r\n\r\nexport default Table;"],"sourceRoot":""}