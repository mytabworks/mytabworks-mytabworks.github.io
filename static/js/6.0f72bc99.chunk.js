(this["webpackJsonpbitter-code"]=this["webpackJsonpbitter-code"]||[]).push([[6],{557:function(e,n,t){"use strict";var a=t(6),r=t(2),i=t(24),o=t(15),l=t(11),s=window,d=document,c=(d.documentElement,s.requestAnimationFrame||s.webkitRequestAnimationFrame||s.mozRequestAnimationFrame),g=s.cancelAnimationFrame||s.webkitCancelAnimationFrame||s.mozCancelAnimationFrame,p=function(e,n){Object.keys(n).forEach((function(t){t in e.style&&(e.style[t]=n[t])}))},u=function(e){return"string"===typeof e},m=function(e){return"function"===typeof e},b=function(e){return e&&e.nodeType===Node.ELEMENT_NODE},f=function(e,n,t,a){n.split(/\s{1,10}/).forEach((function(n){e.addEventListener(n,t,a)}))},h=function(e,n,t,a){n.split(/\s{1,10}/).forEach((function(n){e.removeEventListener(n,t,a)}))},v=function(e,n,t){if(!(n.includes(typeof e)||n.includes("node")&&b(e)))throw new Error("".concat(t," must contain the following data types (").concat(n.map((function(e){return e.toUpperCase()})).join(", "),")"))},w=function(e,n,t,a){var r={position:"absolute"};"x"!==a&&a||(r.left="".concat(n,"px")),"y"!==a&&a||(r.top="".concat(t,"px")),p(e,r)},x=function(e,n){var t=n.container,a=n.target,r=n.isDraggable,i=n.prefix,o=n.allowBoundContainer,l=e.touches&&e.touches[0]||e,s=l.clientX,d=l.clientY,c=t.getBoundingClientRect();if(!i){var g=r?a.getBoundingClientRect():{},p=g.left,u=void 0===p?0:p,m=g.top,b=void 0===m?0:m,f=g.width,h=void 0===f?0:f,v=g.height;i={left:s-u,top:d-b,width:h,height:void 0===v?0:v,containerHeight:t.scrollHeight,containerWidth:t.scrollWidth}}var w=s,x=d;return o&&(w=D(t.scrollLeft+(w-c.left)-(r?i.left:0),i),x=E(t.scrollTop+(x-c.top)-(r?i.top:0),i)),{clientX:s,clientY:d,x:w,y:x,prefix:i}},y=function(e){var n=e.target,t=e.droppable,a=e.point,r=a.x,i=a.y;n.hidden=!0;var o=d.elementFromPoint(r,i);n.hidden=!1;var l=o&&o.closest(t),s=l&&l.matches(t);return{droppableNode:o,currentDroppable:l,isOverDroppable:s}},E=function(e,n){return Math.max(0,Math.min(n.containerHeight-n.height,e))},D=function(e,n){return Math.max(0,Math.min(n.containerWidth-n.width,e))},L=function(e,n,t){return Math.min(e,Math.min(n,t>0?t:n))},N=["dragstart","dragmove","dragend","dragenter","dragover","dragexit","drop"],k=function(e,n){if(!N.includes(n))throw new SyntaxError("Dragger.".concat(e,' event type "').concat(n,'" is not recognize. supported events are ').concat(N.join(", ")))},j=function(){function e(n,t){Object(o.a)(this,e),Object.assign(this,t),this.originalEvent=n}return Object(l.a)(e,[{key:"preventDefault",value:function(){this.originalEvent.preventDefault()}},{key:"stopPropagation",value:function(){this.originalEvent.stopPropagation()}}]),e}();t.d(n,"a",(function(){return C}));var C=function(){function e(n,t){var a=this;Object(o.a)(this,e),this.emitters={};var i,l=document;this.container=u(n)?(i=n,d.querySelector(i)):b(n)?n:l.body,this.options=Object(r.a)({},{allowBoundContainer:!0,allowExactDraggable:!1,autoscroll:!1,autoscrollSensitivity:20,eventListenerOption:!1},{},t),Object.keys(this.options).forEach((function(e){v(a.options[e],["autoscrollSensitivity"===e?"number":["droppable","draggable","axis"].includes(e)?"string":"boolean"],"Dragger options `".concat(e,"`"))})),v(n,["string","node"],"Dragger argument `0`"),v(this.container,["node"],"Dragger this.container is null check carefully what you input in argument `0`"),this.init()}return Object(l.a)(e,null,[{key:"create",value:function(){for(var n=arguments.length,t=new Array(n),a=0;a<n;a++)t[a]=arguments[a];return Object(i.a)(e,t)}}]),Object(l.a)(e,[{key:"init",value:function(){var e=this,n=this.container,t=this.options,i=t.axis,o=t.draggable,l=t.droppable,s=t.allowBoundContainer,u=t.allowExactDraggable,b=t.autoscroll,v=t.autoscrollSensitivity,N=t.eventListenerOption;this.initHandler=function(t){var k,C,O=e.emitters,X=O.dragstart,T=O.dragmove,A=O.dragend,I=O.dragenter,B=O.dragover,F=O.dragexit,R=O.drop,S=!u&&t.target.closest(o)||t.target,Y=S.matches(o),M={container:n,target:S,isDraggable:Y,allowBoundContainer:s},W=x(t,M),P=W.x,q=W.y,H=Object(a.a)(W,["x","y"]),G={type:"dragstart",target:S,container:n,isDraggableElement:Y,startX:P,startY:q,moveX:P,moveY:q,endX:P,endY:q,clientX:H.clientX,clientY:H.clientY};M.prefix=H.prefix,m(X)&&X.call(n,new j(t,G)),Y&&w(S,P,q,i);var U=function(e){var t=x(e,M),o=t.clientX,s=t.clientY,u=Object(a.a)(t,["clientX","clientY"]);G.clientX=o,G.clientY=s;var f=G.moveX=G.endX=u.x,h=G.moveY=G.endY=u.y;if(Y){if(w(S,f,h,i),b){var N=v;C&&g(C);C=c((function e(){var t=n.getBoundingClientRect(),a=M.prefix;(function(e){for(var n=[],t=e;t&&t!==d;t=t.parentNode)(t.scrollHeight>t.clientHeight||t.scrollWidth>t.clientWidth)&&n.push(t);return n})(n).reduce((function(e,r,i,l){var d="HTML"!==r.nodeName?r.getBoundingClientRect():{top:0,left:0},c=d.top,g=d.left,u=r.scrollTop,m=r.scrollLeft,b=r.scrollHeight,v=r.scrollWidth,w=r.clientHeight,x=r.clientWidth,y={},k=r===n,j=c+N,C=c+w-N,O=g+N,X=g+x-N,T=j-s,A=s-C,I=O-o,B=o-X,F=h+a.top,R=f+a.left,Y=t.top,M=t.top+t.height,W=t.left,P=t.left+t.width,q=s<j&&u>0&&(k?F>0:s>Y),H=s>C&&u<b-w&&(k?F<b:s<M),G=o<O&&m>0&&(k?R>0:o>W),U=o>X&&m<v-x&&(k?R<v:o<P),z=q||H||G||U;if(q){var J=L(N,T,k?F-N:s-Y);u-=J,h-=J,y.top="".concat(E(h,a),"px")}else if(H){var _=L(N,A,k?b-F:M-s);u+=_,h+=_,y.top="".concat(E(h,a),"px")}if(G){var $=L(N,I,k?R-N:o-W);m-=$,f-=$,y.left="".concat(D(f,a),"px")}else if(U){var K=L(N,B,k?v-R:P-o);m+=K,f+=K,y.left="".concat(D(f,a),"px")}return z&&(r.scrollTop=u,r.scrollLeft=m,p(S,y),l.slice(1)),e||z}),!1)&&(C=c(e))}))}if(l){var O=y({target:S,droppable:l,point:{x:G.clientX,y:G.clientY}}),X=O.currentDroppable,A=O.droppableNode;O.isOverDroppable&&(k!==X&&(m(I)&&I.call(X,new j(e,Object(r.a)({},G,{type:"dragenter",currentDroppable:X,droppable:A}))),k&&m(F)&&F.call(X,new j(e,Object(r.a)({},G,{type:"dragexit",currentDroppable:k})))),k=X,m(B)&&B.call(n,new j(e,Object(r.a)({},G,{type:"dragover",currentDroppable:X,droppable:A}))))}}m(T)&&T.call(n,new j(e,Object(r.a)({},G,{type:"dragmove"})))};f(n,"mousemove touchmove",U,N);f(n,"mouseup touchend",(function e(t){if(b&&C&&g(C),l&&Y){Y&&p(S,{position:null,left:null,top:null});var a=y({target:S,droppable:l,point:{x:G.clientX,y:G.clientY}}),i=a.currentDroppable,o=a.droppableNode;a.isOverDroppable&&m(R)&&R.call(i,new j(t,Object(r.a)({},G,{type:"drop",currentDroppable:i,droppable:o})))}m(A)&&A.call(n,new j(t,Object(r.a)({},G,{type:"dragend"}))),h(n,"mousemove touchmove",U,N),h(n,"mouseup touchend",e,N)}),N)},f(n,"mousedown touchstart",this.initHandler,N)}},{key:"on",value:function(e,n){k("on",e),this.emitters[e]=n}},{key:"off",value:function(e){k("off",e),delete this.emitters[e]}},{key:"destroy",value:function(){h(this.container,"mousedown touchstart",this.initHandler,this.options.eventListenerOption)}}]),e}()},566:function(e,n,t){"use strict";t.d(n,"e",(function(){return a})),t.d(n,"d",(function(){return r})),t.d(n,"a",(function(){return i})),t.d(n,"f",(function(){return o})),t.d(n,"c",(function(){return l})),t.d(n,"b",(function(){return s})),t.d(n,"g",(function(){return d}));var a='import Dragger from "draggerjs"',r={html:'<div className="drag-container" id="drag-getting-started">  \n    <div className="drag-around n-border-color">\n        <div className="draggable-box center n-flat">\n            <h1>Drag Me</h1>\n        </div> \n    </div>\n</div>',css:".drag-container {  \n    display: flex;\n    flex-wrap: wrap;\n    height: 250px;  \n    position: relative;\n}\n.drag-container > .drag-around {\n    flex: 1 1;\n    width: 100%; \n    border: 2px dashed #fff;\n    border-radius: 15px;\n    padding: 15px;\n    transition: box-shadow 300ms ease-in;\n}\n.drag-container .draggable-box {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    min-width: 50px;\n    min-height: 50px;\n    padding: 0 10px; \n    border-radius: 10px;\n    transition: box-shadow 300ms ease-in;\n    cursor: grab;\n}\n.drag-container .draggable-box > h1 { \n    margin-bottom: 5px;\n}\n.drag-container .grabbed {\n    cursor: grabbing;\n    margin: 0;\n}\n.draggable-box.center {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}",js:"const dragger = new Dragger('#drag-getting-started', {\n    draggable: '.draggable-box'\n})\ndragger.on('dragstart', (e) => { \n    const target = e.target\n    if(e.isDraggableElement) {\n        // prevent mobile from scrolling\n        // when dragging draggable element\n        e.preventDefault()\n        target.classList.add('grabbed')\n        if(target.classList.contains('center')) {\n            target.classList.remove('center')\n        }\n    }\n})\ndragger.on('dragend', (e) => {\n    if(e.isDraggableElement) {  \n        e.target.classList.remove('grabbed') \n    }\n})"},i={html:'<div className="drag-container drag-long-ground" id="drag-autoscroll">  \n    <div className="drag-around n-border-color">\n        <div className="draggable-box center n-flat">\n            <h1>Drag Me</h1>\n        </div> \n    </div>\n</div>',css:".drag-container {  \n    display: flex;\n    flex-wrap: wrap;\n    height: 250px;  \n    position: relative;\n}\n.drag-long-ground {\n    display: block;\n    overflow: scroll;\n    -webkit-overflow-scrolling: touch;\n}\n.drag-long-ground > .drag-around {\n    width: 1250px;\n    height: 1250px;\n}\n.drag-container > .drag-around {\n    flex: 1 1;\n    width: 100%; \n    border: 2px dashed #fff;\n    border-radius: 15px;\n    padding: 15px;\n    transition: box-shadow 300ms ease-in;\n}\n.drag-container .draggable-box {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    min-width: 50px;\n    min-height: 50px;\n    padding: 0 10px; \n    border-radius: 10px;\n    transition: box-shadow 300ms ease-in;\n    cursor: grab;\n}\n.drag-container .draggable-box > h1 { \n    margin-bottom: 5px;\n}\n.drag-container .grabbed {\n    cursor: grabbing;\n    margin: 0;\n}\n.draggable-box.center {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}",js:"const dragger = new Dragger('#drag-autoscroll', {\n    draggable: '.draggable-box',\n    autoscroll: true\n})\ndragger.on('dragstart', (e) => { \n    const target = e.target\n    if(e.isDraggableElement) {\n        // prevent mobile from scrolling\n        // when dragging draggable element\n        e.preventDefault()\n        target.classList.add('grabbed')\n        if(target.classList.contains('center')) {\n            target.classList.remove('center')\n        }\n    }\n})\ndragger.on('dragend', (e) => {\n    if(e.isDraggableElement) {  \n        e.target.classList.remove('grabbed') \n    }\n})"},o={html:'<div className="drag-drawer" id="drag-raw-drag">  \n<div className="drag-drawer-content n-no-shadow n-engrave"> \n    <nav className="n-nav n-nav-flat n-nav-column">\n        <a className="n-nav-link" href="#">link-1</a>\n        <a className="n-nav-link" href="#">link-2</a>\n        <a className="n-nav-link" href="#">link-3</a>\n    </nav> \n</div>\n</div>',css:'.drag-drawer {\n    display: block;\n    position: relative;\n    height: 250px;\n    border: 1px solid #dcdcdc;\n    overflow: hidden;\n}\n.drag-drawer-content {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: -250px;\n    width: 250px;\n    height: 100%;\n    padding: 20px 25px;\n}\n.drag-drawer-content:before {\n    content: "\\3009";\n    display: block;\n    position: absolute;\n    left: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    padding: 15px 10px;\n    font-size: 30px;\n    transition: opacity 300ms ease-in-out;\n}\n.drag-drawer-content.draw-full:before {\n    opacity: 0;\n}\n.drag-drawer-content.draw-full:after {\n    content: "";\n    display: block;\n    position: absolute;\n    left: 100%;\n    top: 0;\n    width: 100%;\n    height: 100%; \n}\n.draw-transition {\n    transition: left 300ms ease-in-out;\n}\n.draw-full {\n    left: 0;\n}',js:"let cleanUp\nlet isComplete = false \nconst target = document.querySelector('.drag-drawer-content')\nconst dragger = new Dragger('#drag-raw-drag')\ndragger.on('dragstart', (e) => { \n    if(target === e.target) {\n        if(e.target.nodeName !== 'A') {\n            e.preventDefault()\n        }\n        target.style.left = (isComplete ? 0 : -target.clientWidth) + 'px'\n        target.classList.remove('draw-transition')  \n        clearTimeout(cleanUp)\n    }\n})\ndragger.on('dragmove', (e) => {    \n    if(target === e.target) {\n        const width = target.clientWidth  \n        const distance = (isComplete ? e.moveX - e.startX : (e.moveX - e.startX) - width)\n        target.style.left = (0 > distance ? -width > distance ? -width : distance : 0) + 'px' \n    }\n}) \ndragger.on('dragend', (e) => { \n    if(target === e.target) {\n        const width = target.clientWidth \n        const distance = isComplete ? (e.endX - e.startX) + width :  e.endX - e.startX \n        if(distance > target.clientWidth/2) {\n            target.classList.add('draw-full')\n            isComplete = true\n        } else {  \n            target.classList.remove('draw-full') \n            isComplete = false\n        }\n        target.style.left = null\n        target.classList.add('draw-transition') \n        cleanUp = setTimeout(() => {\n            target.classList.remove('draw-transition')\n        }, 300) \n    }\n})"},l={html:'<div className="drag-container" id="drag-droppable">  \n    <div className="droppable-area n-no-shadow n-border-color">\n        <div className="draggable-box n-no-shadow n-flat">\n            <h1>1</h1>\n        </div>\n        <div className="draggable-box n-no-shadow n-flat">\n            <h1>2</h1>\n        </div>\n    </div>\n    <div className="droppable-area n-no-shadow n-border-color"></div>\n</div>',css:".drag-container {  \n    display: flex;\n    flex-wrap: wrap;\n    height: 250px;  \n    position: relative;\n}\n.drag-container > .droppable-area {\n    flex: 1 1;\n    width: 100%; \n    border: 2px dashed #fff;\n    border-radius: 15px;\n    padding: 15px;\n    transition: box-shadow 300ms ease-in;\n}\n.drag-container > .droppable-area + .droppable-area {\n    margin-left: 15px\n}\n.drag-container .draggable-box {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    min-width: 50px;\n    min-height: 50px;\n    padding: 0 10px; \n    border-radius: 10px;\n    transition: box-shadow 300ms ease-in;\n    cursor: grab;\n}\n.drag-container .draggable-box[hidden] {\n    display: none !important;\n}\n.drag-container .draggable-box > h1 { \n    margin-bottom: 5px;\n}\n.drag-container .droppable-area > .draggable-box:not(:last-child) {\n    margin-right: 5px;\n}\n.drag-container .grabbed {\n    cursor: grabbing;\n    margin: 0;\n}",js:"const dragger = new Dragger('#drag-droppable', {\n    draggable: '.draggable-box',\n    droppable: '.droppable-area',\n})\ndragger.on('dragstart', (e) => {\n    const target = e.target\n    if(e.isDraggableElement) {\n        e.preventDefault() \n        target.classList.add('grabbed')\n        target.classList.add('n-float')\n        target.classList.remove('n-flat')\n    }\n   \n})\ndragger.on('dragend', (e) => {\n    const target = e.target\n    if(e.isDraggableElement) { \n        /*async it to show transition*/\n        setTimeout(() => {\n            target.classList.add('n-flat')\n            target.classList.remove('n-float')\n            target.classList.remove('grabbed')\n        },0)\n    }\n})\ndragger.on('dragenter', (e) => {\n    if(e.isDraggableElement && e.target.parentElement !== e.currentDroppable) { \n        e.currentDroppable.classList.add('n-engrave') \n    }\n})\ndragger.on('dragexit', (e) => {\n    if(e.isDraggableElement && e.target.parentElement !== e.currentDroppable) { \n        e.currentDroppable.classList.remove('n-engrave') \n    }\n})\ndragger.on('drop', (e) => {\n    if(e.isDraggableElement) {\n        if(e.target.parentElement !== e.currentDroppable)\n            e.currentDroppable.appendChild(e.target) \n        e.currentDroppable.classList.remove('n-engrave') \n    }\n})"},s={html:'<div id="drag-cloning" className="drag-container">  \n    <div className="droppable-area n-no-shadow n-border-color">\n        <div className="draggable-box n-no-shadow n-flat" id="draggable-1">\n            <h1>1</h1>\n        </div>\n        <div className="draggable-box n-no-shadow n-flat" id="draggable-2">\n            <h1>2</h1>\n        </div> \n    </div>\n    <div className="droppable-area n-no-shadow n-border-color">\n        <div className="draggable-box n-no-shadow n-flat" id="draggable-3">\n            <h1>3</h1>\n        </div>\n        <div className="draggable-box n-no-shadow n-flat" id="draggable-4">\n            <h1>4</h1>\n        </div>\n    </div>\n</div>',css:".drag-container {  \n    display: flex;\n    flex-wrap: wrap;\n    height: 250px;  \n    position: relative;\n}\n.drag-container > .droppable-area {\n    flex: 1 1;\n    width: 100%; \n    border: 2px dashed #fff;\n    border-radius: 15px;\n    padding: 15px;\n    transition: box-shadow 300ms ease-in;\n}\n.drag-container > .droppable-area + .droppable-area {\n    margin-left: 15px\n}\n.drag-container .draggable-box {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    min-width: 50px;\n    min-height: 50px;\n    padding: 0 10px; \n    border-radius: 10px;\n    transition: box-shadow 300ms ease-in;\n    cursor: grab;\n}\n.drag-container .draggable-box[hidden] {\n    display: none !important;\n}\n.drag-container .drag-clone > h1 {\n    visibility: hidden;\n}\n.drag-container .draggable-box > h1 { \n    margin-bottom: 5px;\n}\n.drag-container .droppable-area > .draggable-box:not(:last-child) {\n    margin-right: 5px;\n}\n.drag-container .grabbed {\n    cursor: grabbing;\n    margin: 0;\n}",js:"        let clone\nconst cloningAlgorithm = (e, elementToInsert) => {\n    const droppable = e.droppable && e.droppable.closest('.draggable-box')\n    const currentDroppable = e.currentDroppable \n    /*prevent cloning in the same droppable-area*/\n    if(e.target.closest('.droppable-area') === currentDroppable) return;\n    if(droppable && currentDroppable \n        && droppable !== elementToInsert \n        && droppable !== currentDroppable) {\n        const droppableRect = droppable.getBoundingClientRect()\n        /*the clone positioning is base on x axis*/\n        const isBefore = e.clientX - droppableRect.left < droppableRect.width/2\n        const next = droppable.nextElementSibling\n        if(!next && !isBefore) {\n            currentDroppable.appendChild(elementToInsert)\n        }\n        currentDroppable.insertBefore(elementToInsert, isBefore ? droppable : next )\n    } else if(currentDroppable && e.droppable === currentDroppable){\n        currentDroppable.appendChild(elementToInsert)\n    }\n}\n\nconst dragger = new Dragger('#drag-cloning', {\n    draggable: '.draggable-box',\n    droppable: '.droppable-area',\n})\ndragger.on('dragstart', (e) => {\n    const target = e.target\n    if(e.isDraggableElement) {\n        e.preventDefault() \n        clone = target.cloneNode(true)\n        clone.classList.add('drag-clone')\n        target.classList.add('grabbed')\n        target.classList.add('n-float')\n        target.classList.remove('n-flat') \n        \n    }\n   \n})\ndragger.on('dragover', (e) => { \n    cloningAlgorithm(e, clone)\n}) \ndragger.on('dragenter', (e) => {\n    if(e.isDraggableElement && e.target.parentElement !== e.currentDroppable) { \n        e.currentDroppable.classList.add('n-engrave') \n    } \n})\ndragger.on('dragexit', (e) => {\n    if(e.isDraggableElement && e.target.parentElement !== e.currentDroppable) { \n        e.currentDroppable.classList.remove('n-engrave') \n    }\n    /*remove clone when exiting*/\n    e.currentDroppable.contains(clone) && clone.remove()\n})\ndragger.on('drop', (e) => {\n    if(e.isDraggableElement) { \n        cloningAlgorithm(e, e.target) \n        e.currentDroppable.classList.remove('n-engrave') \n    } \n})\ndragger.on('dragend', (e) => {\n    const target = e.target\n    if(e.isDraggableElement) { \n        clone && clone.remove()\n        /*async it to show transition*/\n        setTimeout(() => {\n            target.classList.add('n-flat')\n            target.classList.remove('n-float')\n            target.classList.remove('grabbed')\n        },0)\n    }\n})"},d={html:'<ul className="switching-area">\n    <li className="switching-box n-no-shadow n-flat-low" data-index="1">\n        <h5>Apple</h5>\n    </li>\n    <li className="switching-box n-no-shadow n-flat-low" data-index="2">\n        <h5>Peach</h5>\n    </li> \n    <li className="switching-box n-no-shadow n-flat-low" data-index="3">\n        <h5>Orange</h5>\n    </li>\n    <li className="switching-box n-no-shadow n-flat-low" data-index="4">\n        <h5>Grapes</h5>\n    </li>\n    <li className="switching-box n-no-shadow n-flat-low" data-index="5">\n        <h5>Banana</h5>\n    </li>\n</ul>',css:".switching-area {\n    display: block;\n    position: relative;\n    width: 100%;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n.switching-area > .switching-box {\n    display: flex;  \n    align-items: center; \n    position: relative;\n    width: 100%;\n    min-height: 50px;\n    padding: 0 10px; \n    border-radius: 7px;\n    transition: box-shadow 300ms ease-in;\n    cursor: grab;\n}\n.switching-area > .switching-box[hidden] {\n    display: none !important;\n}\n.switching-area > .switching-box:not(.drag-clone):before {\n    content: attr(data-index);\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translate(-50%, -50%);\n}\n.switching-area > .switching-box:not(:last-child) {\n    margin-bottom: 7px;\n}\n.switching-area > .drag-clone > *{\n    visibility: hidden;\n}\n.switching-area .grabbed {\n    cursor: grabbing;\n    margin: 0;\n    z-index: 1;\n}",js:"let clone\nconst switchingAlgorithm = (e, elementToInsert) => {\n    const droppable = e.droppable && e.droppable.closest('.switching-box')\n    const currentDroppable = e.currentDroppable  \n    if(droppable && currentDroppable \n        && droppable !== elementToInsert \n        && droppable !== currentDroppable) {\n\n        const droppableRect = droppable.getBoundingClientRect()\n        const isFirstChild = currentDroppable.firstElementChild === droppable\n        const isLastChild = currentDroppable.lastElementChild === droppable\n        const divident = isFirstChild ? 0 : isLastChild ? droppableRect.height : 2\n        /*the clone positioning is base on y axis*/\n        const isBefore = e.clientY - droppableRect.top < droppableRect.height/divident\n        const next = droppable.nextElementSibling\n        if(!next && !isBefore) {\n            currentDroppable.appendChild(elementToInsert)\n        }\n        currentDroppable.insertBefore(elementToInsert, isBefore ? droppable : next )\n    }\n}\n\nconst dragger = new Dragger('.switching-area', {\n    draggable: '.switching-box',\n    droppable: '.switching-area',\n    axis: 'y',\n})\n\ndragger.on('dragstart', (e) => {\n    const target = e.target\n    if(e.isDraggableElement) {\n        e.preventDefault() \n        clone && clone.remove()\n        clone = target.cloneNode(true)\n        clone.classList.add('drag-clone')\n        clone.classList.remove('n-flat-low')\n        target.closest('.switching-area').insertBefore(clone, e.target )\n        target.classList.add('grabbed')\n        target.classList.add('n-float-low')\n        target.classList.remove('n-flat-low')  \n    }\n   \n})\ndragger.on('dragover', (e) => { \n    switchingAlgorithm(e, clone)\n})  \ndragger.on('drop', (e) => {\n    const target = e.target  \n    if(e.isDraggableElement) {  \n        switchingAlgorithm(e, target) \n    } \n})\ndragger.on('dragend', (e) => {\n    const target = e.target\n    if(e.isDraggableElement) { \n        clone.remove()\n        Array.from(e.container.children)\n            .forEach((each, i) => each.dataset.index = i + 1)\n        setTimeout(() => {\n            target.classList.add('n-flat')\n            target.classList.remove('n-float')\n            target.classList.remove('grabbed')\n        }, 0)\n    }\n})"}},630:function(e,n,t){var a=t(727),r=/^\.\/(?:\w{1,50}\/index|\w{1,50})\.js$/,i=a.keys().filter((function(e){return r.test(e)})).map(a);e.exports=i.reduce((function(e,n){return Object.keys(n).reduce((function(e,t){return e[t]=n[t],e}),e)}),{})},727:function(e,n,t){var a={"./Autoscroll.js":728,"./Cloning.js":729,"./Common.js":730,"./Droppable.js":731,"./GettingStarted.js":732,"./RawDrag.js":733,"./Switching.js":734,"./index.js":630};function r(e){var n=i(e);return t(n)}function i(e){if(!t.o(a,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=i,e.exports=r,r.id=727},728:function(e,n,t){"use strict";t.r(n),t.d(n,"Autoscroll",(function(){return s}));var a=t(0),r=t.n(a),i=t(557),o=t(13),l=t(566),s=function(){return Object(a.useEffect)((function(){var e=new i.a("#drag-autoscroll",{draggable:".draggable-box",autoscroll:!0});return e.on("dragstart",(function(e){var n=e.target;e.isDraggableElement&&(e.preventDefault(),n.classList.add("grabbed"),n.classList.contains("center")&&n.classList.remove("center"))})),e.on("dragend",(function(e){e.isDraggableElement&&e.target.classList.remove("grabbed")})),function(){return e.destroy()}}),[]),r.a.createElement(r.a.Fragment,null,r.a.createElement(o.m,{readonly:!0,title:"Autoscroll",context:r.a.createElement(r.a.Fragment,null,"you can easily apply autoscroll in the draggerjs just add ",r.a.createElement("b",null,"autoscroll: true")," in the options."),code:l.a},r.a.createElement("div",{className:"drag-container drag-long-ground",id:"drag-autoscroll","data-example":!0},r.a.createElement("div",{className:"drag-around n-border-color"},r.a.createElement("div",{className:"draggable-box center n-flat"},r.a.createElement("h1",null,"Drag Me"))))))}},729:function(e,n,t){"use strict";t.r(n),t.d(n,"Cloning",(function(){return s}));var a=t(0),r=t.n(a),i=t(557),o=t(13),l=t(566),s=function(){return Object(a.useEffect)((function(){var e,n=function(e,n){var t=e.droppable&&e.droppable.closest(".draggable-box"),a=e.currentDroppable;if(e.target.closest(".droppable-area")!==a)if(t&&a&&t!==n&&t!==a){var r=t.getBoundingClientRect(),i=e.clientX-r.left<r.width/2,o=t.nextElementSibling;o||i||a.appendChild(n),a.insertBefore(n,i?t:o)}else a&&e.droppable===a&&a.appendChild(n)},t=new i.a("#drag-cloning",{draggable:".draggable-box",droppable:".droppable-area"});return t.on("dragstart",(function(n){var t=n.target;n.isDraggableElement&&(n.preventDefault(),(e=t.cloneNode(!0)).classList.add("drag-clone"),t.classList.add("grabbed"),t.classList.add("n-float"),t.classList.remove("n-flat"))})),t.on("dragover",(function(t){n(t,e)})),t.on("dragenter",(function(e){e.isDraggableElement&&e.target.parentElement!==e.currentDroppable&&e.currentDroppable.classList.add("n-engrave")})),t.on("dragexit",(function(n){n.isDraggableElement&&n.target.parentElement!==n.currentDroppable&&n.currentDroppable.classList.remove("n-engrave"),n.currentDroppable.contains(e)&&e.remove()})),t.on("drop",(function(e){e.isDraggableElement&&(n(e,e.target),e.currentDroppable.classList.remove("n-engrave"))})),t.on("dragend",(function(n){var t=n.target;n.isDraggableElement&&(e&&e.remove(),setTimeout((function(){t.classList.add("n-flat"),t.classList.remove("n-float"),t.classList.remove("grabbed")}),0))})),function(){return t.destroy()}}),[]),r.a.createElement(r.a.Fragment,null,r.a.createElement(o.m,{readonly:!0,title:"Cloning",context:"you can clone as well.",code:l.b},r.a.createElement("div",{id:"drag-cloning",className:"drag-container","data-example":!0},r.a.createElement("div",{className:"droppable-area n-no-shadow n-border-color"},r.a.createElement("div",{className:"draggable-box n-no-shadow n-flat",id:"draggable-1"},r.a.createElement("h1",null,"1")),r.a.createElement("div",{className:"draggable-box n-no-shadow n-flat",id:"draggable-2"},r.a.createElement("h1",null,"2"))),r.a.createElement("div",{className:"droppable-area n-no-shadow n-border-color"},r.a.createElement("div",{className:"draggable-box n-no-shadow n-flat",id:"draggable-3"},r.a.createElement("h1",null,"3")),r.a.createElement("div",{className:"draggable-box n-no-shadow n-flat",id:"draggable-4"},r.a.createElement("h1",null,"4")))),r.a.createElement(o.k,{variant:"warning",title:"remember",context:r.a.createElement(r.a.Fragment,null,"When using ",r.a.createElement("b",null,"droppable")," make sure to add ",r.a.createElement("b",null,"[hidden] ","{"," display: none !important; ","}")," in your stylesheet. due to some changes in browsers which ",r.a.createElement("b",null,"hidden")," property gets overridden."),style:{marginTop:"20px"}})))}},730:function(e,n,t){"use strict";t.r(n),t.d(n,"Installation",(function(){return l})),t.d(n,"Importing",(function(){return s}));var a=t(0),r=t.n(a),i=t(13),o=t(566),l=function(){return r.a.createElement(i.m,{readonly:!0,title:"Installation(not publish yet)",code:"npm i draggerjs",language:"js",theme:{plain:{color:"rgb(215,215,215)",backgroundColor:"rgb(86,86,86)"},styles:[]}})},s=function(){return r.a.createElement(i.m,{readonly:!0,title:"Imports",code:o.e})}},731:function(e,n,t){"use strict";t.r(n),t.d(n,"Droppable",(function(){return s}));var a=t(0),r=t.n(a),i=t(557),o=t(13),l=t(566),s=function(){return Object(a.useEffect)((function(){var e=new i.a("#drag-droppable",{draggable:".draggable-box",droppable:".droppable-area"});return e.on("dragstart",(function(e){var n=e.target;e.isDraggableElement&&(e.preventDefault(),n.classList.add("grabbed"),n.classList.add("n-float"),n.classList.remove("n-flat"))})),e.on("dragend",(function(e){var n=e.target;e.isDraggableElement&&setTimeout((function(){n.classList.add("n-flat"),n.classList.remove("n-float"),n.classList.remove("grabbed")}),0)})),e.on("dragenter",(function(e){e.isDraggableElement&&e.target.parentElement!==e.currentDroppable&&e.currentDroppable.classList.add("n-engrave")})),e.on("dragexit",(function(e){e.isDraggableElement&&e.target.parentElement!==e.currentDroppable&&e.currentDroppable.classList.remove("n-engrave")})),e.on("drop",(function(e){e.isDraggableElement&&(e.target.parentElement!==e.currentDroppable&&e.currentDroppable.appendChild(e.target),e.currentDroppable.classList.remove("n-engrave"))})),function(){return e.destroy()}}),[]),r.a.createElement(r.a.Fragment,null,r.a.createElement(o.m,{readonly:!0,title:"Droppable",context:"you can use droppable as well.",code:l.c},r.a.createElement("div",{id:"drag-droppable",className:"drag-container","data-example":!0},r.a.createElement("div",{className:"droppable-area n-no-shadow n-border-color"},r.a.createElement("div",{className:"draggable-box n-no-shadow n-flat"},r.a.createElement("h1",null,"1")),r.a.createElement("div",{className:"draggable-box n-no-shadow n-flat"},r.a.createElement("h1",null,"2"))),r.a.createElement("div",{className:"droppable-area n-no-shadow n-border-color"})),r.a.createElement(o.k,{variant:"warning",title:"remember",context:r.a.createElement(r.a.Fragment,null,"When using ",r.a.createElement("b",null,"droppable")," make sure to add ",r.a.createElement("b",null,"[hidden] ","{"," display: none !important; ","}")," in your stylesheet. due to some changes in browsers which ",r.a.createElement("b",null,"hidden")," property gets overridden."),style:{marginTop:"20px"}})))}},732:function(e,n,t){"use strict";t.r(n),t.d(n,"GettingStarted",(function(){return s}));var a=t(0),r=t.n(a),i=t(557),o=t(13),l=t(566),s=function(){return Object(a.useEffect)((function(){var e=new i.a("#drag-getting-started",{draggable:".draggable-box"});return e.on("dragstart",(function(e){var n=e.target;e.isDraggableElement&&(e.preventDefault(),n.classList.add("grabbed"),n.classList.contains("center")&&n.classList.remove("center"))})),e.on("dragend",(function(e){e.isDraggableElement&&e.target.classList.remove("grabbed")})),function(){return e.destroy()}}),[]),r.a.createElement(r.a.Fragment,null,r.a.createElement(o.m,{readonly:!0,title:"Getting Started",context:"we are getting started using draggerjs.",code:l.d},r.a.createElement("div",{className:"drag-container",id:"drag-getting-started","data-example":!0},r.a.createElement("div",{className:"drag-around n-border-color"},r.a.createElement("div",{className:"draggable-box center n-flat"},r.a.createElement("h1",null,"Drag Me"))))))}},733:function(e,n,t){"use strict";t.r(n),t.d(n,"RawDrag",(function(){return s}));var a=t(0),r=t.n(a),i=t(557),o=t(13),l=t(566),s=function(){return Object(a.useEffect)((function(){var e,n=!1,t=document.querySelector(".drag-drawer-content"),a=new i.a("#drag-raw-drag");return a.on("dragstart",(function(a){t===a.target&&("A"!==a.target.nodeName&&a.preventDefault(),t.style.left=(n?0:-t.clientWidth)+"px",t.classList.remove("draw-transition"),clearTimeout(e))})),a.on("dragmove",(function(e){if(t===e.target){var a=t.clientWidth,r=n?e.moveX-e.startX:e.moveX-e.startX-a;t.style.left=(0>r?-a>r?-a:r:0)+"px"}})),a.on("dragend",(function(a){if(t===a.target){var r=t.clientWidth;(n?a.endX-a.startX+r:a.endX-a.startX)>t.clientWidth/2?(t.classList.add("draw-full"),n=!0):(t.classList.remove("draw-full"),n=!1),t.style.left=null,t.classList.add("draw-transition"),e=setTimeout((function(){t.classList.remove("draw-transition")}),300)}})),function(){clearTimeout(e),a.destroy()}}),[]),r.a.createElement(r.a.Fragment,null,r.a.createElement(o.m,{readonly:!0,title:"Raw Draggable",context:"you can create with your own drag mechanics.",code:l.f},r.a.createElement("div",{className:"drag-drawer n-bordered",id:"drag-raw-drag","data-example":!0},r.a.createElement("div",{className:"drag-drawer-content n-no-shadow n-engrave"},r.a.createElement("nav",{className:"n-nav n-nav-flat n-nav-column",onClick:function(e){return e.preventDefault()}},r.a.createElement("a",{className:"n-nav-link",href:"#"},"link-1"),r.a.createElement("a",{className:"n-nav-link",href:"#"},"link-2"),r.a.createElement("a",{className:"n-nav-link",href:"#"},"link-3"))))))}},734:function(e,n,t){"use strict";t.r(n),t.d(n,"Switching",(function(){return s}));var a=t(0),r=t.n(a),i=t(557),o=t(13),l=t(566),s=function(){return Object(a.useEffect)((function(){var e,n=function(e,n){var t=e.droppable&&e.droppable.closest(".switching-box"),a=e.currentDroppable;if(t&&a&&t!==n&&t!==a){var r=t.getBoundingClientRect(),i=a.firstElementChild===t,o=a.lastElementChild===t,l=i?0:o?r.height:2,s=e.clientY-r.top<r.height/l,d=t.nextElementSibling;d||s||a.appendChild(n),a.insertBefore(n,s?t:d)}},t=new i.a(".switching-area",{draggable:".switching-box",droppable:".switching-area",axis:"y"});return t.on("dragstart",(function(n){var t=n.target;n.isDraggableElement&&(n.preventDefault(),e&&e.remove(),(e=t.cloneNode(!0)).classList.add("drag-clone"),e.classList.remove("n-flat-low"),t.closest(".switching-area").insertBefore(e,n.target),t.classList.add("grabbed"),t.classList.add("n-float-low"),t.classList.remove("n-flat-low"))})),t.on("dragover",(function(t){n(t,e)})),t.on("drop",(function(e){var t=e.target;e.isDraggableElement&&n(e,t)})),t.on("dragend",(function(n){var t=n.target;n.isDraggableElement&&(e.remove(),Array.from(n.container.children).forEach((function(e,n){return e.dataset.index=n+1})),setTimeout((function(){t.classList.add("n-flat"),t.classList.remove("n-float"),t.classList.remove("grabbed")}),0))})),function(){return t.destroy()}}),[]),r.a.createElement(r.a.Fragment,null,r.a.createElement(o.m,{readonly:!0,title:"Switching",context:"you can do switching as well.",code:l.g},r.a.createElement("ul",{className:"switching-area","data-example":!0},r.a.createElement("li",{className:"switching-box n-no-shadow n-flat-low","data-index":"1"},r.a.createElement("h5",null,"Apple")),r.a.createElement("li",{className:"switching-box n-no-shadow n-flat-low","data-index":"2"},r.a.createElement("h5",null,"Peach")),r.a.createElement("li",{className:"switching-box n-no-shadow n-flat-low","data-index":"3"},r.a.createElement("h5",null,"Orange")),r.a.createElement("li",{className:"switching-box n-no-shadow n-flat-low","data-index":"4"},r.a.createElement("h5",null,"Grapes")),r.a.createElement("li",{className:"switching-box n-no-shadow n-flat-low","data-index":"5"},r.a.createElement("h5",null,"Banana"))),r.a.createElement(o.k,{variant:"warning",title:"remember",context:r.a.createElement(r.a.Fragment,null,"When using ",r.a.createElement("b",null,"droppable")," make sure to add ",r.a.createElement("b",null,"[hidden] ","{"," display: none !important; ","}")," in your stylesheet. due to some changes in browsers which ",r.a.createElement("b",null,"hidden")," property gets overridden."),style:{marginTop:"20px"}})))}},781:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),i=t(13),o=t(630),l=[{name:"new Dragger(",type:"",default:"",description:""},{name:"container,",type:"string | element | node",default:"-",description:"it is the container or the playground of the Dragger."},{name:"options",type:"object",default:"-",description:"It is the options of the Dragger.",data:[{name:"{",type:"",default:"",description:""},{name:"draggable,",type:"string",default:"-",description:"it is the query selector of the element children of container which are allowed to be drag."},{name:"droppable,",type:"string",default:"-",description:"it is the query selector of the element children of container which are allowed to be drop."},{name:"axis",type:"'x' | 'y'",default:"null",description:r.a.createElement(r.a.Fragment,null,"when you have ",r.a.createElement("b",null,"draggable"),". you can limit its axis by x or y.")},{name:"allowBoundContainer,",type:"boolean",default:"true",description:"it is use bound the draggable elements inside the container element."},{name:"allowExactDraggable,",type:"boolean",default:"false",description:"it is use to target the exact draggable element, when true even if you targeted the children of the draggable elements, it still will not move."},{name:"autoscroll,",type:"boolean",default:"false",description:"it is use to allow auto scroll in the container."},{name:"autoscrollSensitivity,",type:"number",default:"20",description:"it is sensivity radius of the auto scroll when dragging in the container edge."},{name:"eventListenerOption",type:"boolean | object",default:"false",description:"you can set your own options in addEventListener."},{name:"}",type:"",default:"",description:""}]},{name:")",type:"",default:"",description:""}],s=[{name:"dragstart",type:"-",default:"-",description:"it will be invoked when the user touch or click the container"},{name:"dragmove",type:"-",default:"-",description:"it will be invoked when the user is dragging inside container"},{name:"dragend",type:"-",default:"-",description:"it will be invoked when the user is drop the touch or click inside container"},{name:"dragenter",type:"-",default:"-",description:"it will be invoked when the user drag entered the droppable element inside container"},{name:"dragover",type:"-",default:"-",description:"it will be invoked when the user drag is moving in the droppable element inside container"},{name:"dragexit",type:"-",default:"-",description:"it will be invoked when the user drag exited the droppable element inside container"},{name:"drop",type:"-",default:"-",description:"it will be invoked when the user droped inside the droppable element"}],d=[{name:"Instance.on",type:"void",default:"-",description:"it is the method to add Dragger event listener",data:[{name:"Instance.on(",type:"",default:"",description:""},{name:"eventType",type:"string",default:"-",description:"it is the type of event you want to add. the allowed type are the following dragstart, dragend, dragend, dragenter, dragexit and drop",data:s},{name:"callback",type:"function",default:"-",description:"it is the callback that will be invoke when the eventType is triggered."},{name:"): void",type:"",default:"",description:""}]},{name:"Instance.off",type:"void",default:"-",description:"it is the method to remove Dragger event listener",data:[{name:"Instance.off(",type:"",default:"",description:""},{name:"eventType",type:"string",default:"-",description:"it is the type of event you want to remove. the allowed type are the following dragstart, dragmove, dragend, dragenter, dragexit and drop",data:s},{name:"): void",type:"",default:"",description:""}]},{name:"Instance.destroy",type:"void",default:"-",description:"it is use to destroy and kill the Dragger."}],c=[{name:"type",type:"string",default:"-",description:"it is event type."},{name:"preventDefault",type:"method",default:"-",description:"it is use to prevent default."},{name:"stopPropagation",type:"method",default:"-",description:"it is use to stop the propagation."},{name:"originalEvent",type:"object",default:"-",description:"it is the original event"},{name:"clientX",type:"number",default:"-",description:"it is the x position of the cursor in window"},{name:"clientY",type:"number",default:"-",description:"it is the y position of the cursor in window"},{name:"startX",type:"number",default:"-",description:"it is the start x position of the cursor in container."},{name:"startY",type:"number",default:"-",description:"it is the start y position of the cursor in container."},{name:"moveX",type:"number",default:"-",description:"it is the current x position of the cursor in container."},{name:"moveY",type:"number",default:"-",description:"it is the current y position of the cursor in container."},{name:"endX",type:"number",default:"-",description:"it is the end x position of the cursor in container."},{name:"endY",type:"number",default:"-",description:"it is the end y position of the cursor in container."},{name:"isDraggableElement",type:"boolean",default:"-",description:"it indicates if the targeted element is draggable."},{name:"target",type:"element | node",default:"-",description:"it is the element which is targeted."},{name:"container",type:"element | node",default:"-",description:"it is the element container."},{name:"droppable (dragover, dragenter, drop)",type:"element | node",default:"-",description:"it is the element inside droppable container where the target is landed. it might be the children of the droppable container."},{name:"currentDroppable (dragover, dragenter, dragexit, drop)",type:"element | node",default:"-",description:"it is the droppable container element which you want to drop (dragenter), you fail to drop (dragexit) or you dropped (drop)."}],g=function(){return r.a.createElement(i.l,{title:"Dragger"},r.a.createElement(i.q.ForAPI,{nameLabel:"Argument",data:l}))},p=function(){return r.a.createElement(i.l,{title:"Dragger Methods"},r.a.createElement(i.q.ForAPI,{nameLabel:"Method",typeLabel:"Return",data:d}))},u=function(){return r.a.createElement(i.l,{title:"Event Properties"},r.a.createElement(i.q.ForAPI,{data:c}))},m=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(o.Installation,null),r.a.createElement(o.Importing,null),r.a.createElement(o.GettingStarted,null),r.a.createElement(o.Autoscroll,null),r.a.createElement(o.RawDrag,null),r.a.createElement(o.Droppable,null),r.a.createElement(o.Cloning,null),r.a.createElement(o.Switching,null),r.a.createElement(i.a,{title:"API"},r.a.createElement(g,null),r.a.createElement(p,null),r.a.createElement(u,null)))},b=function(){return r.a.createElement(i.n.ScrollNav,{list:[{label:"Installation"},{label:"Imports"},{label:"Getting Started",sub:[{label:"Autoscroll"},{label:"Raw Draggable"},{label:"Droppable"},{label:"Cloning"},{label:"Switching"}]},{label:"API",sub:[{label:"Dragger"},{label:"Dragger Methods"},{label:"Event Properties"}]}]})};n.default=function(){var e="Draggerjs (not publish yet)",n="is a pure vanila javascript without dependency which is use to drag and drop elements in easy and understabdable way.";return r.a.createElement(r.a.Fragment,null,r.a.createElement(i.e,null,r.a.createElement(i.e.Meta,{title:"".concat(e," - Javascript Libraries | Mytabworks "),description:n,image:"/images/icons/icon-512x512.png"})),r.a.createElement(i.i,{title:e,context:n,main:r.a.createElement(m,null),side:r.a.createElement(b,null)}))}}}]);
//# sourceMappingURL=6.0f72bc99.chunk.js.map