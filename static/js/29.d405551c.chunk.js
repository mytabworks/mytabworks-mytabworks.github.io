(this["webpackJsonpbitter-code"]=this["webpackJsonpbitter-code"]||[]).push([[29],{772:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),i=n(39),l=n(13),o=function(){return r.a.createElement(l.m,{readonly:!0,title:"Installation",code:"npm i reaouter",language:"js",theme:{plain:{color:"rgb(215,215,215)",backgroundColor:"rgb(86,86,86)"},styles:[]}})},s=function(){return r.a.createElement(l.m,{readonly:!0,title:"Imports",code:'import { \n    Router, \n    Link, \n    Route, \n    SubRouter, \n    RouteNotFound, \n    Redirect,   \n    useLocation,  \n    useParam,  \n    useHistory  \n} from "reaouter";'})},u=function(){return r.a.createElement(l.l,{title:"useLocation",context:"It is use to get the nested routes url and path to be a reference to its children routes and links."},r.a.createElement(l.q.ForAPI,{data:[{name:"const {",type:"",default:"",description:""},{name:"url,",type:"string",default:"-",description:"It is the sliced URL, based on the path of route you are under with."},{name:"path,",type:"string",default:"-",description:"It is the path of the route you are under with."},{name:"search,",type:"string",default:"-",description:"It is use to get url parameters."},{name:"hash,",type:"string",default:"-",description:"It is use to get url hash."},{name:"pathname",type:"string",default:"-",description:"It is the current URL which is complete without slice."},{name:"} = useLocation()",type:"",default:"",description:""}]}))},c=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(l.m,{readonly:!0,title:"useParams",context:"It is use to get the parameters (you declared in path) in a form of key value pair.",code:'/*http://localhost/branch/1/5/add*/\nconst Branch = () => {\n    const { param_one, param_two } = useParams()\n    return <div>{`Do the rest: ${param_one}`}</div>\n}\n\n<Route path="/branch/:param_one/:param_two/add" render={<Branch />} />'}),r.a.createElement(l.k,{context:"You cannot use it, unless you are under the Route component.",style:{marginTop:"-20px",marginBottom:"20px"}}))},d=function(){return r.a.createElement(l.l,{title:"useHistory",context:"It is use to back from previous url, forward to url that once backed, and redirect to another url beside Redirect Component, but its use is outside the JSX."},r.a.createElement(l.q.ForAPI,{data:[{name:"const {",type:"",default:"",description:""},{name:"url,",type:"string",default:"-",description:"It is current url"},{name:"back,",type:"function",default:"-",description:"It is use to back from previous url",data:[{name:"function (",type:"",default:"",description:""},{name:"index",type:"number",default:"-1",description:"It is the index you want to go back."},{name:") { return void }",type:"",default:"",description:""}]},{name:"forward,",type:"function",default:"-",description:"It is use forward to url that once backed.",data:[{name:"function (",type:"",default:"",description:""},{name:"index",type:"number",default:"1",description:"It is the index you want to go forward."},{name:") { return void }",type:"",default:"",description:""}]},{name:"push,",type:"function",default:"-",description:"It is use redirect and to push url in the history.",data:[{name:"function (",type:"",default:"",description:""},{name:"to,",type:"string",default:"-",description:"It is url where this redirect will lead you."},{name:"state",type:"object",default:"{}",description:"It will be attached alongside with the URL on the history and will be remembered even you go back or forward history."},{name:") { return void }",type:"",default:"",description:""}]},{name:"replace,",type:"function",default:"-",description:"It is use redirect and to replace the previous url instead to push another in the history.",data:[{name:"function (",type:"",default:"",description:""},{name:"to,",type:"string",default:"-",description:"It is url where this redirect will lead you."},{name:"state",type:"object",default:"{}",description:"It will be attached alongside with the URL on the history and will be remembered even you go back or forward history."},{name:") { return void }",type:"",default:"",description:""}]},{name:"state",type:"object",default:"{}",description:"it will get the state that has been attached alongside the URL"},{name:"} = useHistory()",type:"",default:"",description:""}]}))},h=[{name:"scrollRestoration",type:'"auto" | "manual"',default:"auto",description:r.a.createElement(r.a.Fragment,null,"The ",r.a.createElement("b",null,"scrollRestoration")," property of History interface allows web applications to explicitly set default scroll restoration behavior on history navigation.",r.a.createElement("br",null),r.a.createElement("b",null,"auto")," - The location on the page to which the user has scrolled will be restored.",r.a.createElement("br",null),r.a.createElement("b",null,"manual")," - The location on the page is not restored. The user will have to scroll to the location manually.")},{name:"legacy",type:"boolean",default:"false",description:"the hash routing will be applied."},{name:"onUpdate",type:"function",default:"-",description:"it will be called in every url changes and immidiately in initial load.",data:[{name:"function({",type:"",default:"",description:""},{name:"url",type:"string",default:"-",description:"the new or current url."},{name:"prevUrl",type:"string",default:"-",description:"the old or previous url."},{name:"matched",type:"boolean",default:"-",description:"it determine if the new url has matched in routes."},{name:"initial",type:"boolean",default:"-",description:"when true, it means it was called by initial load."},{name:"}) { return void }",type:"",default:"",description:""}]},{name:"children",type:"element",default:"-",description:"A children element to render."}],m=[{name:"as",type:"elementType",default:"<a>",description:"You can use a custom element type for this component."},{name:"label",type:"string",default:"-",description:"The label of the link."},{name:"to",type:"string",default:"-",description:"The URL location where this link will lead you to certain path of route."},{name:"activable",type:"boolean",default:"true",description:r.a.createElement(r.a.Fragment,null,"When ",r.a.createElement("b",null,"true"),", and the ",r.a.createElement("b",null,"to")," or even related ",r.a.createElement("b",null,"Link")," ",r.a.createElement("b",null,"to")," is matched the current URL then, it will be labeled as class"," ",r.a.createElement("b",null,"active"),". When ",r.a.createElement("b",null,"false"),", it will be ignored even it is matched the current URL.")},{name:"nested",type:"boolean",default:"false",description:'When it is true and activable is true, then it will consider the anchor as an active state eventhough it is not exactly match as long the first few characters in "to" matched the URL.'},{name:"state",type:"object",default:"-",description:"When clicked, The state will be push alongside with the url in the history and will be remembered even you go back or forward history."}],p=[{name:"render",type:"element",default:"-",description:"A children element to render when path is matched."},{name:"path",type:"string",default:"-",description:"The route path whenever the current url matched then, the element you put in render property will be shown or rendered."},{name:"nested",type:"boolean",default:"false",description:"When it is true, then the router will know that this is not a real route end point. so when it is matched, it will move on to the decendant routes find the real route end point. but if there has no decendant route that has matched then it is still counted as no matched"},{name:"exact",type:"boolean",default:"true",description:"When it is true, then it will only match if the path model is precisely matched to the current url and even the path is just a nested path. It will be matched if the certain part is exactly matched."},{name:"immutable",type:"boolean",default:"false",description:"When it is true, then the page scroll will not move to top to reset. It is use when making a tabs, open a modals or show anything using SubRouter as midiator. as long you put property exact to false so it will allow routes inside it."}],f=[{name:"render",type:"element",default:"-",description:"A children element will be rendered immidiately whenever there is no matched in all the routes."}],y=[{name:"render",type:"element",default:"-",description:"A children element to render when path is matched."},{name:"path",type:"string",default:"-",description:"The route path whenever the current url matched then, the element in render property is will be rendered."}],b=[{name:"path",type:"string",default:"-",description:"The route path when ever the current url matched it. then, it will be redirect to."},{name:"to",type:"string",default:"-",description:"The url where this redirect will lead you to certain path when matched."},{name:"allowReturnBack",type:"boolean",default:"false",description:"When true, it will allow you to turn back to the previous url before redirect."}],w=function(){return r.a.createElement(l.l,{title:"Router",context:"It will makes your react pages dynamic."},r.a.createElement(l.q.ForAPI,{data:h}))},g=function(){return r.a.createElement(l.l,{title:"Link",context:"It provides navigation to your application."},r.a.createElement(l.q.ForAPI,{data:m}))},E=function(){return r.a.createElement(l.l,{title:"Route",context:"It is responsible to render some UI or component when its path matches the current url."},r.a.createElement(l.q.ForAPI,{data:p}))},v=function(){return r.a.createElement(l.l,{title:"RouteNotFound",context:"It is responsible whenever there is no matched on all the routes."},r.a.createElement(l.q.ForAPI,{data:f}))},I=function(){return r.a.createElement(l.l,{title:"SubRouter",context:r.a.createElement(r.a.Fragment,null,"It will act as a ",r.a.createElement("b",null,"nested route")," and a ",r.a.createElement("b",null,"router")," at the same time. It is very effective when the app does have a lot of nested routes because whenever you are navigating to its territory, it will not bother the"," ",r.a.createElement("b",null,"main router")," to checked all the routes unless the current url is outside its nested domain. But if the url doesn't matched, and it is under it's nested domain then, you need to handle your own ",r.a.createElement("b",null,"RouteNotFound")," inside it.")},r.a.createElement(l.q.ForAPI,{data:y}))},k=function(){return r.a.createElement(l.l,{title:"Redirect"},r.a.createElement(l.q.ForAPI,{data:b}))},R=function(){return r.a.createElement(i.Chaperone,{triggerId:"reaouter",onDone:function(){return console.log("done")},onSkip:function(e){return console.log("skip")}},r.a.createElement("p",null,"there is a bit bug in router and subrouter timeout for isNoMatch maybe use requestIdleCallback is the solution"),r.a.createElement(o,null),r.a.createElement(s,null),r.a.createElement(l.a,{title:"API"},r.a.createElement(w,null),r.a.createElement(g,null),r.a.createElement(E,null),r.a.createElement(v,null),r.a.createElement(I,null),r.a.createElement(k,null),r.a.createElement(l.a,{as:"h3",title:"Hooks"},r.a.createElement(u,null),r.a.createElement(d,null),r.a.createElement(c,null))))},x=function(){return r.a.createElement(l.n.ScrollNav,{list:[{label:"Installation"},{label:"Importing"},{label:"Getting Started",sub:[{label:"Controllable Fields"}]},{label:"API",sub:[{label:"Router"},{label:"Link"},{label:"Route"},{label:"RouteNotFound"},{label:"SubRouter"},{label:"Redirect"},{label:"Hooks",sub:[{label:"useLocation"},{label:"useHistory"},{label:"useParams"}]}]}]})};t.default=function(){var e="Reaouter (not publish yet)",t="is a modern react routing library that is delightfully made with hooks. \n\tIt is so clean to use and easy and understand because it has few imports with few properties in each.\n\tEven though it is few imports with few properties in each, yet it is powerful and smarter, which \n\tcan be use in all environment, and even in scaled without head scratcher. one of it's significant feature is \n\tthe SubRouter, it is use to reduce paths matching in vast environment which can be helpful to your app performances.";return r.a.createElement(r.a.Fragment,null,r.a.createElement(l.e,null,r.a.createElement(l.e.Meta,{title:"".concat(e," - React Libraries | Mytabworks"),description:t.slice(0,100),image:"/images/icons/icon-512x512.png"})),r.a.createElement(l.i,{title:e,context:t,main:r.a.createElement(R,null),side:r.a.createElement(x,null)}))}}}]);
//# sourceMappingURL=29.d405551c.chunk.js.map